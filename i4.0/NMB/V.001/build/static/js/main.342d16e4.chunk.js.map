{"version":3,"sources":["utils/HttpClient.js","components/monthlyQA/monthlyQA.js","constants/index.js","components/home/home.js","components/header/header.js","components/login/login.js","components/register/register.js","components/forgotpassword/forgotpassword.js","components/changepassword/changepassword.js","components/LARInspection/Daily_LAR_by_Model.js","components/LARInspection/Monthly_LAR_report_by_Model.js","components/LARInspection/Monthly_LAR_report_all_Model.js","components/QAInspection/Product_hold_control.js","components/QAInspection/QA_lots_status.js","components/OPT/Operator_tracking_data.js","components/QPM/Trace_back_function_test.js","components/dodata/Trace_back_shipment.js","components/ROTOR/ROTOR.js","components/MOTORDIM/MOTORDIM.js","components/MOTORDIM/MOTORDIM_AiPress.js","components/MOTORDIM/MOTORDIM_RTB.js","components/MOTOREWMS/MOTOREWMS.js","components/MOTORHIPOT/MOTORHIPOT.js","components/MOTORHE/MOTORHE.js","components/stack_height/stack_height.js","components/traceback/traceback.js","components/dataanalysis/dataRotor.js","components/dataanalysis/dataanalysis.js","components/information/information.js","components/dataML/dataML.js","components/dataML/dataML2.js","components/QAInspection/QAInspection.js","components/register/Result.js","components/QAInspection/QAInspectionByQANo..js","components/sidemenu/sidemenu.js","components/footer/footer.js","components/GRotorLine/GRotorLine.js","components/QCAlert/QCAlert.js","components/VMI/VMI.js","components/Rejection/Rejection.js","components/Vrecode/Vrecode.js","components/Rejection/RejectByQANo..js","components/Rejection/report_per_producion_team.js","components/Rejection/MQTByModel.js","components/Master/MasterItemNO.js","components/Master/MasterSupplier.js","components/Master/MasterLine.js","components/Daily/Associate_Rule_Mining.js","components/Daily/DailyML1.js","components/packing/Daily_Report_Packing.js","components/Rejectbyteam/Rejectbyteam.js","components/OutPutCo2/Output_Final_Before_QA.js","components/OutPutCo2/Production_hold_record.js","components/report/report.js","components/AfterQa1/Output_Final_after_QA.js","components/Shipmentdata/Shipmentdata.js","components/Packedhalfpallet/Packed_half_pallet.js","components/QAInspection/For_Inspection_tags_status.js","components/shipinfo/shipinfo.js","components/home/updating.js","components/checkData/CheckData.js","components/MC_ERROR/Auto_machine_alarm_history.js","components/trace_back_ng/trace_back_ng.js","components/MC_ERROR/MC_ERROR_test.js","components/Report_printlabal/Request_label_printing_report.js","components/KPIVranking/KPIVranking.js","components/MLRanking/MLRanking.js","components/MC_ERROR/Auto_machine_alarm_history_Month.js","components/sidemenu/Engineer.js","components/sidemenu/Quality.js","components/sidemenu/Production.js","components/sidemenu/Data_Analysis.js","components/sidemenu/PCMC.js","components/sidemenu/PE_MM.js","components/QAInspection/Master_ml.js","components/Daily_store_issue/Daily_store_issue.js","components/register/register_Master.js","components/trace_Dynamic_Parallelism/trace_Dynamic_Parallelism.js","App.js","reportWebVitals.js","index.js"],"names":["isAbsoluteURLRegex","axios","interceptors","request","use","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","jwtToken","wrap","_context","prev","next","test","url","join","apiUrl","localStorage","getItem","key","JWT_TOKEN","headers","timeout","abrupt","stop","_x","apply","arguments","response","error","console","log","JSON","stringify","undefined","isCancel","Promise","reject","code","NOT_CONNECT_NETWORK","message","NETWORK_CONNECTION_MESSAGE","httpClient","monthlyQA","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","componentDidMount","getModel","getInsType","doGetDataReport","_callee2","modelLabel","result","rawData","i","_rawData$","_context2","state","model","label","get","server","MONTHLYQA_URL","insType","startDate","finishDate","sent","data","listRawData","length","push","_toConsumableArray","setState","Raw_Dat","report","isDisable","_callee3","array","options","_context3","MODELMONTHLYQA_URL","map","d","Model_group","listModel","_callee4","_context4","INSTYPEQA_URL","InspectionType","listInsType","renderReport","item","_jsxs","children","_jsx","align","Number","toLocaleString","maximumFractionDigits","moment","format","optionSelected","_createClass","value","_ref7","_this2","className","style","paddingTop","href","class","Select","this","onChange","_ref5","_callee5","e","_context5","placeholder","_ref6","_callee6","_context6","_x2","target","type","disabled","onClick","Swal","fire","icon","title","timer","allowOutsideClick","didOpen","_didOpen","_callee7","_context7","showLoading","close","then","Model_NO","text","Model","marginTop","CSVLink","filename","height","_defineProperty","width","Component","YES","_server","LOGIN_URL","REGISTER_URL","FORGOTPASSWORD_URL","CHANGEPASSWORD_URL","USER_URL","YIELD_URL","MASTER_URL","DATAAVG_URL","MODEL_URL","PARAMETER_URL","PART_URL","LINE_URL","MATCHING_URL","MATCHINGDAY_URL","MATCHMODEL_URL","MATCHPARAM_URL","MATCHPART_URL","MATCHLINE_URL","MATCHMACHINE_URL","MOTORDIM_URL","MOTORDIMDAY_URL","MOTORDIMMODEL_URL","MOTORDIMLINE_URL","MOTORDIMPARAM_URL","MOTORDIMMACHINE_URL","MOTORDIMAI_URL","MOTORDIMAIDAY_URL","MOTORDIMAIMODEL_URL","MOTORDIMAILINE_URL","MOTORDIMAIPARAM_URL","MOTORDIMAIMACHINE_URL","MOTORDIMAIPRESS_URL","MOTORDIMRTB_URL","MOTORDIMRTBDAY_URL","MOTORDIMRTBMODEL_URL","MOTORDIMRTBLINE_URL","MOTORDIMRTBPARAM_URL","MOTORDIMRTBMACHINE_URL","MOTORDIMRTBAI_URL","MOTOREWMS_URL","MOTOREWMSDAY_URL","MOTOREWMSMODEL_URL","MOTOREWMSLINE_URL","MOTOREWMSPARAM_URL","MOTOREWMSMACHINE_URL","MOTORHIPOT_URL","MOTORHIPOTDAY_URL","MOTORHIPOTMODEL_URL","MOTORHIPOTLINE_URL","MOTORHIPOTPARAM_URL","MOTORHIPOTMACHINE_URL","MOTORHE_URL","MOTORHEDAY_URL","MOTORHEMODEL_URL","MOTORHELINE_URL","MOTORHEPARAM_URL","MOTORHEMACHINE_URL","STACKHI_URL","STACKHIDAY_URL","STACKHIMODEL_URL","STACKHILINE_URL","STACKHIPARAM_URL","STACKHIMACHINE_URL","SPECCONTROL_URL","SPECMODEL_URL","SPECMODELNAME_URL","SPECPARA_URL","SPECPART_URL","SPECMC_URL","CONTROLLIMIT_URL","MODELCONTROL_URL","PARTCONTROL_URL","PARACONTROL_URL","LINECONTROL_URL","MODELEMAIL_URL","PARTEMAIL_URL","PARAEMAIL_URL","LINEEMAIL_URL","EMAILALARM_URL","MOTORANALYSIS_URL","MOTORANALYSISDAY_URL","MOTORPROCESS_URL","MOTORMODEL_URL","MOTORLINE_URL","MOTORMC_URL","ROTORANALYSIS_URL","ROTORANALYSISDAY_URL","ROTORPROCESS_URL","ROTORMODEL_URL","ROTORLINE_URL","ROTORMC_URL","GRLINE_URL","DIECAST_URL","DIECASTDAY_URL","DIECASTMODEL_URL","DIECASTMACHINE_URL","DIECASTPARAMETER_URL","VMI_URL","VMIDAY_URL","VMIMODEL_URL","VMILINE_URL","VMIPROCESS_URL","MOTORML_URL","MODELML_URL","LINEML_URL","KPOVML_URL","DATASOURCEKPOV_URL","DATASOURCEMBA_URL","DATASOURCEROTOR_URL","DATASOURCEBASE_URL","PARAMML_URL","MOTORML2_URL","MODELML2_URL","LINEML2_URL","PARAMML2_URL","MODELQA_URL","INSTYPE_URL","REPORT_URL","REPORT2_URL","REJECTMODEL_URL","REJECTTYPE_URL","REJECTBYMODEL_URL","REJECTBYQA_URL","ITEMNOS_URL","DATECODE_URL","DATECODEALL_URL","MOVEMENTQA_URL","RESULT_URL","ITEMNOSMOVEMENT_URL","DEFECTYEAR_URL","DEFECTMONTH_URL","DEFECTMODEL_URL","DEFECTMTYPE_URL","DEFECTNG_URL","LARYEAR_URL","LARMONTH_URL","LAR_URL","MQTYEAR_URL","MQTMONTH_URL","MQT_URL","MQTYEARMODEL_URL","MQTMONTHMODEL_URL","MQTMODEL_URL","MQTEMP_URL","MASTERGROUP_URL","MASTERITEMNO_URL","LOGIN_PASSED","API_KEY","USER_LV","USER_NAME","USER_EMP","Home","doGetData","xAxis","yAxis","yAxis2","index","Date","renderTableRow","add","userLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","_Fragment","display","flexDirection","alignItems","src","alignSelf","useStyles","makeStyles","logo","fontFamily","fontWeight","color","menuButton","size","textAlign","toolbar","justifyContent","header","backgroundColor","headersData","Header","_useStyles","useEffect","pushmenuButton","document","querySelector","click","Typography","getMenuButtons","Button","to","component","RouterLink","AppBar","concat","navbar","Toolbar","Link","alt","Login","autoLogin","history","doLogin","post","login_result","setItem","jwt","resultlogin","levelUser","empNumber","pathname","username","getData","password","pwType","pwIcon","onSubmit","preventDefault","required","id","htmlFor","Register","doRegister","rePassword","api_result","email","name","defaultValue","ForgotPassword","doForgot","onClose","window","location","Changepassword","doChangePassword","newPassword","confirmPassword","oldPassword","oldpwType","oldpwIcon","newpwType","newpwIcon","repwType","repwIcon","Daily_LAR_by_Model","getyear","getMonth","yAxis1","yAxis3","yAxis4","yAxis5","yAxis6","year","Month","DATE","Cleanroom_Percent","FDB_Percent","Loose_part_Percent","Washing_Percent","Whiteroom_Percent","FAC2_Percent","LAR_Percent","seriesY","chart","stacked","show","responsive","breakpoint","legend","offsetX","offsetY","dataLabels","enabled","enabledOnSeries","xaxis","categories","yaxis","min","max","axisTicks","axisBorder","labels","colors","tooltip","fill","opacity","listyear","listMonth","Model_Name","renderreport1","Align","renderreport2","renderreport3","renderreport4","renderreport6","renderreport5","series2","seriesCleanroom","options2","_ref8","_callee8","_context8","_ref9","_callee9","_context9","_x3","_ref10","_callee10","_context10","_x4","_callee11","_context11","ReactApexChart","series","Monthly_LAR_report_by_Model","LARMONTHLY_URL","LARMODEL_URL","LARTYPE_URL","role","Monthly_LAR_report_all_Model","_this$state","_options","yInput","yReject","yRejectPP","resultGraph","LAR","Input","Reject","Reject_Percent","stroke","seriesName","opposite","fixed","horizontalAlign","getMaxValue","_step","Infinity","maxOption","_iterator","_createForOfIteratorHelper","s","n","done","option","parseFloat","isNaN","err","f","getYear","maxYearOption","listYear","selectedMaxYear","maxMonthOption","selectedMaxMonth","renderreport","ModelName","Product_hold_control","getLine_No","getStatus","getAccess_by","showData","handleCheckboxChange","prevState","handleDateOptionChange","event","selectedDateOption","REPORTHOLD_URL","Line","Status","Access_by","doGetDataReport2","_rawData$2","QAHOLD_URL","QANumber","listRawData2","Raw_Dat2","report2","doGetDataReport3","_rawData$3","HOLDNUMBER_URL","Holdnumber","listRawData3","Raw_Dat3","report3","DoGetAll","_rawData$4","isLoadingCheckboxAll","CHECKBOXALL_URL","CHECKBOXALL","t0","DoGetAllFORPC","_rawData$5","isLoadingHoldAll","HOLDFORPC_URL","HOLDFORPC","ModelHoldQA_URL","ModelGroup","LINEQAHOLD_URL","Line_No","listLine_No","StatusQAHOLD_URL","listStatus","Access_byHOLD_URL","listAccess_by","renderReport2","renderReport3","renderAll","renderforpc","handleSubmit","checkboxChecked","checkboxHoldNumber","handleCheckHoldNumber","selectedOption","checkboxbyModel","Download_Hold_ALL","Hold_ALL_PC","report1","HoldNumber","_resetHoldnumber","_resetQanumber","_callee12","_context12","_this$state2","checked","_this2$setState","_this2$setState2","_this2$setState3","_callee13","_context13","_callee14","_context14","_ref13","_callee15","_this2$setState4","_context15","resetHoldnumber","placeHolder","_callee16","_context16","Lot_QA","_ref14","_callee17","_this2$setState5","_context17","resetQanumber","_didOpen2","_callee18","_context18","_ref15","_callee19","_context19","_ref16","_callee20","_context20","_ref17","_callee21","_context21","_x5","_ref18","_callee22","_context22","_x6","_this2$setState6","_didOpen3","_callee23","_context23","zIndex","QA_lots_status","QANumber1","QANumber2","QANumber3","QANumber4","QANumber5","QANumber6","QANumber7","QANumber8","QANumber9","QANumber10","getresult","InspectionResult","listresult","renderReport1","stc","newDate","_ref4","substring","_x7","_ref11","_x8","_ref12","_x9","_x10","QA_Number","Operator_tracking_data","SHIFT_A","SHIFT_B","SHIFT_C","SHIFT_M","SHIFT_N","SHIFT_D","REPORTOPT_URL","listData","SHIFTOPT_URL","shift","listshift","Trace_back_function_test","doGetQPMbybarcodemotor","QPMBYBARCODEMOTOR_URL","barcodemotor","Raw_Dat1","seriesY2","lotqa","_ref2","Barcode","Trace_back_shipment","doGetdodatabylotqa","DODATABYLOTQA_URL","dobylotqa","listRawData1","doGetdodatabyinvoid","DODATABYINVOID_URL","dobyinvoid","_ref3","LotQA","DO_Num","ROTOR","getParameter","getProductionline","getMachine","yAxisUSL","yAxisLSL","yAxisCL","yAxisUCL","yAxisLCL","seriesMC","yAxisSD","yAxisLCLSD","yAxisUCLSD","yAxisCLSD","seriesMCSTD","_i","datatable","_i2","selectDate","parameter","productionline","selectMCname","resultAVG","Time","seriesUSL","seriesLSL","seriesCL","seriesUCL","seriesLCL","Object","assign","seriesSTD","seriesLCL_STD","seriesUCL_STD","seriesCL_STD","listResult","doGetDataDay","resultday","xAxisday","rawData1","yAxisday","yAxisUSLday","yAxisLSLday","yAxisUCLday","yAxisLCLday","yAxisCLday","seriesMCday","yAxisdaySD","yAxisUCLdaySD","yAxisLCLdaySD","yAxisCLdaySD","seriesMCSTDDay","_i3","datatableday","_i4","resultAVGday","seriesYday","seriesSTDDay","listResultday","titleday","dataday","isDisableDays","Parameter","listParameter","listProductionline","MCname","listMachine","handleChange","Newevent","json_string","keys","tablerow","Machine","renderTableRowday","tablerowday","bind","_assertThisInitialized","isMulti","displayValue","selectionLimit","allowSelectAll","closeMenuOnSelect","hideSelectedOptions","fontSize","showHourly","showDaily","j","AVG","reload","Chart","showForSingleSeries","showForNullSeries","showForZeroSeries","markers","dashArray","MOTORDIM","_i5","Machine_no","getAiPress","aiPress","listAiPress","Fixture","getRTB","RTB","listRTB","MOTOREWMS","_i6","MOTORHIPOT","yAxisLSLdaySD","MOTORHE","STACKHEIGHT","count","dataCount","seriesMCCount","countDay","dataCountDay","seriesMCCountDay","traceback","isMotornoDuplicate","listMotorno","includes","motorno","isRotornoDuplicate","listRotorno","rotorno","doGetDataMotor","newRotor","newMotordim","newMotorEWMS","newMotorhipot","newMotorDL","TRACEBACK_URL","resultrotor","resultdim","resultEWMS","resulthipot","rotor","motordim","motorEWMS","motorhipot","motorDL","motorRcard","motorDcard","motorEcard","motorFcard","doGetDataRotor","newAutoGerman","newAutoKZW","newManualAX","newManualOil","TRACEBACKROTOR_URL","AutoGerman","AutoKZW","ManualAX","ManualOil","autoGcard","autoKcard","manualAXcard","manualOFcard","renderTableRotor","renderTableMotorDim","renderTableMotorEWMS","renderTableMotorFuncTest","renderTableAutoGerman","renderTableAutoKZW","renderTableManualAX","renderTableManualOil","paddingBottom","dataRotor","getmodelRotor","getprocessRotor","getlineRotor","getmachineRotor","doGetRotor","modelRotor","processRotor","lineRotor","machineRotor","Process","listProcess","process","listlineRotor","listmachineRotor","listmodelRotor","listprocessRotor","removeItem","Dataanalysis","doGetMotor","line","machine","selectDateRotor","getProcess","getLine","listLine","_ref19","Information","getModelName","getPart","getModelforcontrollimit","getPartforcontrollimit","getParaforcontrollimit","getModelEmail","getPartEmail","getParaEmail","doSQLupdate","SQLupdate","Fullname","Part","USL","CL","LSL","doCalControlLimit","dataControl","Modelcontrol","Paracontrol","Linecontrol","StartCalcDate","FinishCalcDate","doEmailAlarm","dataEmail","ModelEmail","ParaEmail","LineEmail","Email","listModelName","listPart","listModelforcontrollimit","listPartforcontrollimit","Partcontrol","listParaforcontrollimit","getLineforcontrollimit","listLineforcontrollimit","listModelEmail","listPartEmail","PartEmail","listParaEmail","getLineEmail","listLineEmail","Timestamp","_ref20","_ref21","HandleClickSuccess","_ref22","_ref23","_ref24","_callee24","_context24","_ref25","_callee25","_context25","_ref26","_callee26","_context26","_ref27","_callee27","_context27","_x11","_ref28","_callee28","_context28","_x12","_ref29","_callee29","_context29","_x13","DataML","getDataSourceKPOV","getDataSourceMBA","getDataSourceRotor","getDataSourceBase","doGetDataML","allMBA","allRotor","allSHA","allDataMotor","keyAmounts","maxkeys","k","KPOV","KPOV_Table","KPIV1","KPIV1_Table","KPIV2","KPIV2_Table","KPIV3","KPIV3_Table","KPIV4","KPIV4_Table","KPIV5","KPIV5_Table","KPIV6","KPIV6_Table","KPIV7","KPIV7_Table","KPIV8","KPIV8_Table","KPIV9","KPIV9_Table","KPIV10","KPIV10_Table","KPIV11","KPIV11_Table","KPIV12","KPIV12_Table","KPIV13","KPIV13_Table","KPIV14","KPIV14_Table","KPIV15","KPIV15_Table","result1","result2","result3","MBA","Rotor","SHA","allData","listDataSourceKPOV","listDataSourceMBA","listDataSourceRotor","listDataSourceBase","getKPOV","listKPOV","getKPIV1","listKPIV1","getKPIV2","listKPIV2","getKPIV3","listKPIV3","getKPIV4","listKPIV4","getKPIV5","listKPIV5","getKPIV6","listKPIV6","getKPIV7","listKPIV7","getKPIV8","listKPIV8","getKPIV9","listKPIV9","getKPIV10","listKPIV10","getKPIV11","listKPIV11","getKPIV12","listKPIV12","getKPIV13","listKPIV13","getKPIV14","listKPIV14","getKPIV15","listKPIV15","Days7","Days15","_ref30","_callee30","_context30","_ref31","_callee31","_context31","_ref32","_callee32","_context32","_ref33","_callee33","_context33","_ref34","_callee34","_context34","_ref35","_callee35","_context35","_ref36","_callee36","_context36","_ref37","_callee37","_context37","_ref38","_callee38","_context38","_x14","_ref39","_callee39","_context39","_x15","_ref40","_callee40","_context40","_x16","_ref41","_callee41","_context41","_x17","_ref42","_callee42","_context42","_x18","_ref43","_callee43","_context43","_x19","_ref44","_callee44","_context44","_x20","_ref45","_callee45","_context45","_x21","_ref46","_callee46","_context46","_x22","_ref47","_callee47","_context47","_x23","_ref48","_callee48","_context48","_x24","_ref49","_callee49","_context49","_x25","_ref50","_callee50","_context50","_x26","_ref51","_callee51","_context51","_x27","_ref52","_callee52","_context52","_x28","_ref53","_callee53","_context53","_x29","_ref54","_callee54","_context54","_x30","_ref55","_callee55","_context55","_x31","_ref56","_callee56","_context56","_x32","_ref57","_callee57","_context57","_x33","_ref58","_callee58","_context58","_x34","_callee59","_context59","DataML2","handleReset","itemvalues","QAInspection","Result","queryuser_URL","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","delete","renderTableData","sidemenu","top","left","right","float","margin","padding","transform","Footer","ss","require","GRotorLine","num","decimals","minimumFractionDigits","doAskDate","dateSelect","result_AP1","resultAVG_AP1","result_AP2","resultAVG_AP2","result_AP3","resultAVG_AP3","AP1Q1","AP1Q3","AP1Med","AP2Q1","AP2Q3","AP2Med","AP3Q1","AP3Q3","AP3Med","resultAP1","resultAP1AVG","resultAP2","resultAP2AVG","resultAP3","resultAP3AVG","AP1_Data","AP1_DataAVG","AP1_Production","AP2_Data","AP2_DataAVG","AP2_Production","AP3_Data","AP3_DataAVG","AP3_Production","AP1_Axial_Play","AP1_Bad_Cycle_Time","AP1_Bad_Judge","AP1_Bad_AP_Over","AP1_Bad_AP_Under","AP1_Bad_Pre_AP_Over","AP1_Bad_Pre_AP_Under","AP1_Bad_AP_Before_Over","AP1_Bad_AP_Before_Under","AP1_Bad_AP_After_Over","AP1_Bad_AP_After_Under","AP1_Bad_Adjustments","AP1_Bad_Cycle_Time_P","AP1_Bad_Judge_P","AP1_Bad_AP_Over_P","AP1_Bad_AP_Under_P","AP1_Bad_Pre_AP_Over_P","AP1_Bad_Pre_AP_Under_P","AP1_Bad_AP_Before_Over_P","AP1_Bad_AP_Before_Under_P","AP1_Bad_AP_After_Over_P","AP1_Bad_AP_After_Under_P","AP1_Bad_Adjustments_P","AP2_Axial_Play","AP2_Bad_Cycle_Time","AP2_Bad_Judge","AP2_Bad_AP_Over","AP2_Bad_AP_Under","AP2_Bad_Pre_AP_Over","AP2_Bad_Pre_AP_Under","AP2_Bad_AP_Before_Over","AP2_Bad_AP_Before_Under","AP2_Bad_AP_After_Over","AP2_Bad_AP_After_Under","AP2_Bad_Adjustments","AP2_Bad_Cycle_Time_P","AP2_Bad_Judge_P","AP2_Bad_AP_Over_P","AP2_Bad_AP_Under_P","AP2_Bad_Pre_AP_Over_P","AP2_Bad_Pre_AP_Under_P","AP2_Bad_AP_Before_Over_P","AP2_Bad_AP_Before_Under_P","AP2_Bad_AP_After_Over_P","AP2_Bad_AP_After_Under_P","AP2_Bad_Adjustments_P","AP3_Axial_Play","AP3_Bad_Cycle_Time","AP3_Bad_Judge","AP3_Bad_AP_Over","AP3_Bad_AP_Under","AP3_Bad_Pre_AP_Over","AP3_Bad_Pre_AP_Under","AP3_Bad_AP_Before_Over","AP3_Bad_AP_Before_Under","AP3_Bad_AP_After_Over","AP3_Bad_AP_After_Under","AP3_Bad_Adjustments","AP3_Bad_Cycle_Time_P","AP3_Bad_Judge_P","AP3_Bad_AP_Over_P","AP3_Bad_AP_Under_P","AP3_Bad_Pre_AP_Over_P","AP3_Bad_Pre_AP_Under_P","AP3_Bad_AP_Before_Over_P","AP3_Bad_AP_Before_Under_P","AP3_Bad_AP_After_Over_P","AP3_Bad_AP_After_Under_P","AP3_Bad_Adjustments_P","x","y","Axial_Play","Cycle_Time","Judge","Pre_Axial_Play","Axial_Play_Before","Axial_Play_1","Adjustments","AP1_Max","AP1_Min","AP2_Max","AP2_Min","AP3_Max","AP3_Min","quantile","AP1_Q1","AP1_Q3","median","AP1_Med","AP2_Q1","AP2_Q3","AP2_Med","AP3_Q1","AP3_Q3","AP3_Med","AP1_Color","AP1_Status","AP2_Color","AP2_Status","AP3_Color","AP3_Status","renderTableAP1","renderTableAP2","renderTableAP3","renderStatusAP","AxialPlay","renderStatusOF","OF_Status","OilFill","OF_Color","renderStatusEC","EC_Status","Endcap","EC_Color","renderStatusINT","INT_Status","INT","INT_Color","renderBoxPlotAP","header_ask","button","Axialplay","plotOptions","boxPlot","upper","lower","OFT1_Data","OFT2_Data","OFB1_Data","OFB2_Data","ECT_Data","ECB_Data","INT1_Data","INT2_Data","html","willClose","clearInterval","timerInterval","_this3","QCAlert","VMI","RejectByModel","getItemNos","getDatecodes1","getDatecodes2","getDatecodes3","getDatecodes4","getDatecodes5","ItemNos","Datecodes1","Datecodes2","Datecodes3","Datecodes4","Datecodes5","Model_No","listItemNos","Datecode","listDatecodes1","listDatecodes2","listDatecodes3","listDatecodes4","listDatecodes5","report_per_producion_team","SupporterName","reportGraph","EMP","listCode","Code","MQTByModel","getEMP","EmpNo","listEMP","MasterItemNO","getModelGroup","getItemNO","ItemNo","listModelGroup","listItemNo","Item_No","MasterSupplier","getSupplier","MASTERSUP_URL","Supplier","MASTERSUPPLIER_URL","listSupplier","MASTERMODELGROUP_URL","Supplier_Name","MasterLine","MASTERLINE_URL","GROUP_URL","Model_Group","Associate_Rule_Mining","getDate","doGetGraphfail","Sfail","Cfail","MLDAILY_URL","Rangeindex_fail","Support_fail","Confidence_fail","seriesY1","options1","doGetGraphpass","Spass","Cpass","resultGraphPass","Rangeindex_pass","Support_pass","Confidence_pass","scales","doGetRulefail","Datum_probe","Max_force","Set_Dim_A","Set_Dim_B","Set_Dim_C","Diecast_Pivot_2","Graphfail","seriesY5","options5","lines","doGetRulepass","_options2","Datum_probe_pass","Max_force_pass","Set_Dim_A_pass","Set_Dim_B_pass","Set_Dim_C_pass","Diecast_Pivot_2_pass","GraphPass","seriesY6","options6","doGetaccuracyML","MLACCURACY_URL","doGetReference","_rawData$6","REFERENCE_URL","DESCRIBEML","_rawData$7","DESCRIBEML_URL","listRawData5","report5","doGetDate","_rawData$8","MLDAILYDATE_URL","listRawData4","Raw_Dat4","report4","renderDESCRIBEML","MLMODEL_URL","MLLINE_URL","MLDATE_URL","listDate","DailyML1","MLDAILY_1_URL","doGetDataReport1","MLACCURACY_1_URL","REFERENCE_1_URL","doGetDataReport4","MLDAILYDATE_1_URL","MLMODEL_1_URL","MLLINE_1_URL","Daily_Report_Packing","yA","yB","yC","yM","yN","yTOTAL","PACKINGT1_URL","MotorType","TOTAL","PACKINGT2_URL","PACKINGT3_URL","PACKINGMODEL_URL","Rejectbyteam","yQTY","yNG","REJECTTEAM_URL","Supporter","QTY","NG","Output_Final_Before_QA","doGetSumOutputCo2","SUMOUTPUTCO2_URL","doGetDetailOutputCo2","DETAILCO2_URL","toUpperCase","MODELCO2_URL","LINECO2_URL","Refresh","Production_hold_record","command","command1","_rawData1$","HOLDCO2_URL","HOLDDETAIL_URL","Report","salary_group","table_emp","qty","formatter","val","salary_range","emp_id","first_name","last_name","phone","hire_date","job_id","salary","manager_id","dept_id","Output_Final_after_QA","doGetSumQainspection","SUMQAINSPECTION_URL","doGetDetailQainspection","DETAILQAINSPECTION_URL","MODELAFTERQA_URL","LINEAFTERQA_URL","InspectionDate","Shipmentdata","doGetShipmentbymodel","SHIPMENTBYMODEL_URL","doGetShipmentbyinvoidid","SHIPMENTBYINVOIDID_URL","Invoidid","doGetShipmentbylotqanumber","SHIPMENTBYLOTQA_URL","lotqanumber","MODELSHIPMENTDATA_URL","Lot_No","Packed_half_pallet","HOLDPALLETSUM_URL","HOLDPALLETDETAIL_URL","doGetHoldPalletbylotqa","HOLDPALLETBYLOTQA_URL","MODELPACKPALLET_URL","QA_no","For_Inspection_tags_status","ReportPRINT","PRINTFOR_URL","ReportCo2","OUTPUTCO2_URL","ReportQA","QA_URL","ReportTray_Record","Tray_Record_URL","Tray_Record","ReportIntoPallet","INTOPALLET_URL","IntoPallet","ReportPCMC","PCMC_URL","PCMC","Print_QA","Co2","QA","Print_forsetlot","Shipinfo","doGetshipinfobylotqa","SHIPINFOBYLOTQA_URL","shipinfobylotqa","doGetshipinfobyinvoid","SHOPINFOBYINVOID_URL","shipinfobyinvoid","Track_Lot_Num","updating","CheckData","command2","rawData2","_rawData2$","command3","rawData3","_rawData3$","CHECK_DATA","DYNAMIC_URL","CHECKEWMS_URL","reportWEMS","CHECKEHIPOT_URL","reportHipot","Auto_machine_alarm_history","getTable","PivotTable","seriesData","MC_ERROR_URL","Table","curve","strokeColors","strokeWidth","hover","ERRORTable_URL","listTable","MC_ERROR_Line_URL","Array","isArray","trace_back_ng","NG_URL","Table_Temp_URL","NG_Line_URL","MC_ERROR","theme","palette","Request_label_printing_report","getconfirm","REPORTprintlabal_URL","confirm","MODELLABAL_URL","LINELABAL_URL","CONFIRMLABAL_URL","listconfirm","Model_name","KPIVranking","doGetTABLEML","TABLEML3_URL","MOTORML3_URL","MODELML3_URL","LINEML3_URL","PARAMML3_URL","handleSelectAll","selectedOptions","selectAll","MLRanking","Auto_machine_alarm_history_Month","MONTH_MC_ERROR_URL","year_Error","bar","MONTH_ERRORTable_URL","MONTH_MC_ERROR_Line_URL","MONTH_MC_ERROR_Year_URL","listyear_Error","Engineer","border","Quality","Data_Analysis","PE_MM","Master_ml","REPORT_Master_ML_URL","handleInputChange","field","updatedReport","_objectSpread","handleUpdateClick","updatedItem","updateUrl","putResponse","modelValue","UPDATE_Master_URL","fetch","method","body","find","customClass","container","handleEditClick","itemId","editingItemId","LOGIN_api_Master_ML_URL","handleSuccessfulLogin","isLoggedIn","resultData","updatedAt","colSpan","MODELMasterURL","Parameter_URL","Daily_store_issue","getmodel","STORE_ISSUE_URL","reduce","acc","MODEL_NAME_STORE_ISSUE_URL","listmodel","ITEMNO__NAME_STORE_ISSUE_URL","headerIndex","React","Fragment","REGISTER_Master","handleSecretCodeChange","secretCode","REGISTER_Master_ML_URL","Trace_Dynamic_Parallelism","formattedStartDate","formattedFinishDate","replace","Trace_Dynamic_URL","LINE_TRACE_DYNAMIC_URL","row","rowIndex","colIndex","modifiedItem","prototype","hasOwnProperty","String","SecuredRoute","rest","_objectWithoutProperties","_excluded","Route","render","Redirect","SecuredLVRoute","_excluded2","isPowerUser","App","_len","args","_key","redirectToLogin","Router","SideMenu","Switch","path","ForgotPW","ChangePW","MONTHLYQA","MOTORDIMAI","MOTORDIMRTB","Traceback","dataanalysis","dataML","dataML2","Vrecode","MC_ERROR_test","Production","Month_Auto_machine_alarm_history","register_Master","trace_Dynamic","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","BrowserRouter","getElementById"],"mappings":"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","file":"static/js/main.342d16e4.chunk.js","sourcesContent":["import axios from 'axios'\nimport join from 'url-join'\nimport { apiUrl, NOT_CONNECT_NETWORK, NETWORK_CONNECTION_MESSAGE, key} from '../constants'\n\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//\n\naxios.interceptors.request.use(async (config) => {\n    if (!isAbsoluteURLRegex.test(config.url)) {\n        config.url = join(apiUrl, config.url) \n        //Add Token\n        const jwtToken = localStorage.getItem(key.JWT_TOKEN);\n        if(jwtToken != null) {\n            config.headers = { 'x-access-token': jwtToken}\n        }\n    }\n    config.timeout = 0 // 10 Second \n    return config\n})\n\naxios.interceptors.response.use((response) => {\n    return response\n}, error => { \n    // debugger\n    console.log(JSON.stringify(error, undefined, 2))\n    if (axios.isCancel(error)) {\n        return Promise.reject(error)\n    } else if (!error.response) {\n        return Promise.reject({ code: NOT_CONNECT_NETWORK, message: NETWORK_CONNECTION_MESSAGE })\n    }\n    return Promise.reject(error)\n})\n\nexport const httpClient = axios\n\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass monthlyQA extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      model: { label: \"**ALL**\" },\n      insType: [{ label: \"**ALL**\" }],\n      report: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listModel: [],\n      listInsType: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getInsType();\n  };\n\n  // report with select model,date,type\n  doGetDataReport = async () => {\n    const modelLabel =\n    this.state.model.label === \"**ALL**\" ? \"**ALL**\" : this.state.model.label;\n    const result = await httpClient.get(\n      server.MONTHLYQA_URL +\n      \"/\" +\n      modelLabel +\n      \"/\" +\n      this.state.insType[0].label +\n      \"/\" +\n      this.state.startDate +\n      \"/\" +\n      this.state.finishDate\n    );\n\n    let rawData = result.data.listRawData\n    console.log(rawData)\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i])\n    }\n    this.setState({ Raw_Dat: rawData[0] })\n    console.log(this.state.Raw_Dat)\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MODELMONTHLYQA_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model_group,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getInsType = async () => {\n    const modelLabel =\n    this.state.model.label === \"**ALL**\"\n      ? \"**ALL**\"\n      : this.state.model.label;\n    const array = await httpClient.get(\n      server.INSTYPEQA_URL + \"/\" + modelLabel\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.InspectionType,\n    }));\n    this.setState({ listInsType: options });\n  };\n\n  renderReport = () => {\n\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n\n          <tr>\n            <td>{item[\"Type\"]}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Shift\"]}</td>\n            <td>{item[\"Model_NO\"]}</td>\n            <td>{item[\"Model_Group\"]}</td>\n            <td>{item[\"Model_Name\"]}</td>\n            <td>{item[\"Line_No\"]}</td>\n            <td>{item[\"QANumber\"]}</td>\n            <td align=\"RIGHT\">{Number(item[\"QA_QTY\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td>{item[\"SamplingLevel\"]}</td>\n            <td align=\"RIGHT\">{Number(item[\"SamplingQTY\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td>{item[\"Vis_Round\"]}</td>\n            <td>{item[\"InspectionResult\"]}</td>\n            <td align=\"RIGHT\">{Number(item[\"Reject_QTY\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td>{item[\"Remark\"]}</td>\n\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Monthly QA Inspection</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Monthly QA Inspection</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model_group</label>\n                        \n                        <Select\n                              options={this.state.listModel}\n                              value={this.state.model}\n                                onChange={async (e) => {\n                                  await this.setState({ model: e });\n                                  await this.getInsType();\n                                  await this.setState({\n                                    insType: [{ label: \"Select Type\" }],\n                                  });\n                                }}\n                                // type=\"text\"\n                                // className=\"form-control\"\n                                placeholder=\"Select Model\"\n                              />\n                            </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Type</label>\n                        <Select\n                          options={this.state.listInsType}\n                          value={this.state.insType[0]}\n                          onChange={async (e) => {\n                            await this.setState({ insType: [] });\n                            this.state.insType.push({ label: e.label });\n                          }}\n                        \n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Type\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>\n                          By Daily Select From &nbsp;\n                          {/* <a\n                            class=\"fas fa-question-circle\"\n                            style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                            onClick={() => {\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Day-to-Day Data\",\n                                text:\n                                  \"Day-to-Day data over the course of the selected date\",\n                              });\n                            }}\n                          ></a> */}\n                        </label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Finish Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Model_NO.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Model.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink data={this.state.Raw_Dat}\n                        filename={'QA_report.csv'}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 ,\n                            height: 500 ,\n                            zIndex: \"3\",\n                            position: \"relative\",\n                            zIndex: \"0\"}}\n                        >\n                          <table className=\"table  text-nowrap table-hover table-head-fixed\">\n                            <thead>\n                              <tr>\n                                <th width=\"175\">Type</th>\n                                <th width=\"175\">Date</th>\n                                <th width=\"175\">Shift</th>\n                                <th width=\"175\">Model_NO</th>\n                                <th width=\"175\">Model_group</th>\n                                <th width=\"175\">Model_Name</th>\n                                <th width=\"175\">Line_No</th>\n                                <th width=\"175\">QANumber</th>\n                                <th width=\"175\">QA_QTY</th>\n                                <th width=\"175\">SamplingLevel</th>\n                                <th width=\"175\">SamplingQTY</th>\n                                <th width=\"175\">Vis_Round</th>\n                                <th width=\"175\">InspectionResult</th>\n                                <th width=\"175\">Reject_QTY</th>\n                                <th width=\"175\">Remark</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default monthlyQA;\n","import mouthlyQA from \"../components/monthlyQA/monthlyQA\";\n\n// App_Init\nexport const APP_INIT = \"APP_INIT\";\nexport const APP_TITLE = \"NMB Covid19 command center\";\n\n// Login Page\nexport const HTTP_LOGIN_FETCHING = \"HTTP_LOGIN_FETCHING\";\nexport const HTTP_LOGIN_SUCCESS = \"HTTP_LOGIN_SUCCESS\";\nexport const HTTP_LOGIN_FAILED = \"HTTP_LOGIN_FAILED\";\n\n// Register Page\nexport const HTTP_REGISTER_FETCHING = \"HTTP_REGISTER_FETCHING\";\nexport const HTTP_REGISTER_SUCCESS = \"HTTP_REGISTER_SUCCESS\";\nexport const HTTP_REGISTER_FAILED = \"HTTP_REGISTER_FAILED\";\n\n// Division code\nexport const HTTP_DIVCODE_FETCHING = \"HTTP_DIVCODE_FETCHING\";\nexport const HTTP_DIVCODE_SUCCESS = \"HTTP_DIVCODE_SUCCESS\";\nexport const HTTP_DIVCODE_FAILED = \"HTTP_DIVCODE_FAILED\";\n\n// Error Code\nexport const E_PICKER_CANCELLED = \"E_PICKER_CANCELLED\";\nexport const E_PICKER_CANNOT_RUN_CAMERA_ON_SIMULATOR =\n  \"E_PICKER_CANNOT_RUN_CAMERA_ON_SIMULATOR\";\nexport const E_PERMISSION_MISSING = \"E_PERMISSION_MISSING\";\nexport const E_PICKER_NO_CAMERA_PERMISSION = \"E_PICKER_NO_CAMERA_PERMISSION\";\nexport const E_USER_CANCELLED = \"E_USER_CANCELLED\";\nexport const E_UNKNOWN = \"E_UNKNOWN\";\nexport const E_DEVELOPER_ERROR = \"E_DEVELOPER_ERROR\";\nexport const TIMEOUT_NETWORK = \"ECONNABORTED\"; // request service timeout\nexport const NOT_CONNECT_NETWORK = \"NOT_CONNECT_NETWORK\";\n\n//////////////// Localization Begin ////////////////\nexport const NETWORK_CONNECTION_MESSAGE =\n  \"Cannot connect to server, Please try again.\";\nexport const NETWORK_TIMEOUT_MESSAGE =\n  \"A network timeout has occurred, Please try again.\";\nexport const UPLOAD_PHOTO_FAIL_MESSAGE =\n  \"An error has occurred. The photo was unable to upload.\";\n\n\n\n//spd 2011\n//  export const apiUrl = \"http://192.168.101.219:2010/\"; //deploy บางปะอิน \n//nmb 2013\nexport const apiUrl = \"http://10.120.122.10:2012/\"; //deploy บางปะอิน \n//spd 2011\n// export const apiUrl = \"http://10.120.122.28:2016/\"; //deploy บางปะอิน \n\n// export const apiUrl = \"http://localhost:2010/\"; //localhost port 2010\n\n\n\nexport const YES = \"YES\";\nexport const NO = \"NO\";\nexport const OK = \"ok\";\nexport const NOK = \"nok\";\n\nexport const server = {\n  LOGIN_URL: `api/authorize/login`,\n\n  REGISTER_URL: `api/authorize/register`,\n  FORGOTPASSWORD_URL: `api/authorize/forgot`,\n  CHANGEPASSWORD_URL: `api/authorize/changePassword`,\n  USER_URL: `api/authorize/user`,\n  YIELD_URL: `api/production_result/yield`,\n  MASTER_URL: `api/production_result/master`,\n\n  DATAAVG_URL: `api/production_result/selectDate`,\n  MODEL_URL: `api/production_result/selectmodel`,\n  PARAMETER_URL: `api/production_result/selectparameter`,\n  PART_URL: `api/production_result/selectpart`,\n  LINE_URL: `api/production_result/selectproductionline`,\n\n  // DATA MONITORING\n  MATCHING_URL: `api/production_result/matching`,\n  MATCHINGDAY_URL: `api/production_result/matchingday`,\n\n  MATCHMODEL_URL: `api/production_result/matchingmodel`,\n  MATCHPARAM_URL: `api/production_result/matchingparameter`,\n  MATCHPART_URL: `api/production_result/matchingpart`,\n  MATCHLINE_URL: `api/production_result/matchingline`,\n  MATCHMACHINE_URL: `api/production_result/matchingmachine`,\n\n  //MOTOR DIM\n  MOTORDIM_URL: `api/motor_dim/motordim`,\n  MOTORDIMDAY_URL: `api/motor_dim/motordimday`,\n\n  MOTORDIMMODEL_URL: `api/motor_dim/motordimmodel`,\n  MOTORDIMLINE_URL: `api/motor_dim/motordimline`,\n  MOTORDIMPARAM_URL: `api/motor_dim/motordimparameter`,\n  MOTORDIMMACHINE_URL: `api/motor_dim/motordimmachine`,\n\n  //MOTOR DIM with AiPress\n  MOTORDIMAI_URL: `api/motor_dim_AiPress/motordim`,\n  MOTORDIMAIDAY_URL: `api/motor_dim_AiPress/motordimday`,\n\n  MOTORDIMAIMODEL_URL: `api/motor_dim_AiPress/motordimmodel`,\n  MOTORDIMAILINE_URL: `api/motor_dim_AiPress/motordimline`,\n  MOTORDIMAIPARAM_URL: `api/motor_dim_AiPress/motordimparameter`,\n  MOTORDIMAIMACHINE_URL: `api/motor_dim_AiPress/motordimmachine`,\n  MOTORDIMAIPRESS_URL: `api/motor_dim_AiPress/aiPress`,\n\n  //MOTOR DIM with RTB Single plate\n  MOTORDIMRTB_URL: `api/motor_dim_RTB/motordim`,\n  MOTORDIMRTBDAY_URL: `api/motor_dim_RTB/motordimday`,\n\n  MOTORDIMRTBMODEL_URL: `api/motor_dim_RTB/motordimmodel`,\n  MOTORDIMRTBLINE_URL: `api/motor_dim_RTB/motordimline`,\n  MOTORDIMRTBPARAM_URL: `api/motor_dim_RTB/motordimparameter`,\n  MOTORDIMRTBMACHINE_URL: `api/motor_dim_RTB/motordimmachine`,\n  MOTORDIMRTBAI_URL: `api/motor_dim_RTB/RTB`,\n\n  //MOTOR EWMS\n  MOTOREWMS_URL: `api/motor_EWMS/motorEWMS`,\n  MOTOREWMSDAY_URL: `api/motor_EWMS/motorEWMSday`,\n\n  MOTOREWMSMODEL_URL: `api/motor_EWMS/motorEWMSmodel`,\n  MOTOREWMSLINE_URL: `api/motor_EWMS/motorEWMSline`,\n  MOTOREWMSPARAM_URL: `api/motor_EWMS/motorEWMSparameter`,\n  MOTOREWMSMACHINE_URL: `api/motor_EWMS/motorEWMSmachine`,\n\n  //MOTOR HIPOT\n  MOTORHIPOT_URL: `api/motor_hipot/motorhipot`,\n  MOTORHIPOTDAY_URL: `api/motor_hipot/motorhipotday`,\n\n  MOTORHIPOTMODEL_URL: `api/motor_hipot/motorhipotmodel`,\n  MOTORHIPOTLINE_URL: `api/motor_hipot/motorhipotline`,\n  MOTORHIPOTPARAM_URL: `api/motor_hipot/motorhipotparameter`,\n  MOTORHIPOTMACHINE_URL: `api/motor_hipot/motorhipotmachine`,\n\n  //MOTOR HELIUM\n  MOTORHE_URL: `api/motor_He/motorHe`,\n  MOTORHEDAY_URL: `api/motor_He/motorHeday`,\n\n  MOTORHEMODEL_URL: `api/motor_He/motorHemodel`,\n  MOTORHELINE_URL: `api/motor_He/motorHeline`,\n  MOTORHEPARAM_URL: `api/motor_He/motorHeparameter`,\n  MOTORHEMACHINE_URL: `api/motor_He/motorHemachine`,\n\n  //STACK HEIGHT\n  STACKHI_URL: `api/stack_height/stackHeight`,\n  STACKHIDAY_URL: `api/stack_height/stackHeightday`,\n\n  STACKHIMODEL_URL: `api/stack_height/stackHeightModel`,\n  STACKHILINE_URL: `api/stack_height/stackHeightLine`,\n  STACKHIPARAM_URL: `api/stack_height/stackHeightParameter`,\n  STACKHIMACHINE_URL: `api/stack_height/stackHeightMachine`,\n\n\n\n  //SPECIFICATION CONTROL\n  SPECCONTROL_URL: `api/iSpindle/specControl`,\n  SPECMODEL_URL: `api/iSpindle/specModel`,\n  SPECMODELNAME_URL: `api/iSpindle/specModelName`,\n  SPECPARA_URL: `api/iSpindle/specPara`,\n  SPECPART_URL: `api/iSpindle/specPart`,\n  SPECMC_URL: `api/iSpindle/specMC`,\n\n  //CONTROLLIMIT\n  CONTROLLIMIT_URL: `api/iSpindle/ControlLimit`,\n  MODELCONTROL_URL: `api/iSpindle/Modelforcontrollimit`,\n  PARTCONTROL_URL: `api/iSpindle/Partforcontrollimit`,\n  PARACONTROL_URL: `api/iSpindle/Paraforcontrollimit`,\n  LINECONTROL_URL: `api/iSpindle/Lineforcontrollimit`,\n\n  //EMAILALARM\n  MODELEMAIL_URL: `api/iSpindle/ModelEmail`,\n  PARTEMAIL_URL: `api/iSpindle/PartEmail`,\n  PARAEMAIL_URL: `api/iSpindle/ParaEmail`,\n  LINEEMAIL_URL: `api/iSpindle/LineEmail`,\n  EMAILALARM_URL: `api/iSpindle/emailAlarm`,\n\n  // DATA ANALYSIS (MOTOR)\n  MOTORANALYSIS_URL: `api/dataanalysis/motordata`,\n  MOTORANALYSISDAY_URL: `api/dataanalysis/motordataday`,\n\n  MOTORPROCESS_URL: `api/dataanalysis/motorprocess`,\n  MOTORMODEL_URL: `api/dataanalysis/motormodel`,\n  MOTORLINE_URL: `api/dataanalysis/motorline`,\n  MOTORMC_URL: `api/dataanalysis/motormc`,\n\n  // DATA ANALYSIS (ROTOR)\n  ROTORANALYSIS_URL: `api/dataanalysis/rotordata`,\n  ROTORANALYSISDAY_URL: `api/dataanalysis/rotordataday`,\n\n  ROTORPROCESS_URL: `api/dataanalysis/rotorprocess`,\n  ROTORMODEL_URL: `api/dataanalysis/rotormodel`,\n  ROTORLINE_URL: `api/dataanalysis/rotorline`,\n  ROTORMC_URL: `api/dataanalysis/rotormc`,\n\n  // GR Line\n  GRLINE_URL: `api/grline/grline`,\n\n  //DieCast\n  DIECAST_URL: `api/diecast/diecast`,\n  DIECASTDAY_URL: `api/diecast/diecastDay`,\n  DIECASTMODEL_URL: `api/diecast/diecastModel`,\n  DIECASTMACHINE_URL: `api/diecast/diecastMachine`,\n  DIECASTPARAMETER_URL: `api/diecast/diecastParameter`,\n\n  // VMI\n  VMI_URL: `api/VMI/autoVMI`,\n  VMIDAY_URL: `api/VMI/autoVMIDay`,\n\n  VMIMODEL_URL: `api/VMI/VMIModel`,\n  VMILINE_URL: `api/VMI/VMILine`,\n  VMIPROCESS_URL: `api/VMI/VMIProcess`,\n\n  // DATA ML \n  MOTORML_URL: `api/ML/dataML`,\n  MODELML_URL: `api/ML/model`,\n  LINEML_URL: `api/ML/line`,\n  KPOVML_URL: `api/ML/KPOV`,\n  DATASOURCEKPOV_URL: `api/ML/dataSourceKPOV`,\n  DATASOURCEMBA_URL: `api/ML/dataSourceMBA`,\n  DATASOURCEROTOR_URL: `api/ML/dataSourceRotor`,\n  DATASOURCEBASE_URL: `api/ML/dataSourceBase`,\n  PARAMML_URL: `api/ML/parameter`,\n\n  // DATA ML2\n  MOTORML2_URL: `api/ML2/dataML`,\n  MODELML2_URL: `api/ML2/model`,\n  LINEML2_URL: `api/ML2/line`,\n  PARAMML2_URL: `api/ML2/parameter`,\n\n  //QAInspection\n  MODELQA_URL: `api/QAInspection/model`,\n  INSTYPE_URL: `api/QAInspection/insType`,\n  REPORT_URL: `api/QAInspection/report`,\n  REPORT2_URL: `api/QAInspection/report2`,\n\n  //mouthlyQA\n  MODELMONTHLYQA_URL: `api/monthlyQA/model`,\n  INSTYPEQA_URL: `api/monthlyQA/insType`,\n  MONTHLYQA_URL: `api/monthlyQA/monthlyQA`,\n\n  //Rejection\n  REJECTMODEL_URL: `api/Rejection/model`,\n  REJECTTYPE_URL: `api/Rejection/insType`,\n  REJECTBYMODEL_URL: `api/Rejection/RejectByModel`,\n  REJECTBYQA_URL: `api/Rejection/RejectByQANO`,\n\n  ITEMNOS_URL: `api/Vrecode/ItemNos`, \n  DATECODE_URL: `api/Vrecode/Datecode`, \n  DATECODEALL_URL: `api/Vrecode/DatecodeAll`, \n\n  MOVEMENTQA_URL: `api/Movement/QaNumberAll`, \n  RESULT_URL: `api/Movement/result`, \n  ITEMNOSMOVEMENT_URL: `api/Movement/ItemNos`, \n\n  DEFECTYEAR_URL: `api/defectNG/year`,\n  DEFECTMONTH_URL: `api/defectNG/Month`,\n  DEFECTMODEL_URL: `api/defectNG/model`,\n  DEFECTMTYPE_URL: `api/defectNG/insType`,\n  DEFECTNG_URL: `api/defectNG/DefectNG`,\n\n  LARYEAR_URL: `api/LAR/year`,\n  LARMONTH_URL: `api/LAR/Month`,\n  LAR_URL: `api/LAR/LARPP`,\n\n  MQTYEAR_URL: `api/MQT/year`,\n  MQTMONTH_URL: `api/MQT/Month`,\n  MQT_URL: `api/MQT/LARPP`,\n\n  MQTYEARMODEL_URL: `api/MQTByModel/year`,\n  MQTMONTHMODEL_URL: `api/MQTByModel/Month`,\n  MQTMODEL_URL: `api/MQTByModel/MQTByModel`,\n  MQTEMP_URL: `api/MQTByModel/EMP`,\n\n  //Master ItemNO\n  MASTERGROUP_URL: `api/MasterItemNO/ModelGroup`,\n  MASTERITEMNO_URL: `api/MasterItemNO/ItemNo`,\n  MASTER_URL: `api/MasterItemNO/Master`,\n//Master Supplier\n  MASTERSUPPLIER_URL: `api/MasterSupplier/Supplier`,\n  MASTERMODELGROUP_URL: `api/MasterSupplier/ModelGroup`,\n  MASTERSUP_URL: `api/MasterSupplier/Master`,\n//Master Line\n  GROUP_URL: `api/Masterline/ModelGroup`,\n  LINE_URL: `api/Masterline/Line`,\n  MASTERLINE_URL: `api/Masterline/Masterline`,\n\n  LARMODEL_URL: `api/LARMonth/model`,\n  LARTYPE_URL: `api/LARMonth/insType`,\n  LARYEAR_URL: `api/LARMonth/year`,\n  LARMONTHLY_URL: `api/LARMonth/LARMonth`,\n\n  MLMODEL_URL: `api/DailyML/Model`,\n  MLLINE_URL: `api/DailyML/Line`,\n  MLDATE_URL: `api/DailyML/DateDailyML`,\n  MLDAILY_URL: `api/DailyML/DailyMLfail`,\n  MLDAILYDATE_URL: `api/DailyML/DailyMLDate`,\n  MLACCURACY_URL: `api/DailyML/accuracyML`,\n  REFERENCE_URL: `api/DailyML/Reference`,\n  DESCRIBEML_URL: `api/DailyML/DescribeML`,\n\n\n  MLMODEL_1_URL: `api/DailyML1/Model`,\n  MLLINE_1_URL: `api/DailyML1/Line`,\n  MLDATE_1_URL: `api/DailyML1/DateDailyML`,\n  MLDAILY_1_URL: `api/DailyML1/DailyMLfail`,\n  MLDAILYDATE_1_URL: `api/DailyML1/DailyMLDate`,\n  MLACCURACY_1_URL: `api/DailyML1/accuracyML`,\n  REFERENCE_1_URL: `api/DailyML1/Reference`,\n\n  PACKINGMODEL_URL: `api/Dailypacking/Model`,\n  PACKINGT1_URL: `api/Dailypacking/report1`,\n  PACKINGT2_URL: `api/Dailypacking/report2`,\n  PACKINGT3_URL: `api/Dailypacking/report3`,\n\n  REJECTTEAM_URL: `api/Rejectbyteam/RejectTeam`,\n\n  //output co2\n  MODELCO2_URL: `api/OutPutCo2/Model`,\n  LINECO2_URL: `api/OutPutCo2/Line`,\n  SUMOUTPUTCO2_URL: `api/OutputCo2/SumOutputCo2`,\n  DETAILCO2_URL: `api/OutputCo2/DetailOutputCo2`,\n  \n  HOLDCO2_URL: `api/HoldCo2/HoldoutputCo2`,\n  HOLDDETAIL_URL: `api/HoldCo2/DetailHoldCo2`,\n\n  CHECK_DATA: `api/checkData/Dimension_WR`,\n  DYNAMIC_URL: `api/checkData/Dynamic_Parallelism_Tester`,\n  CHECKEWMS_URL: `api/checkData/EWMS`,\n  CHECKEHIPOT_URL: `api/checkData/Hipot`,\n\n\n\n  \n\n  MODELAFTERQA_URL: `api/AfterQA/Model`,\n  LINEAFTERQA_URL: `api/AfterQA/Line`,\n  SUMQAINSPECTION_URL: `api/AfterQA/SumQainspection`,\n  DETAILQAINSPECTION_URL: `api/AfterQA/DetailQainspection`,\n\n  MODELSHIPMENTDATA_URL: `api/shipmentdata/model`,\n  SHIPMENTBYMODEL_URL: `api/shipmentdata/Shipmentdata`,\n  SHIPMENTBYINVOIDID_URL: `api/shipmentdata/invoidid`,\n  SHIPMENTBYLOTQA_URL: `api/shipmentdata/lotqanumber`,\n\n  HOLDPALLETBYLOTQA_URL : `api/Packed_Half_Pallet/lotqanumber`,\n  HOLDPALLETSUM_URL : `api/Packed_Half_Pallet/packed_half_Sum`,\n  HOLDPALLETDETAIL_URL : `api/Packed_Half_Pallet/packed_half_Detail`,\n  MODELPACKPALLET_URL : `api/Packed_Half_Pallet/model`,\n\n  //status\n  PRINTFOR_URL: `api/Status1/print`,\n  OUTPUTCO2_URL: `api/Status1/Co2`,\n  QA_URL: `api/Status1/QA`,\n  Tray_Record_URL: `api/Status1/Tray_Record`,\n  INTOPALLET_URL: `api/Status1/Into_Pallet`,\n  PCMC_URL: `api/Status1/PCMC`,\n\n  SHIFTOPT_URL: `api/OPT/shift`,\n  REPORTOPT_URL: `api/OPT/report`,\n\n  QPMBYLOTQA_URL : `api/QPM/lotQA`,\n  QPMBYBARCODEMOTOR_URL : `api/QPM/barcodemotor`,\n\n  DODATABYLOTQA_URL : `api/QPM/dobylotqa`,\n  DODATABYINVOID_URL : `api/QPM/dobyinvoid`,\n\n  SHIPINFOBYLOTQA_URL : `api/QPM/shipinfobylotqa`,\n  SHOPINFOBYINVOID_URL : `api/QPM/shipinfobyinvoid`,\n\n\n\n    //QAInspection\n    ModelHoldQA_URL: `api/QAInspectionHOLD/model`,\n    LINEQAHOLD_URL: `api/QAInspectionHOLD/Line`,\n    StatusQAHOLD_URL: `api/QAInspectionHOLD/Status`,\n    Access_byHOLD_URL: `api/QAInspectionHOLD/Access_by`,\n    QAHOLD_URL: `api/QAInspectionHOLD/report2`,\n    HOLDNUMBER_URL: `api/QAInspectionHOLD/report3`,\n    REPORTHOLD_URL: `api/QAInspectionHOLD/report`,\n    CHECKBOXALL_URL: `api/QAInspectionHOLD/HOLDALL`,\n    HOLDFORPC_URL: `api/QAInspectionHOLD/HoldForpc`,\n\n\n    japan_URL: `api_MLjapan/api/process`,\n\n    //MC_Error\n    ERRORTable_URL: `api/MC_Error/Table`,\n    MC_ERROR_Line_URL: `api/MC_Error/Line`,\n    MC_ERROR_URL: `api/MC_Error/MC_ERROR`,\n\n\n    MONTH_ERRORTable_URL: `api/MC_Error_Month/Table`,\n    MONTH_MC_ERROR_Line_URL: `api/MC_Error_Month/Line`,\n    MONTH_MC_ERROR_Year_URL: `api/MC_Error_Month/year_Error`,\n    MONTH_MC_ERROR_URL: `api/MC_Error_Month/MC_ERROR`,\n\n    //Report_printlable\n    MODELLABAL_URL: `api/Report_printlabal/model`,\n    LINELABAL_URL: `api/Report_printlabal/Line`,\n    CONFIRMLABAL_URL: `api/Report_printlabal/confirm`,\n    REPORTprintlabal_URL: `api/Report_printlabal/report`,\n   \n  //status_web\n    STATUS_WEB_URL: `api/HOME/Status_web`,\n\n    TABLEML3_URL : `api/MLranking/table`,\n    MOTORML3_URL : `api/MLranking/dataML`,\n    MODELML3_URL : `api/MLranking/model`,\n    LINEML3_URL : `api/MLranking/line`,\n    PARAMML3_URL : `api/MLranking/parameter`,\n\n\n      //TRACEBACK\n  DATAMODEL: `api/api_production_result_001/dataModel`,\n  DATAPARAMETER: `api/api_production_result_001/dataParameter`,\n  DATALINE: `api/api_production_result_001/dataLine`,\n\n  \n  ROTOR_DAY_URL: `api/api_production_result_001/stackHeight`,\n\n\n  \n    //MC_Error\n    Table_Temp_URL: `api/trace_back_ng/Table`,\n    NG_Line_URL: `api/trace_back_ng/Line`,\n    NG_URL: `api/trace_back_ng/MC_ERROR`,\n\n\n    //master_ml\n    MODELMasterURL: `api/Master_ML/model`,\n    Parameter_URL: `api/Master_ML/Parameter`,\n    REPORT_Master_ML_URL: `api/Master_ML/report`,\n    //Loging_ML\n    UPDATE_Master_URL: `api/Master_ML/update`,\n    LOGIN_api_Master_ML_URL: `api/Master_ML/login`,\n    REGISTER_Master_ML_URL: `api/Master_ML/register`,\n\n    //\n    MODEL_NAME_STORE_ISSUE_URL: `api/store_issue/ModelGroup`,\n    ITEMNO__NAME_STORE_ISSUE_URL: `api/store_issue/ItemNo`,\n    STORE_ISSUE_URL: `api/store_issue/Master`,\n\n\n    LINE_TRACE_DYNAMIC_URL: `api/Trace_Dynamic/LINE`,\n    Trace_Dynamic_URL: `api/Trace_Dynamic/Master`,\n\n};\n\nexport const key = {\n  LOGIN_PASSED: `LOGIN_PASSED`,\n  API_KEY: `API_KEY`,\n  USER_LV: `USER_LV`,\n  USER_NAME: \"USER_NAME\",\n  USER_EMP: \"USER_EMP\",\n  JWT_TOKEN: \"JWT_TOKEN\",\n};\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport moment from \"moment\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      xAxis: [],\n      yAxis: [],\n      yAxis2: [],\n      //filter\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n    };\n    this.state = {\n      userLocation: null,\n    };\n  }\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const userLocation = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        };\n        this.setState({ userLocation });\n      });\n    } else {\n      console.log(\"Geolocation is not available in this browser.\");\n    }\n  }\n\n  doGetData = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  componentDidMount = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  renderTableRow = () => {\n    return this.state.data.map((item) => (\n      <tr>\n        <td>{item.Date}</td>\n        <td>{item[\"%Yield\"]}</td>\n      </tr>\n    ));\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"content-wrapper\" style={{ paddingTop: 80 }}>\n          <h1>Products</h1>\n          <h2>Spindle Motor for HDDs</h2>\n          \n          <div\n            className=\"content\"\n            style={{\n              paddingTop: 20,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <div className=\"row\">\n              <div className=\"border-full-bottom\">\n                <div className=\"D-3 M-12 D-right-9 M-left-0 no-gap\">\n                  <div className=\"title-section title-inside\"></div>\n                </div>\n              </div>\n            </div>\n\n\n            {/* เพิ่มรูปภาพด้านล่างนี้ */}\n            <img\n              src=\"Gallery-Bangpain8.jpg\"\n              width=\"1200\" // กำหนดความกว้าง\n              height=\"650\" // กำหนดความสูง\n              style={{ alignSelf: \"center\" }} // จัดรูปภาพให้อยู่ตรงกลาง\n            />\n          </div>\n        </div>\n        {/* <div className=\"D-4 T-6 SM-12\">\n          <img\n            src=\"https://minebea.co.th/wp-content/themes/minebea/theme/app/images/logo-blue.png\"\n            className=\"img-lazy\"\n            data-original=\"https://minebea.co.th/wp-content/themes/minebea/theme/app/images/logo-blue.png\"\n            alt=\"\"\n            style={{ display: \"inline\" }}\n          />\n          <br />\n          <br />\n          <div className=\"footer-item\">\n            <i className=\"icon-location\"></i>\n            <b>Bang Pa-In Plant (Head Office)</b>\n            <br />1 Moo 7, Phaholythin Road, Km.51, Tambol Chiang Rak-Noi,\n            Amphoe Bang Pa-In Ayutthaya Province 13180 Thailand\n          </div>\n          <div className=\"footer-item\">\n            <i className=\"icon-phone\"></i>\n            (035) 361429 - 361439\n          </div>\n          <div className=\"footer-item\">\n            <i className=\"icon-fax\"></i>\n            (035) 361177, 361477\n          </div>\n        </div> */}\n\n      </>\n    );\n  }\n}\nexport default Home;\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from 'react';\n\n\n\nconst useStyles = makeStyles(() => ({\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"#0B274D\",\n  },\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"#0B274F\",\n    size: \"20px\",\n    textAlign: \"left\",\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  header: {\n    backgroundColor: \"#FFF\",\n  },\n}));\n\nconst headersData = [];\n\nexport default function Header() {\n  const { header, logo, menuButton, toolbar } = useStyles();\n \n  useEffect(() => {\n    // เมื่อคอมโพเนนต์ถูกโหลด\n    const pushmenuButton = document.querySelector(\".nav-link[data-widget='pushmenu']\");\n    if (pushmenuButton) {\n      pushmenuButton.click(); // คลิกที่ปุ่ม pushmenu โดยอัตโนมัติ\n    }\n  }, []); // เรียกในรอบแรกที่คอมโพเนนต์ถูกโหลดเท่านั้น\n  \n\n  const displayDesktop = () => {\n    return (\n      <div className=\"bodylayout-fixed\">\n\n      <Toolbar className={`${toolbar} `}>\n        <a\n          className=\"nav-link\"\n          data-widget=\"pushmenu\" // เพิ่ม data-widget เพื่อเปิด SideMenu\n          href=\"#\"\n          // role=\"button\"\n        >\n          <i className=\"fas fa-bars\" /> Menu\n        </a>\n    \n        \n        <div>{getMenuButtons()}</div>\n        <Link to=\"/home\" className=\"nav-link\">\n          <img src=\"BlueText.png\" alt=\"Home\" />\n        </Link>\n        <img src=\"minebeamitsumi_logo_en.png\" alt=\"Logo\" />\n      </Toolbar>\n      </div>\n    );\n  };\n  \n  \n  \n\n  const NMBLogo = (\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\n      I-Spindle 4.0\n    </Typography>\n    \n  );\n\n  const getMenuButtons = () => {\n    return headersData.map(({ label, href }) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color: \"inherit\",\n            to: href,\n            component: RouterLink,\n            className: menuButton,\n          }}\n        >\n          {label}\n        </Button>\n      );\n    });\n  };\n\n  return (\n    <header>\n     <AppBar className={`${header} layout-fixed`} main-header=\"true\" navbar=\"true\" navbar-expand=\"true\" navbar-white=\"true\" navbar-light=\"true\">\n  {displayDesktop()}\n</AppBar>\n    </header>\n  );\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport { key, server, YES } from \"../../constants\";\nimport Swal from \"sweetalert2\";\nimport Header from '../header/header'; // Update the path accordingly\n\n\n\n\nclass Login extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      empNumber: \"\",\n      password: \"\",\n      pwType: \"password\",\n      pwIcon: \"fas fa-eye\",\n    };\n  }\n\n  componentDidMount = () => {\n    this.autoLogin();\n  };\n\n  autoLogin = () => {\n    if (localStorage.getItem(key.LOGIN_PASSED) === YES) {\n      this.props.history.push(\"/home\");\n    }\n  };\n\n  doLogin = async () => {\n    let result = await httpClient.post(server.LOGIN_URL, this.state);\n    console.log(result.data);\n if (result.data.login_result === 'pass') {\n  localStorage.setItem(key.LOGIN_PASSED, YES);\n  localStorage.setItem(key.JWT_TOKEN, result.data.jwt);\n  localStorage.setItem(key.USER_LV, result.data.resultlogin.levelUser);\n  localStorage.setItem(key.USER_NAME, result.data.resultlogin.empNumber);\n\n  // Pass username and empNumber as props\n  this.props.history.push({\n    pathname: '/home',\n    state: {\n      username: result.data.resultlogin.username,\n      empNumber: result.data.resultlogin.empNumber,\n    },\n  });\n} else {\n  Swal.fire({\n    icon: 'error',\n    title: 'ID/Password is incorrect!!',\n  });\n}\n    console.log(\"Username:\", result.data.resultlogin.username);\n    console.log(\"empNumber:\", result.data.resultlogin.empNumber);\n\n  };\n\n  getData = async () => {\n    let result = await axios.get(\"http://localhost:2010/api/authorize/user\");\n    console.log(result);\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-box\">\n          <div className=\"login-logo\">\n            <a href=\"../../index2.html\">\n              <b>MinebeaMitsumi</b>\n            </a>\n          </div>\n          <form\n            onSubmit = { (e) => {\n              e.preventDefault();\n              this.doLogin()\n            }}>\n          <div className=\"card\">\n            <div className=\"card-body login-card-body\">\n              <p className=\"login-box-msg\">Sign in to start your session</p>\n\n              {/* Input empNumber */}\n              <div className=\"input-group mb-3\">\n                <input //keyCode 13 is enter key\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Employee No.\"\n                  onChange={(e) => {\n                    this.setState({ empNumber: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <span className=\"fas fa-user\" />\n                  </div>\n                </div>\n              </div>\n\n              {/* Input password */}\n              <div className=\"input-group mb-3\">\n                <input\n                  type={this.state.pwType}\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  onChange={(e) => {\n                    this.setState({ password: e.target.value });\n                  }}\n                  required\n                ></input>\n                \n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                      <i class={this.state.pwIcon}\n                        style = {{ color: this.state.pwIcon == \"fas fa-eye\" ? 'dodgerBlue' : 'red'}}\n                        onClick={ () => {\n                          if (this.state.pwType == \"password\") {\n                            this.setState({pwType: \"text\"})\n                            this.setState({pwIcon: \"fas fa-eye-slash\"})\n                          } else {\n                            this.setState({pwType: \"password\"})\n                            this.setState({pwIcon: \"fas fa-eye\"})\n                          }\n                          console.log(this.state.pwIcon)\n                        }}></i>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                {/* Remember Me Box */}\n                <div className=\"col-8\">\n                  <div className=\"icheck-primary\">\n                    <input type=\"checkbox\" id=\"remember\" />\n                    <label htmlFor=\"remember\">Remember Me</label>\n                  </div>\n                </div>\n                {/* Sign In button*/}\n                <div className=\"col-4\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                  >\n                    Sign In\n                  </button>\n                </div>\n                {/* /.col */}\n              </div>\n\n              <p className=\"mb-1\">\n                <Link to=\"/changepassword\" className=\"text-center\">\n                  Change new password\n                </Link>\n                {/* <a href=\"forgot-password.html\">I forgot my password</a> */}\n              </p>\n\n              <p className=\"mb-1\">\n              <a href=\"http://10.120.122.28:2017/forgot\">\n              I forgot my password\n                      </a>\n                {/* <Link to=\"/forgot\" className=\"text-center\">\n                  I forgot my password\n                </Link> */}\n\n                {/* <a href=\"forgot-password.html\">I forgot my password</a> */}\n              </p>\n\n              <p className=\"mb-0\">\n                <Link to=\"/register\" className=\"text-center\">\n                  Register a new membership\n                </Link>\n              </p>\n            </div>\n          </div>\n          </form>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport { server } from \"../../constants\";\nimport Swal from \"sweetalert2\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      empNumber: \"\",\n      email: \"\",\n      password: \"\",\n      rePassword: \"\",\n      position: \"\",\n    };\n  }\n\n  // HandleClickSuccess() {\n  //   Swal.fire({\n  //     icon: \"success\",\n  //     title: \"Success\",\n  //     type: \"success\",\n  //     text:\n  //       \"Congratulations!,your registration has been succesfully completed.\",\n  //   });\n  // }\n\n  doRegister = async () => {\n    if (this.state.rePassword === this.state.password) {\n      let result = await httpClient.post(server.REGISTER_URL, this.state);\n      console.log(result.data);\n      if (result.data.api_result === 'ok') {\n        this.props.history.push(\"/login\");\n      Swal.fire({\n        icon: \"success\",\n        title: \"Success\",\n        type: \"success\",\n        text:\n          \"Congratulations!,your registration has been successfully completed.\",\n      });\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          type: \"error\",\n          text:\n            \"Error, account with this email or employee number already exists.\",\n        });\n      }\n      \n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Password do not match!\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"register-page\">\n        <div className=\"register-box\">\n          <div className=\"card card-outline card-primary\">\n            <div className=\"card-header text-center\">\n              <a href=\"../../index2.html\" className=\"h3\">\n                <b>Account Registration</b>\n              </a>\n            </div>\n            <form\n              onSubmit = { (e) => {\n                e.preventDefault();\n                this.doRegister()\n              }}>\n            <div className=\"card-body\">\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Employee No.\"\n                  onChange={(e) => {\n                    this.setState({ empNumber: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <span className=\"fas fa-user\" />\n                  </div>\n                </div>\n              </div>\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Full Name\"\n                  onChange={(e) => {\n                    this.setState({ username: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <span className=\"fas fa-user\" />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Position (e.g. Engineer, QC)\"\n                  onChange={(e) => {\n                    this.setState({ position: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <span className=\"fas fa-user\" />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Email\"\n                  onChange={(e) => {\n                    this.setState({ email: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <span className=\"fas fa-envelope\" />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  onChange={(e) => {\n                    this.setState({ password: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <span className=\"fas fa-lock\" />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Retype password\"\n                  onChange={(e) => {\n                    this.setState({ rePassword: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <span className=\"fas fa-lock\" />\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-8\">\n                  <div className=\"icheck-primary\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"agreeTerms\"\n                      name=\"terms\"\n                      defaultValue=\"agree\"\n                    />\n                    <label htmlFor=\"agreeTerms\">\n                      I agree to the <a href=\"terms\">Terms and Conditions</a>\n                    </label>\n                  </div>\n                </div>\n                {/* /.col */}\n                <div className=\"col-4\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                  >\n                    Register\n                  </button>\n                </div>\n                {/* /.col */}\n              </div>\n\n              <a href=\"login.html\" className=\"text-center\">\n                I already have a membership\n              </a>\n            </div>\n            </form>\n            {/* /.form-box */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport { key, server, YES } from \"../../constants\";\nimport Swal from \"sweetalert2\";\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n    };\n  }\n\n  doForgot = async () => {\n    let result = await httpClient.post(server.FORGOTPASSWORD_URL, this.state);\n    if (result.data.api_result === \"ok\") {\n      console.log(result.data);\n      Swal.fire({\n        icon: \"success\",\n        title: \"Success\",\n        type: \"success\",\n        text:\n          \"New password has been sent to your email\",\n          onClose: () => {\n            // Navigate to the login page\n            window.location.href = \"http://10.120.122.10:2013/login\";\n          },\n\n      });\n        \n    }\n  };\n\n  getData = async () => {\n    let result = await axios.get(\"http://localhost:2010/api/authorize/user\");\n    console.log(result);\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-box\">\n          <div className=\"login-logo\">\n            <a href=\"../../index2.html\">\n              <b>MinebeaMitsumi</b>\n            </a>\n          </div>\n          <form\n            onSubmit = { (e) => {\n              e.preventDefault();\n              this.doForgot()\n            }}>\n          <div className=\"card\">\n            <div className=\"card-body login-card-body\">\n              <p className=\"login-box-msg\">\n                Enter email to receive a new password\n              </p>\n\n              {/* Input email */}\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Email\"\n                  onChange={(e) => {\n                    this.setState({ email: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <span className=\"fas fa-envelope\" />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                {/* Sign In button*/}\n                <div className=\"col-4\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                  >\n                    Submit\n                  </button>\n                </div>\n                {/* /.col */}\n              </div>\n            </div>\n          </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport { server } from \"../../constants\";\nimport Swal from \"sweetalert2\";\n\nclass Changepassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      empNumber: \"\",\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n      oldpwType: \"password\",\n      oldpwIcon: \"fas fa-eye\",\n      newpwType: \"password\",\n      newpwIcon: \"fas fa-eye\",\n      repwType: \"password\",\n      repwIcon: \"fas fa-eye\",\n    };\n  }\n\n  doChangePassword = async () => {\n    if (this.state.newPassword === this.state.confirmPassword) {\n      let result = await httpClient.post(server.CHANGEPASSWORD_URL, this.state);\n      console.log(result.data);\n      Swal.fire({\n        icon: \"success\",\n        title: \"Success\",\n        type: \"success\",\n        text:\n          \"Your new password has been change completed.\",\n      });\n      this.props.history.push(\"/login\");\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"The passwords you entered did not match!!\",\n      });\n    }\n  };\n\n  getData = async () => {\n    let result = await axios.get(\"http://localhost:2010/api/authorize/user\");\n    console.log(result);\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-box\">\n          <div className=\"login-logo\">\n            <a href=\"../../index2.html\">\n              <b>MinebeaMitsumi</b>\n            </a>\n          </div>\n          <form\n            onSubmit = { (e) => {\n              e.preventDefault();\n              this.doChangePassword()\n            }}>\n          <div className=\"card\">\n            <div className=\"card-body login-card-body\">\n              <p className=\"login-box-msg\">Change new password</p>\n\n              {/* Input empNo */}\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Employee No.\"\n                  onChange={(e) => {\n                    this.setState({ empNumber: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <span className=\"fas fa-user\" />\n                  </div>\n                </div>\n              </div>\n\n              {/* Input oldPW */}\n              <div className=\"input-group mb-3\">\n                <input\n                  type={this.state.oldpwType}\n                  className=\"form-control\"\n                  placeholder=\"Old Password\"\n                  onChange={(e) => {\n                    this.setState({ oldPassword: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <i class={this.state.oldpwIcon}\n                      style = {{ color: this.state.oldpwIcon === \"fas fa-eye\" ? 'dodgerBlue' : 'red'}}\n                      onClick={ () => {\n                        if (this.state.oldpwType === \"password\") {\n                          this.setState({oldpwType: \"text\"})\n                          this.setState({oldpwIcon: \"fas fa-eye-slash\"})\n                        } else {\n                          this.setState({oldpwType: \"password\"})\n                          this.setState({oldpwIcon: \"fas fa-eye\"})\n                        }\n                        console.log(this.state.oldpwIcon)\n                      }}></i>\n                  </div>\n                </div>\n              </div>\n\n              {/* Input newPW */}\n              <div className=\"input-group mb-3\">\n                <input\n                  type={this.state.newpwType}\n                  className=\"form-control\"\n                  placeholder=\"New password\"\n                  onChange={(e) => {\n                    this.setState({ newPassword: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                    <i class={this.state.newpwIcon}\n                      style = {{ color: this.state.newpwIcon === \"fas fa-eye\" ? 'dodgerBlue' : 'red'}}\n                      onClick={ () => {\n                        if (this.state.newpwType === \"password\") {\n                          this.setState({newpwType: \"text\"})\n                          this.setState({newpwIcon: \"fas fa-eye-slash\"})\n                        } else {\n                          this.setState({newpwType: \"password\"})\n                          this.setState({newpwIcon: \"fas fa-eye\"})\n                        }\n                        console.log(this.state.newpwIcon)\n                      }}></i>\n                  </div>\n                </div>\n              </div>\n\n              {/* Input renewPW */}\n              <div className=\"input-group mb-3\">\n                <input\n                  type={this.state.repwType}\n                  className=\"form-control\"\n                  placeholder=\"Confirm password\"\n                  onChange={(e) => {\n                    this.setState({ confirmPassword: e.target.value });\n                  }}\n                  required\n                />\n                <div className=\"input-group-append\">\n                  <div className=\"input-group-text\">\n                  <i class={this.state.repwIcon}\n                      style = {{ color: this.state.repwIcon === \"fas fa-eye\" ? 'dodgerBlue' : 'red'}}\n                      onClick={ () => {\n                        if (this.state.repwType === \"password\") {\n                          this.setState({repwType: \"text\"})\n                          this.setState({repwIcon: \"fas fa-eye-slash\"})\n                        } else {\n                          this.setState({repwType: \"password\"})\n                          this.setState({repwIcon: \"fas fa-eye\"})\n                        }\n                        console.log(this.state.repwIcon)\n                      }}></i>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                {/* Sign In button*/}\n                <div className=\"col-4\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                  >\n                    Submit\n                  </button>\n                </div>\n                {/* /.col */}\n              </div>\n            </div>\n          </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Changepassword;","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Daily_LAR_by_Model extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      Model: { label: \"**ALL**\" },\n      insType: [{ label: \"**ALL**\" }],\n      report: [],\n      xAxis: [],\n      yAxis: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n      result:[],\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listyear: [],\n      listMonth: [],\n      listModel: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getyear();\n    await this.getMonth();\n    await this.getModel();\n    await this.getInsType();\n  };\n\n  doGetDataReport = async () => {\n    const modelLabel =\n    this.state.Model.label === \"**ALL**\" ? \"**ALL**\" : this.state.Model.label;\n    const result = await httpClient.get(\n      server.DEFECTNG_URL +\n        \"/\" +\n        modelLabel +\n        \"/\" +\n        this.state.insType[0].label +\n        \"/\" +\n        this.state.year[0].label +\n        \"/\" +\n        this.state.Month[0].label\n    );\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.DATE);\n    }\n\n    let yAxis = result.data.Cleanroom_Percent;\n    let yAxis1 = result.data.FDB_Percent;\n    let yAxis2 = result.data.Loose_part_Percent;\n    let yAxis3 = result.data.Washing_Percent;\n    let yAxis4 = result.data.Whiteroom_Percent;\n    let yAxis5 = result.data.FAC2_Percent;\n    let yAxis6 = result.data.LAR_Percent;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      xAxis,\n      yAxis,\n      yAxis1,\n      yAxis2,\n      yAxis3,\n      yAxis4,\n      yAxis5,\n      yAxis6,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      seriesY: [\n        {\n          name: \"Cleanroom Rej%\",\n          type: \"column\",\n          data: yAxis,\n        },\n        {\n          name: \"FDB Rej%\",\n          type: \"column\",\n          data: yAxis1,\n        },\n        {\n          name: \"Loose_part Rej%\",\n          type: \"column\",\n          data: yAxis2,\n        },\n        {\n          name: \"Washing Rej%\",\n          type: \"column\",\n          data: yAxis3,\n        },\n        {\n          name: \"Whiteroom Rej%\",\n          type: \"column\",\n          data: yAxis4,\n        },\n        {\n          name: \"FAC2 Rej%\",\n          type: \"column\",\n          data: yAxis5,\n        },\n        {\n          name: \"LAR %\",\n          type: \"line\",\n          data: yAxis6,\n        },\n      ],\n      options: {\n        chart: {\n          type: \"line\",\n          height: 300,\n          stacked: true,\n          toolbar: {\n            show: true,\n          },\n        },\n\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: \"bottom\",\n                offsetX: -10,\n                offsetY: 0,\n              },\n            },\n          },\n        ],\n        title: {\n          text: \"Daily VMI LAR Trend \",\n          align: \"center\",\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [6],\n        },\n        xaxis: {\n          type: \"date\",\n          categories: xAxis,\n        },\n          yaxis: [\n          \n          {\n            min: 0,\n            max: 100,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff0000\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff0000\",\n              },\n            },\n            title: {\n              text: \"Reject QTY By Location (%)\",\n              style: {\n                color: \"#ff0000\",\n              },\n            },\n            tooltip: {\n              enabled: true,\n            },\n          },\n        ],\n        colors: [\n          // Cleanroom Rej\n          \"#3399ff\",\n          // FDB Rej%\n          \"#BEE3ED\",\n          // Loose_part Rej%\n          \"#ff1a1a\",\n          // Washing Rej%\n          \"#ffff00\",\n          // Whiteroom Rej%\n          \"#d24dff\",\n\n          \"#ff9900\",\n          // LAR %\n          \"#00ff00\",\n        ],\n        // legend: {\n        //   position: 'right',\n        //   offsetY: 40\n        // },\n        fill: {\n          opacity: 1,\n        },\n      },\n    });\n  };\n\n    \n\n  getyear = async () => {\n    const array = await httpClient.get(server.DEFECTYEAR_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.year,\n    }));\n    this.setState({ listyear: options });\n  };\n\n  getMonth = async () => {\n    const array = await httpClient.get(server.DEFECTMONTH_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Month,\n    }));\n    this.setState({ listMonth: options });\n  };\n  getModel = async () => {\n    const array = await httpClient.get(server.DEFECTMODEL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model_Name,\n    }));\n    this.setState({ listModel: options });\n  };\n  getInsType = async () => {\n    const modelLabel =\n    this.state.Model.label === \"**ALL**\"\n      ? \"**ALL**\"\n      : this.state.Model.label;\n    const array = await httpClient.get(\n      server.DEFECTMTYPE_URL + \"/\" + modelLabel\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.InspectionType,\n    }));\n    this.setState({ listInsType: options });\n  };\n\n\n  renderreport1 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"DATE\"]}</td>\n            <td>\n              {Number(item[\"INPUT\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"OUTPUT\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"REJECT_LOT\"]}</td>\n            <td>{item[\"REJECT_Percent\"]}</td>\n            <td>{item[\"LAR_Percent\"]}</td>\n            <td>\n              {Number(item[\"TOTAL_inspection\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"TOTAL_sampling\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"defect_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"DATE\"]}</td>\n            <td>{item[\"Cleanroom_Percent\"]}</td>\n            <td>{item[\"FDB_Percent\"]}</td>\n            <td>{item[\"Washing_Percent\"]}</td>\n            <td>{item[\"Whiteroom_Percent\"]}</td>\n            <td>{item[\"Loose_part_Percent\"]}</td>\n            <td>{item[\"FAC2_Percent\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport3 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"DATE\"]}</td>\n            <td>\n              {Number(item[\"Cleanroom_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"FDB_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Washing_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Whiteroom_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Loose_part_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"FAC2_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport4 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"DATE\"]}</td>\n            <td>{item[\"REJECT_SHIFT_A\"]}</td>\n            <td>{item[\"REJECT_SHIFT_B\"]}</td>\n            <td>{item[\"REJECT_SHIFT_C\"]}</td>\n            <td>{item[\"REJECT_SHIFT_M\"]}</td>\n            <td>{item[\"REJECT_SHIFT_N\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport6 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"DATE\"]}</td>\n            <td>{item[\"Cleanroom_defect_QTY\"]}</td>\n            <td>{item[\"FDB_defect_QTY\"]}</td>\n            <td>{item[\"Washing_defect_QTY\"]}</td>\n            <td>{item[\"Whiteroom_defect_QTY\"]}</td>\n            <td>{item[\"Loose_part_defect_QTY\"]}</td>\n            <td>{item[\"FAC2_defect_QTY\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport5 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"DATE\"]}</td>\n            <td>\n              {Number(item[\"Cleanroom_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"FDB_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Washing_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Whiteroom_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Loose_part_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"FAC2_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    console.log(this.state.Model);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1> Daily LAR by Model</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Daily LAR by Model\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model</label>\n                        <Select\n                          options={this.state.listModel}\n                          value={this.state.Model}\n                          onChange={async (e) => {\n                            await this.setState({ Model: e });\n                            await this.getInsType();\n                            await this.getyear();\n                            await this.getMonth();\n                            await this.setState({\n                              insType: [{ label: \"Select Type\" }],\n                            });\n                            await this.setState({\n                              year: [{ label: \"Select Year\" }],\n                            });\n                            await this.setState({\n                              Month: [{ label: \"Select Month\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Type</label>\n                        <Select\n                          options={this.state.listInsType}\n                          value={this.state.insType[0]}\n                          onChange={async (e) => {\n                            // await this.setState({ insType: e.label });\n                            await this.setState({ insType: [] });\n                            this.state.insType.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Type\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Year\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Year</label>\n                        <Select\n                          options={this.state.listyear}\n                          value={this.state.year[0]}\n                          onChange={async (e) => {\n                            // await this.setState({ year: e.label });\n                            await this.setState({ year: [] });\n                            this.state.year.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Year\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Month\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Month</label>\n                        <Select\n                          options={this.state.listMonth}\n                          value={this.state.Month[0]}\n                          onChange={async (e) => {\n                            // await this.setState({ Month: e.label });\n                            await this.setState({ Month: [] });\n                            this.state.Month.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Month\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].DATE.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Date.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"Reject_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                \n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"card card-primary card-outline\">\n                        {/* Chart Title */}\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <i className=\"far fa-chart-bar\" />\n                            \n                          </h3>\n                        </div>\n\n                        {/* Insert Xbar Chart */}\n                        <div className=\"row\" style={{ width: \"100%\" }}>\n                          <div style={{ width: \"1%\" }}></div>\n                          <div\n                            className=\"card card-warning\"\n                            style={{ width: \"99%\" }}\n                          >\n                            <div className=\"card-body\">\n                              <div className=\"row\">\n                                <div style={{ width: \"100%\" }}>\n                                  <ReactApexChart\n                                    options={this.state.options}\n                                    series={this.state.seriesY}\n                                    type=\"line\"\n                                    height={300}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">Month</th>\n                                <th width=\"120\">Input(lot)</th>\n                                <th width=\"120\">Output(lot)</th>\n                                <th width=\"120\">Reject(lot)</th>\n                                <th width=\"120\">Reject (%)</th>\n                                <th width=\"120\">LAR (%)</th>\n                                <th width=\"120\">Total inspection(QTY)</th>\n                                <th width=\"120\">Total sampling (QTY)</th>\n                                <th width=\"120\">Total defect (QTY)</th>\n                                <th width=\"120\">DPPM</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <h3>Reject QTY by Location(%) </h3>\n                </div>\n                <div className=\"col-sm-2\"></div>\n                <div className=\"col-sm-3\">\n                  <h3>Reject by Location (QTY) </h3>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">Month</th>\n                                <th width=\"120\">Cleanroom</th>\n                                <th width=\"120\">FDB</th>\n                                <th width=\"120\">Washing</th>\n                                <th width=\"120\">Whiteroom</th>\n                                <th width=\"120\">Loose part</th>\n                                <th width=\"120\">FAC2</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                      <div className=\"col-6\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">Month</th>\n                                <th width=\"120\">Cleanroom</th>\n                                <th width=\"120\">FDB</th>\n                                <th width=\"120\">Washing</th>\n                                <th width=\"120\">Whiteroom</th>\n                                <th width=\"120\">Loose part</th>\n                                <th width=\"120\">FAC2</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport3()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-md-3\">\n                  <h3> Defect NG (Qty) : by Location </h3>\n                </div>\n                <div className=\"col-sm-3\"></div>\n                <div className=\"col-sm-3\">\n                  <h3>DPPM : by Location </h3>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"100\">Month</th>\n                                <th width=\"120\">Cleanroom</th>\n                                <th width=\"120\">FDB</th>\n                                <th width=\"120\">Washing</th>\n                                <th width=\"120\">Whiteroom</th>\n                                <th width=\"120\">Loose part</th>\n                                <th width=\"120\">FAC2</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport6()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n\n                      <div className=\"col-6\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"100\">Month</th>\n                                <th width=\"120\">Cleanroom</th>\n                                <th width=\"120\">FDB</th>\n                                <th width=\"120\">Washing</th>\n                                <th width=\"120\">Whiteroom</th>\n                                <th width=\"120\">Loose part</th>\n                                <th width=\"120\">FAC2</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport5()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-3\">\n                  <h3> Reject QTY : by shift </h3>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"col-6\">\n                      <div\n                        className=\"card-body table-responsive p-0\"\n                        style={{ height: 400 }}\n                      >\n                        <table className=\"table table-head-fixed text-nowrap table-hover\">\n                          <thead>\n                            <tr align=\"center\">\n                              <th width=\"100\">Month</th>\n                              <th width=\"100\">SHIFT A</th>\n                              <th width=\"100\">SHIFT B</th>\n                              <th width=\"100\">SHIFT C</th>\n                              <th width=\"100\">SHIFT M</th>\n                              <th width=\"100\">SHIFT N</th>\n                            </tr>\n                          </thead>\n                          <tbody>{this.renderreport4()}</tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Daily_LAR_by_Model;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Monthly_LAR_report_by_Model extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Model: { label: \"**ALL**\" },\n      insType: [{ label: \"**ALL**\" }],\n      report: [],\n      xAxis: [],\n      yAxis: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listyear: [],\n      listModel: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getInsType();\n    await this.getyear();\n  };\n\n  doGetDataReport = async () => {\n    const modelLabel =\n    this.state.Model.label === \"**ALL**\" ? \"**ALL**\" : this.state.Model.label;\n    const result = await httpClient.get(\n      server.LARMONTHLY_URL +\n        \"/\" +\n        modelLabel +\n        \"/\" +\n        this.state.insType[0].label +\n        \"/\" +\n        this.state.year[0].label\n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Month);\n    }\n\n    let yAxis = result.data.Cleanroom_Percent;\n    let yAxis1 = result.data.FDB_Percent;\n    let yAxis2 = result.data.Loose_part_Percent;\n    let yAxis3 = result.data.Washing_Percent;\n    let yAxis4 = result.data.Whiteroom_Percent;\n    let yAxis5 = result.data.FAC2_Percent;\n    let yAxis6 = result.data.LAR_Percent;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      xAxis,\n      yAxis,\n      yAxis1,\n      yAxis2,\n      yAxis3,\n      yAxis4,\n      yAxis5,\n      yAxis6,\n\n      // series,\n\n      isDisable: false,\n    });\n    // let yAxis = result.data.Cleanroom\n    // let yAxis1 = result.data.FDB\n    // let yAxis2 = result.data.Loose_part\n    // let yAxis3 = result.data.Washing\n    // let yAxis4 = result.data.Whiteroom\n    // let yAxis6 = result.data.LAR_Percent\n    await this.setState({\n      // point : output_data.data.result[12].output_accum,\n      // let yAxis = result.data.Cleanroom_Percent\n      // let yAxis1 = result.data.FDB_Percent\n      // let yAxis2 = result.data.Loose_part_Percent\n      // let yAxis3 = result.data.Washing_Percent\n      // let yAxis4 = result.data.Whiteroom_Percent\n      // let yAxis5 = result.data.FAC2_Percent\n      // let yAxis6 = result.data.LAR_Percent\n      seriesY: [\n        {\n          name: \"Cleanroom Rej%\",\n          type: \"column\",\n          data: yAxis,\n        },\n        {\n          name: \"FDB Rej%\",\n          type: \"column\",\n          data: yAxis1,\n        },\n        {\n          name: \"Loose_part Rej%\",\n          type: \"column\",\n          data: yAxis2,\n        },\n        {\n          name: \"Washing Rej%\",\n          type: \"column\",\n          data: yAxis3,\n        },\n        {\n          name: \"Whiteroom Rej%\",\n          type: \"column\",\n          data: yAxis4,\n        },\n        {\n          name: \"FAC2 Rej%\",\n          type: \"column\",\n          data: yAxis5,\n        },\n        {\n          name: \"LAR %\",\n          type: \"line\",\n          data: yAxis6,\n        },\n      ],\n      options: {\n        chart: {\n          type: \"line\",\n          height: 300,\n          stacked: true,\n          toolbar: {\n            show: true,\n          },\n        },\n\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: \"bottom\",\n                offsetX: -10,\n                offsetY: 0,\n              },\n            },\n          },\n        ],\n        title: {\n          text: \"Monthly LAR report by Model \",\n          align: \"center\",\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [6],\n        },\n        xaxis: {\n          type: \"date\",\n          categories: xAxis,\n        },\n        yaxis: [\n          {\n            title: {\n              text: \"Reject QTY by Location(%)\",\n            },\n          },\n        ],\n        colors: [\n          // Cleanroom Rej\n          \"#3399ff\",\n          // FDB Rej%\n          \"#BEE3ED\",\n          // Loose_part Rej%\n          \"#ff1a1a\",\n          // Washing Rej%\n          \"#ffff00\",\n          // Whiteroom Rej%\n          \"#d24dff\",\n\n          \"#ff9900\",\n          // LAR %\n          \"#00ff00\",\n        ],\n        // legend: {\n        //   position: 'right',\n        //   offsetY: 40\n        // },\n        fill: {\n          opacity: 1,\n        },\n      },\n    });\n  };\n\n  getyear = async () => {\n    const array = await httpClient.get(server.LARYEAR_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.year,\n    }));\n    this.setState({ listyear: options });\n  };\n  getModel = async () => {\n    const array = await httpClient.get(server.LARMODEL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model_Name,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getInsType = async () => {\n    const modelLabel =\n    this.state.Model.label === \"**ALL**\"\n      ? \"**ALL**\"\n      : this.state.Model.label;\n    const array = await httpClient.get(\n      server.LARTYPE_URL + \"/\" + modelLabel\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.InspectionType,\n    }));\n    this.setState({ listInsType: options });\n  };\n\n  renderreport1 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"Month\"]}</td>\n            <td>\n              {Number(item[\"INPUT\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"OUTPUT\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"REJECT_LOT\"]}</td>\n            <td>{item[\"REJECT_Percent\"]}</td>\n            <td>{item[\"LAR_Percent\"]}</td>\n            <td>\n              {Number(item[\"TOTAL_inspection\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"TOTAL_sampling\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"defect_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"Month\"]}</td>\n            <td>{item[\"Cleanroom_Percent\"]}</td>\n            <td>{item[\"FDB_Percent\"]}</td>\n            <td>{item[\"Washing_Percent\"]}</td>\n            <td>{item[\"Whiteroom_Percent\"]}</td>\n            <td>{item[\"Loose_part_Percent\"]}</td>\n            <td>{item[\"FAC2_Percent\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport3 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"Month\"]}</td>\n            <td>\n              {Number(item[\"Cleanroom_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"FDB_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Washing_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Whiteroom_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Loose_part_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"FAC2_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport4 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"Month\"]}</td>\n            <td>{item[\"REJECT_SHIFT_A\"]}</td>\n            <td>{item[\"REJECT_SHIFT_B\"]}</td>\n            <td>{item[\"REJECT_SHIFT_C\"]}</td>\n            <td>{item[\"REJECT_SHIFT_M\"]}</td>\n            <td>{item[\"REJECT_SHIFT_N\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport6 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"Month\"]}</td>\n            <td>{item[\"Cleanroom_defect_QTY\"]}</td>\n            <td>{item[\"FDB_defect_QTY\"]}</td>\n            <td>{item[\"Washing_defect_QTY\"]}</td>\n            <td>{item[\"Whiteroom_defect_QTY\"]}</td>\n            <td>{item[\"Loose_part_defect_QTY\"]}</td>\n            <td>{item[\"FAC2_defect_QTY\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport5 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td>{item[\"Month\"]}</td>\n            <td>\n              {Number(item[\"Cleanroom_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"FDB_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Washing_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Whiteroom_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Loose_part_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"FAC2_DPPM\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Monthly LAR report by Model</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      Monthly LAR report by Model\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model</label>\n                        <Select\n                          options={this.state.listModel}\n                          value={this.state.Model}\n                          onChange={async (e) => {\n                            await this.setState({ Model: e });\n                            await this.getInsType();\n                            await this.getyear();\n                            await this.setState({\n                              insType: [{ label: \"Select Type\" }],\n                            });\n                            await this.setState({\n                              year: [{ label: \"Select Year\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Type</label>\n                        <Select\n                          options={this.state.listInsType}\n                          value={this.state.insType[0]}\n                          onChange={async (e) => {\n                            // await this.setState({ insType: e.label });\n                            await this.setState({ insType: [] });\n                            this.state.insType.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Type\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Year\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Year</label>\n                        <Select\n                          options={this.state.listyear}\n                          value={this.state.year[0]}\n                          onChange={async (e) => {\n                            // await this.setState({ year: e.label });\n                            await this.setState({ year: [] });\n                            this.state.year.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Year\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Month.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Month.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"Reject_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div style={{ marginTop: 30 }} className=\"col-md-2\">\n                      <a\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"card card-primary card-outline\">\n                        {/* Chart Title */}\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <i className=\"far fa-chart-bar\" />\n                            \n                          </h3>\n                        </div>\n\n                        {/* Insert Xbar Chart */}\n                        <div className=\"row\" style={{ width: \"100%\" }}>\n                          <div style={{ width: \"1%\" }}></div>\n                          <div\n                            className=\"card card-warning\"\n                            style={{ width: \"99%\" }}\n                          >\n                            <div className=\"card-body\">\n                              <div className=\"row\">\n                                <div style={{ width: \"100%\" }}>\n                                  <ReactApexChart\n                                    options={this.state.options}\n                                    series={this.state.seriesY}\n                                    type=\"line\"\n                                    height={450}\n                                  />\n                           \n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">Month</th>\n                                <th width=\"120\">Input(lot)</th>\n                                <th width=\"120\">Output(lot)</th>\n                                <th width=\"120\">Reject(lot)</th>\n                                <th width=\"120\">Reject (%)</th>\n                                <th width=\"120\">LAR (%)</th>\n                                <th width=\"120\">Total inspection(QTY)</th>\n                                <th width=\"120\">Total sampling (QTY)</th>\n                                <th width=\"120\">Total defect (QTY)</th>\n                                <th width=\"120\">DPPM</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <h3>Reject QTY by Location(%) </h3>\n                </div>\n                <div className=\"col-sm-2\"></div>\n                <div className=\"col-sm-3\">\n                  <h3>Reject by Location (QTY) </h3>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">Month</th>\n                                <th width=\"120\">Cleanroom</th>\n                                <th width=\"120\">FDB</th>\n                                <th width=\"120\">Washing</th>\n                                <th width=\"120\">Whiteroom</th>\n                                <th width=\"120\">Loose part</th>\n                                <th width=\"120\">FAC2</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                      <div className=\"col-6\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">Month</th>\n                                <th width=\"120\">Cleanroom</th>\n                                <th width=\"120\">FDB</th>\n                                <th width=\"120\">Washing</th>\n                                <th width=\"120\">Whiteroom</th>\n                                <th width=\"120\">Loose part</th>\n                                <th width=\"120\">FAC2</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport3()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-md-3\">\n                  <h3> Defect NG (Qty) : by Location </h3>\n                </div>\n                <div className=\"col-sm-3\"></div>\n                <div className=\"col-sm-3\">\n                  <h3>DPPM : by Location </h3>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"100\">Month</th>\n                                <th width=\"120\">Cleanroom</th>\n                                <th width=\"120\">FDB</th>\n                                <th width=\"120\">Washing</th>\n                                <th width=\"120\">Whiteroom</th>\n                                <th width=\"120\">Loose part</th>\n                                <th width=\"120\">FAC2</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport6()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n\n                      <div className=\"col-6\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"100\">Month</th>\n                                <th width=\"120\">Cleanroom</th>\n                                <th width=\"120\">FDB</th>\n                                <th width=\"120\">Washing</th>\n                                <th width=\"120\">Whiteroom</th>\n                                <th width=\"120\">Loose part</th>\n                                <th width=\"120\">FAC2</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport5()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-3\">\n                  <h3> Reject QTY : by shift </h3>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"col-6\">\n                      <div\n                        className=\"card-body table-responsive p-0\"\n                        style={{ height: 400 }}\n                      >\n                        <table className=\"table table-head-fixed text-nowrap table-hover\">\n                          <thead>\n                            <tr align=\"center\">\n                              <th width=\"100\">Month</th>\n                              <th width=\"100\">SHIFT A</th>\n                              <th width=\"100\">SHIFT B</th>\n                              <th width=\"100\">SHIFT C</th>\n                              <th width=\"100\">SHIFT M</th>\n                              <th width=\"100\">SHIFT N</th>\n                            </tr>\n                          </thead>\n                          <tbody>{this.renderreport4()}</tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Monthly_LAR_report_by_Model;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Monthly_LAR_report_all_Model extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      report: [],\n      xAxis: [],\n      yAxis1: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listyear: [],\n      listMonth: [],\n      listModel: [],\n\n      listYear: [],\n      listMonth: [],\n      selectedMaxYear: '',\n      selectedMaxMonth: '',\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getyear();\n    await this.getMonth();\n\n  };\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.LAR_URL +\n      \"/\" +\n      this.state.year+\n      \"/\" +\n      this.state.Month [0].label\n    \n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultGraph.length; index++) {\n      const item = result.data.resultGraph[index];\n      await xAxis.push(item.Model_Name);\n    }\n\n    let yAxis6 = result.data.LAR;\n    let yInput = result.data.Input;\n    let yReject = result.data.Reject;\n    let yRejectPP = result.data.Reject_Percent;\n\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      xAxis,\n      yAxis6,\n      yReject,\n      yInput,\n      yRejectPP,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      // let yAxis6 = result.data.LAR;\n      // let yInput = result.data.Input;\n      // let yReject = result.data.Reject;\n      seriesY: [\n        {\n          name: \"LAR %\",\n          type: \"column\",\n          data: yAxis6,\n        },\n        {\n          name: \"Reject %\",\n          type: 'line',\n          data: yRejectPP,\n        },\n      ],\n      options: {\n        chart: {\n          height: 350,\n          type: 'line',\n          stacked: false\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: [1, 5]\n        },\n        title: {\n          text: 'Monthly LAR report all Model',\n          align: 'left',\n          offsetX: 110\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [1],\n         \n        },\n        xaxis: {\n          categories: xAxis,\n        },\n        yaxis: [\n          {\n            min: 0.00,\n            max: 100.00,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: '#33cc33'\n            },\n            labels: {\n              style: {\n                colors: '#33cc33',\n              }\n            },\n            title: {\n              text: \"LAR%\",\n              style: {\n                color: '#33cc33',\n              }\n            },\n            tooltip: {\n              enabled: true\n            }\n          },\n          {\n            seriesName: 'Income',\n            opposite: true,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: '#ff1a1a'\n            },\n            labels: {\n              style: {\n                colors: '#ff1a1a',\n              }\n            },\n            title: {\n              text: \"Reject%\",\n              style: {\n                color: '#ff1a1a',\n              },\n            },\n          },\n        ],\n        colors: [\n          \"#33cc33\",\n          \"#ff1a1a\",\n        ],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft',\n            offsetY: 30,\n            offsetX: 60\n          },\n        },\n        legend: {\n          horizontalAlign: 'left',\n          offsetX: 40\n        },\n        legend: {\n          position: 'right',\n          offsetY: 40\n        }\n      }\n      \n      \n    });\n  };\n\n  //     server.LAR_URL +\n  //       \"/\" +\n  //       this.state.Month +\n  //       \"/\" +\n  //       this.state.year\n  //   );\n\n  //     let xAxis = [];\n\n  //     for (let index = 0; index < result.data.resultGraph.length; index++) {\n  //       const item = result.data.resultGraph[index];\n  //       await xAxis.push(item.Date);\n  //     }\n\n\n  //     let yAxis6 = result.data.LAR;\n\n  //     let rawData = result.data.listRawData;\n  //     console.log(rawData);\n  //     console.log(rawData.length);\n  //     for (let i = 1; i < rawData.length; i++) {\n  //       rawData[0].push(...rawData[i]);\n  //     }\n  //     this.setState({ Raw_Dat: rawData[0] });\n  //     console.log(this.state.Raw_Dat);\n\n  //     this.setState({\n  //       report: result.data.result,\n  //       xAxis,\n  //       yAxis6,\n\n\n  //       // series,\n\n  //       isDisable: false,\n  //     });\n\n  //   await this.setState({\n\n  //     seriesY: [\n  //       {\n  //         name: \"Cleanroom Rej%\",\n  //         type: \"line\",\n  //         data: yAxis6,\n  //       },\n\n  //     ],\n  //     options: {\n  //       chart: {\n  //         type: \"line\",\n  //         height: 300,\n  //         stacked: true,\n\n  //       },\n\n  //       responsive: [\n  //         {\n  //           breakpoint: 480,\n  //           options: {\n  //             legend: {\n  //               position: \"bottom\",\n  //               offsetX: -10,\n  //               offsetY: 0,\n  //             },\n  //           },\n  //         },\n  //       ],\n  //       title: {\n  //         text: \"Daily VMI LAR Trend \",\n  //         align: \"center\",\n  //       },\n  //       dataLabels: {\n  //         enabled: true,\n  //         enabledOnSeries: [0],\n  //       },\n  //       xAxis: {\n  //         type: \"date\",\n  //         categories: xAxis,\n  //       },\n  //       yaxis: [{\n  //         title: {\n  //           text: 'Reject QTY by Location(%)',\n  //         },\n\n  //       }],\n  //       colors: [\n  //         // Cleanroom Rej\n  //         \"#AFADDE\",\n  //         // FDB Rej%\n  //         \"#C0EEE4\",\n  //         // Loose_part Rej%\n  //         \"#F595B2\",\n  //         // Washing Rej%\n  //         \"#FFF1BA\",\n  //         // Whiteroom Rej%\n  //         \"#BEE3ED\",\n\n  //         \"#ff9900\",\n  //         // LAR %\n  //         \"#39F10F\",\n  //       ],\n  //       // legend: {\n  //       //   position: 'right',\n  //       //   offsetY: 40\n  //       // },\n  //       fill: {\n  //         opacity: 1,\n  //       },\n  //     },\n  //   });\n  // };\n  getMaxValue = (options) => {\n    let max = -Infinity;\n    let maxOption = null;\n\n    for (const option of options) {\n      const value = parseFloat(option.label);\n      if (!isNaN(value) && value > max) {\n        max = value;\n        maxOption = option;\n      }\n    }\n\n    return maxOption;\n  };\n\n  getYear = async () => {\n    const array = await httpClient.get(server.LARYEAR_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.year,\n    }));\n    this.setState({ listYear: options });\n\n    const maxYearOption = this.getMaxValue(options);\n    if (maxYearOption) {\n      this.setState({ selectedMaxYear: maxYearOption.label });\n    }\n  };\n\n  getMonth = async () => {\n    const array = await httpClient.get(server.LARMONTH_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Month,\n    }));\n    this.setState({ listMonth: options });\n\n    const maxMonthOption = this.getMaxValue(options);\n    if (maxMonthOption) {\n      this.setState({ selectedMaxMonth: maxMonthOption.label });\n    }\n  };\n  \n  getyear = async () => {\n    const array = await httpClient.get(server.LARYEAR_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.year,\n    }));\n    this.setState({ listyear: options });\n  };\n\n  getMonth = async () => {\n    const array = await httpClient.get(server.LARMONTH_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Month,\n    }));\n    this.setState({ listMonth: options });\n  };\n\n  renderreport = () => {\n\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"right\">\n            <td Align=\"left\">{item[\"ModelName\"]}</td>\n            <td>{item[\"TOTAL\"]}</td>\n            <td>{item[\"DAY1\"]}</td>\n            <td>{item[\"DAY2\"]}</td>\n            <td>{item[\"DAY3\"]}</td>\n            <td>{item[\"DAY4\"]}</td>\n            <td>{item[\"DAY5\"]}</td>\n            <td>{item[\"DAY6\"]}</td>\n            <td>{item[\"DAY7\"]}</td>\n            <td>{item[\"DAY8\"]}</td>\n            <td>{item[\"DAY9\"]}</td>\n            <td>{item[\"DAY10\"]}</td>\n            <td>{item[\"DAY11\"]}</td>\n            <td>{item[\"DAY12\"]}</td>\n            <td>{item[\"DAY13\"]}</td>\n            <td>{item[\"DAY14\"]}</td>\n            <td>{item[\"DAY15\"]}</td>\n            <td>{item[\"DAY16\"]}</td>\n            <td>{item[\"DAY17\"]}</td>\n            <td>{item[\"DAY18\"]}</td>\n            <td>{item[\"DAY19\"]}</td>\n            <td>{item[\"DAY20\"]}</td>\n            <td>{item[\"DAY21\"]}</td>\n            <td>{item[\"DAY22\"]}</td>\n            <td>{item[\"DAY23\"]}</td>\n            <td>{item[\"DAY24\"]}</td>\n            <td>{item[\"DAY25\"]}</td>\n            <td>{item[\"DAY26\"]}</td>\n            <td>{item[\"DAY27\"]}</td>\n            <td>{item[\"DAY28\"]}</td>\n            <td>{item[\"DAY29\"]}</td>\n            <td>{item[\"DAY30\"]}</td>\n            <td>{item[\"DAY31\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n\n  render() {\n    console.log(this.state.yAxis6)\n    console.log(this.state.xAxis)\n    console.log(this.state.yInput)\n    console.log(this.state.yReject)\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Monthly LAR report all Model</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                    Monthly LAR report all Model\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                        {/* //Select Critiria \"Year\" */}\n                        <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Year</label>\n                        <Select\n                          options={this.state.listyear}\n                          onChange={async (e) => {\n                            await this.setState({ year: e.label });\n                            await this.getMonth();\n                            await this.setState({\n                              Month: [\n                                { label: \"Select Month\" },\n                              ],\n                            });\n                          }}\n                          \n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select year\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Month\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Month</label>\n                        <Select\n                     options={this.state.listMonth}\n                     value={this.state.Month[0]}\n                     onChange={async (e) => {\n                       // await this.setState({ Month: e.label });\n                       await this.setState({ Month: [] });\n                       this.state.Month.push({ label: e.label });            \n                     }}\n                     // type=\"text\"\n                     // className=\"form-control\"\n                     placeholder=\"Select Month\"\n                   />\n                      </div>\n                    </div>\n                \n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].ModelName.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].ModelName.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"Reject_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <a style={{ marginTop: 30 }}  href=\"/defectNG\" className=\"fas fa-angle-double-left\"  class=\"btn btn-primary\"   role=\"button\" aria-pressed=\"true\">Back</a>\n                    </div>\n                    {/* <nav aria-label=\"Page navigation example\">\n                      <ul class=\"pagination\">\n                        <li class=\"page-item\">\n                          <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\n                            <span aria-hidden=\"true\">&laquo;</span>\n                            <span class=\"sr-only\">Previous</span>\n                          </a>\n                        </li>\n                        <li class=\"page-item\"><a class=\"page-link\" href=\"/defectNG\">1</a></li>\n                        <li class=\"page-item\"><a class=\"page-link\" href=\"/LAR\">2</a></li>\n                        <li class=\"page-item\">\n                          <a class=\"page-link\" href=\"/LAR\" aria-label=\"Next\">\n                            <span aria-hidden=\"true\">&raquo;</span>\n                            <span class=\"sr-only\">Next</span>\n                          </a>\n                        </li>\n                      </ul>\n                    </nav> */}\n\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"card card-primary card-outline\">\n                        {/* Chart Title */}\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <i className=\"far fa-chart-bar\" />\n                            \n                          </h3>\n                        </div>\n\n                        {/* Insert Xbar Chart */}\n                        <div className=\"row\" style={{ width: \"100%\" }}>\n                          <div style={{ width: \"1%\" }}></div>\n                          <div\n                            className=\"card card-warning\"\n                            style={{ width: \"99%\" }}\n                          >\n                            <div className=\"card-body\">\n                              <div className=\"row\">\n                                <div style={{ width: \"100%\" }}>\n                                  <ReactApexChart\n                                    options={this.state.options}\n                                    series={this.state.seriesY}\n                                    type=\"line\"\n                                    height={450}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"100\">Model_Name</th>\n                                <th width=\"120\">LAR</th>\n                                <th width=\"120\">01</th>\n                                <th width=\"120\">02</th>\n                                <th width=\"120\">03</th>\n                                <th width=\"120\">04</th>\n                                <th width=\"120\">05</th>\n                                <th width=\"120\">06</th>\n                                <th width=\"120\">07</th>\n                                <th width=\"120\">08</th>\n                                <th width=\"120\">09</th>\n                                <th width=\"120\">10</th>\n                                <th width=\"120\">11</th>\n                                <th width=\"120\">12</th>\n                                <th width=\"120\">13</th>\n                                <th width=\"120\">14</th>\n                                <th width=\"120\">15</th>\n                                <th width=\"120\">16</th>\n                                <th width=\"120\">17</th>\n                                <th width=\"120\">18</th>\n                                <th width=\"120\">19</th>\n                                <th width=\"120\">20</th>\n                                <th width=\"120\">21</th>\n                                <th width=\"120\">22</th>\n                                <th width=\"120\">23</th>\n                                <th width=\"120\">24</th>\n                                <th width=\"120\">25</th>\n                                <th width=\"120\">26</th>\n                                <th width=\"120\">27</th>\n                                <th width=\"120\">28</th>\n                                <th width=\"120\">29</th>\n                                <th width=\"120\">30</th>\n                                <th width=\"120\">31</th>\n\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Monthly_LAR_report_all_Model;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass Product_hold_control extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: \"\",\n      checkboxChecked: false,\n      checkboxHoldNumber: false,\n      checkboxbyModel: false,\n      Download_Hold_ALL: false,\n      Hold_ALL_PC: false,\n      isDisable: false,\n      report: \"\",\n      report1: \"\",\n      report2: \"\",\n      report3: \"\",\n      HoldNumber: \"\",\n      QANumber: \"\",\n      CHECKBOXALL: \"\",\n      isLoadingCheckboxAll: false, // Add separate isLoading state for \"ALL Hold Report\" radio button\n      isLoadingHoldAll: false, // Add separate isLoading state for \"Balance ALL\" radio button\n      Raw_Dat: [],\n    };\n    //set state\n    this.state = {\n      model: [],\n      Line: [],\n      Status: [],\n      Access_by: [],\n      report: [],\n      QANumber: \"\",\n      Holdnumber: \"\",\n      report: [],\n      report2: [],\n      report3: [],\n      CHECKBOXALL: [],\n      HOLDFORPC: [],\n\n      Raw_Dat2: [],\n      Raw_Dat3: [],\n\n      Raw_Dat: [],\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listModel: [],\n      listLine_No: [],\n      listStatus: [],\n      listAccess_by: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getLine_No();\n    await this.getStatus();\n    await this.getAccess_by();\n  };\n\n  state = {\n    showData: false, // สถานะเริ่มต้นเป็น false (ไม่แสดงข้อมูล)\n  };\n\n  handleCheckboxChange = () => {\n    this.setState((prevState) => ({\n      showData: !prevState.showData, // อัปเดตสถานะเป็นตรงข้ามกับค่าเดิม\n    }));\n  };\n  handleDateOptionChange = (event) => {\n    this.setState({ selectedDateOption: event.target.value });\n  };\n\n  // report with select model,date,type\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.REPORTHOLD_URL +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.Status[0].label +\n        \"/\" +\n        this.state.Access_by[0].label +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.selectedDateOption\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n  doGetDataReport2 = async () => {\n    const result = await httpClient.get(\n      server.QAHOLD_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData2;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat2: rawData[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  doGetDataReport3 = async () => {\n    const result = await httpClient.get(\n      server.HOLDNUMBER_URL + \"/\" + this.state.Holdnumber\n    );\n\n    let rawData = result.data.listRawData3;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat3: rawData[0] });\n    console.log(this.state.Raw_Dat3);\n\n    this.setState({\n      report3: result.data.result,\n      isDisable: false,\n    });\n  };\n  DoGetAll = async () => {\n    try {\n      this.setState({ isLoadingCheckboxAll: true }); // Set isLoadingCheckboxAll to true before fetching data\n      const result = await httpClient.get(server.CHECKBOXALL_URL);\n\n      let rawData = result.data.listRawData;\n      console.log(rawData);\n      for (let i = 1; i < rawData.length; i++) {\n        rawData[0].push(...rawData[i]);\n      }\n      this.setState({ Raw_Dat: rawData[0] });\n      console.log(this.state.Raw_Dat);\n\n      this.setState({\n        CHECKBOXALL: result.data.result,\n        isDisable: true,\n        isLoadingCheckboxAll: false, // Set isLoadingCheckboxAll back to false after data is fetched\n      });\n    } catch (error) {\n      console.error(\"Error while fetching data:\", error);\n      this.setState({ isLoadingCheckboxAll: false }); // Ensure isLoadingCheckboxAll is reset even on error\n    }\n  };\n  DoGetAllFORPC = async () => {\n    try {\n      this.setState({ isLoadingHoldAll: true }); // Set isLoadingHoldAll to true before fetching data\n      const result = await httpClient.get(server.HOLDFORPC_URL);\n\n      let rawData = result.data.listRawData;\n      console.log(rawData);\n      for (let i = 1; i < rawData.length; i++) {\n        rawData[0].push(...rawData[i]);\n      }\n      this.setState({ Raw_Dat: rawData[0] });\n      console.log(this.state.Raw_Dat);\n\n      this.setState({\n        HOLDFORPC: result.data.result,\n        isDisable: true,\n        isLoadingHoldAll: false, // Set isLoadingHoldAll back to false after data is fetched\n      });\n    } catch (error) {\n      console.error(\"Error while fetching data:\", error);\n      this.setState({ isLoadingHoldAll: false }); // Ensure isLoadingHoldAll is reset even on error\n    }\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.ModelHoldQA_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.ModelGroup,\n    }));\n    this.setState({ listModel: options });\n  };\n  \n\n  getLine_No = async () => {\n    const array = await httpClient.get(\n      server.LINEQAHOLD_URL + \"/\" + this.state.model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line_No,\n    }));\n    this.setState({ listLine_No: options });\n  };\n  getStatus = async () => {\n    const array = await httpClient.get(server.StatusQAHOLD_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Status,\n    }));\n    this.setState({ listStatus: options });\n  };\n\n  getAccess_by = async () => {\n    const array = await httpClient.get(\n      server.Access_byHOLD_URL + \"/\" + this.state.Status\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Access_by,\n    }));\n    this.setState({ listAccess_by: options });\n  };\n\n  renderReport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr>\n            <td>{item[\"Setlot_Date\"]}</td>\n            <td>{item[\"Setlot_Datetime\"]}</td>\n            <td>{item[\"Qa_insp_date\"]}</td>\n            <td>{item[\"Qa_insp_Datetime\"]}</td>\n\n            <td>{item[\"Hold_Date_Mfg\"]}</td>\n            <td>{item[\"Hold_Date\"]}</td>\n            <td>{item[\"Hold_DateTime\"]}</td>\n\n            <td>{item[\"Model_group\"]}</td>\n            <td>{item[\"ModelNumber\"]}</td>\n            <td>{item[\"Line_No\"]}</td>\n            <td>{item[\"Hold_index\"]}</td>\n            <td>{item[\"Lot_QA\"]}</td>\n            <td>{item[\"DateCode\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"Hold_detail\"]}</td>\n            <td>{item[\"Remark\"]}</td>\n            <td>{item[\"Disposition\"]}</td>\n            <td>{item[\"Hold_by\"]}</td>\n            <td>{item[\"Access_by\"]}</td>\n            <td\n              style={{\n                color:\n                  item[\"QA_result\"] === \"REJECT\"\n                    ? \"red\"\n                    : item[\"QA_result\"] === \"ACCEPT\"\n                    ? \"green\"\n                    : \"black\",\n              }}\n            >\n              {item[\"QA_result\"]}\n            </td>\n\n            <td\n              style={{\n                color:\n                  item[\"Status_Hold\"] === \"Hold\"\n                    ? \"#FF8C00\" // หรือใช้ \"rgb(255, 69, 0)\"\n                    : item[\"Status_Hold\"] === \"Accept\"\n                    ? \"green\"\n                    : \"black\",\n              }}\n            >\n              {item[\"Status_Hold\"]}\n            </td>\n            <td>{item[\"Status_Shipped\"]}</td>\n            <td>{item[\"Hold_Period\"]}</td>\n            <td>{item[\"SpecialControl5\"]}</td>\n            <td>{item[\"Release_Date\"]}</td>\n            <td>{item[\"Reason_to_Release\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderReport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr>\n            <td>{item[\"Setlot_Date\"]}</td>\n            <td>{item[\"Setlot_Datetime\"]}</td>\n            <td>{item[\"Qa_insp_date\"]}</td>\n            <td>{item[\"Qa_insp_Datetime\"]}</td>\n\n            <td>{item[\"Hold_Date_Mfg\"]}</td>\n            <td>{item[\"Hold_Date\"]}</td>\n            <td>{item[\"Hold_DateTime\"]}</td>\n\n            <td>{item[\"Model_group\"]}</td>\n            <td>{item[\"ModelNumber\"]}</td>\n            <td>{item[\"Line_No\"]}</td>\n            <td>{item[\"Hold_index\"]}</td>\n            <td>{item[\"Lot_QA\"]}</td>\n            <td>{item[\"DateCode\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"Hold_detail\"]}</td>\n            <td>{item[\"Remark\"]}</td>\n            <td>{item[\"Disposition\"]}</td>\n            <td>{item[\"Hold_by\"]}</td>\n            <td>{item[\"Access_by\"]}</td>\n            <td\n              style={{\n                color:\n                  item[\"QA_result\"] === \"REJECT\"\n                    ? \"red\"\n                    : item[\"QA_result\"] === \"ACCEPT\"\n                    ? \"green\"\n                    : \"black\",\n              }}\n            >\n              {item[\"QA_result\"]}\n            </td>\n\n            <td\n              style={{\n                color:\n                  item[\"Status_Hold\"] === \"Hold\"\n                    ? \"#FF8C00\" // หรือใช้ \"rgb(255, 69, 0)\"\n                    : item[\"Status_Hold\"] === \"Accept\"\n                    ? \"green\"\n                    : \"black\",\n              }}\n            >\n              {item[\"Status_Hold\"]}\n            </td>\n            <td>{item[\"Status_Shipped\"]}</td>\n            <td>{item[\"Hold_Period\"]}</td>\n            <td>{item[\"SpecialControl5\"]}</td>\n            <td>{item[\"Release_Date\"]}</td>\n            <td>{item[\"Reason_to_Release\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  renderReport3 = () => {\n    if (this.state.report3 != null) {\n      if (this.state.report3.length > 0) {\n        return this.state.report3.map((item) => (\n          <tr>\n            <td>{item[\"Setlot_Date\"]}</td>\n            <td>{item[\"Setlot_Datetime\"]}</td>\n            <td>{item[\"Qa_insp_date\"]}</td>\n            <td>{item[\"Qa_insp_Datetime\"]}</td>\n\n            <td>{item[\"Hold_Date_Mfg\"]}</td>\n            <td>{item[\"Hold_Date\"]}</td>\n            <td>{item[\"Hold_DateTime\"]}</td>\n\n            <td>{item[\"Model_group\"]}</td>\n            <td>{item[\"ModelNumber\"]}</td>\n            <td>{item[\"Line_No\"]}</td>\n            <td>{item[\"Hold_index\"]}</td>\n            <td>{item[\"Lot_QA\"]}</td>\n            <td>{item[\"DateCode\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"Hold_detail\"]}</td>\n            <td>{item[\"Remark\"]}</td>\n            <td>{item[\"Disposition\"]}</td>\n            <td>{item[\"Hold_by\"]}</td>\n            <td>{item[\"Access_by\"]}</td>\n            <td\n              style={{\n                color:\n                  item[\"QA_result\"] === \"REJECT\"\n                    ? \"red\"\n                    : item[\"QA_result\"] === \"ACCEPT\"\n                    ? \"green\"\n                    : \"black\",\n              }}\n            >\n              {item[\"QA_result\"]}\n            </td>\n\n            <td\n              style={{\n                color:\n                  item[\"Status_Hold\"] === \"Hold\"\n                    ? \"#FF8C00\" // หรือใช้ \"rgb(255, 69, 0)\"\n                    : item[\"Status_Hold\"] === \"Accept\"\n                    ? \"green\"\n                    : \"black\",\n              }}\n            >\n              {item[\"Status_Hold\"]}\n            </td>\n            <td>{item[\"Status_Shipped\"]}</td>\n            <td>{item[\"Hold_Period\"]}</td>\n            <td>{item[\"SpecialControl5\"]}</td>\n            <td>{item[\"Release_Date\"]}</td>\n            <td>{item[\"Reason_to_Release\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderAll = () => {\n    if (this.state.CHECKBOXALL != null) {\n      if (this.state.CHECKBOXALL.length > 0) {\n        return this.state.CHECKBOXALL.map((item) => (\n          <tr>\n            <td>{item[\"Setlot_Date\"]}</td>\n            <td>{item[\"Setlot_Datetime\"]}</td>\n            <td>{item[\"Qa_insp_date\"]}</td>\n            <td>{item[\"Qa_insp_Datetime\"]}</td>\n\n            <td>{item[\"Hold_Date_Mfg\"]}</td>\n            <td>{item[\"Hold_Date\"]}</td>\n            <td>{item[\"Hold_DateTime\"]}</td>\n\n            <td>{item[\"Model_group\"]}</td>\n            <td>{item[\"ModelNumber\"]}</td>\n            <td>{item[\"Line_No\"]}</td>\n            <td>{item[\"Hold_index\"]}</td>\n            <td>{item[\"Lot_QA\"]}</td>\n            <td>{item[\"DateCode\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"Hold_detail\"]}</td>\n            <td>{item[\"Remark\"]}</td>\n            <td>{item[\"Disposition\"]}</td>\n            <td>{item[\"Hold_by\"]}</td>\n            <td>{item[\"Access_by\"]}</td>\n            <td\n              style={{\n                color:\n                  item[\"QA_result\"] === \"REJECT\"\n                    ? \"red\"\n                    : item[\"QA_result\"] === \"ACCEPT\"\n                    ? \"green\"\n                    : \"black\",\n              }}\n            >\n              {item[\"QA_result\"]}\n            </td>\n\n            <td\n              style={{\n                color:\n                  item[\"Status_Hold\"] === \"Hold\"\n                    ? \"#FF8C00\" // หรือใช้ \"rgb(255, 69, 0)\"\n                    : item[\"Status_Hold\"] === \"Accept\"\n                    ? \"green\"\n                    : \"black\",\n              }}\n            >\n              {item[\"Status_Hold\"]}\n            </td>\n            <td>{item[\"Status_Shipped\"]}</td>\n            <td>{item[\"Hold_Period\"]}</td>\n            <td>{item[\"SpecialControl5\"]}</td>\n            <td>{item[\"Release_Date\"]}</td>\n            <td>{item[\"Reason_to_Release\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderforpc = () => {\n    if (this.state.HOLDFORPC != null) {\n      if (this.state.HOLDFORPC.length > 0) {\n        return this.state.HOLDFORPC.map((item) => (\n          <tr>\n            <td>{item[\"Setlot_Date\"]}</td>\n            <td>{item[\"Setlot_Datetime\"]}</td>\n            <td>{item[\"Qa_insp_date\"]}</td>\n            <td>{item[\"Qa_insp_Datetime\"]}</td>\n\n            <td>{item[\"Hold_Date_Mfg\"]}</td>\n            <td>{item[\"Hold_Date\"]}</td>\n            <td>{item[\"Hold_DateTime\"]}</td>\n\n            <td>{item[\"Model_group\"]}</td>\n            <td>{item[\"ModelNumber\"]}</td>\n            <td>{item[\"Line_No\"]}</td>\n            <td>{item[\"Hold_index\"]}</td>\n            <td>{item[\"Lot_QA\"]}</td>\n            <td>{item[\"DateCode\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"Hold_detail\"]}</td>\n            <td>{item[\"Remark\"]}</td>\n            <td>{item[\"Disposition\"]}</td>\n            <td>{item[\"Hold_by\"]}</td>\n            <td>{item[\"Access_by\"]}</td>\n            <td\n              style={{\n                color:\n                  item[\"QA_result\"] === \"REJECT\"\n                    ? \"red\"\n                    : item[\"QA_result\"] === \"ACCEPT\"\n                    ? \"green\"\n                    : \"black\",\n              }}\n            >\n              {item[\"QA_result\"]}\n            </td>\n\n            <td\n              style={{\n                color:\n                  item[\"Status_Hold\"] === \"Hold\"\n                    ? \"#FF8C00\" // หรือใช้ \"rgb(255, 69, 0)\"\n                    : item[\"Status_Hold\"] === \"Accept\"\n                    ? \"green\"\n                    : \"black\",\n              }}\n            >\n              {item[\"Status_Hold\"]}\n            </td>\n            <td>{item[\"Status_Shipped\"]}</td>\n            <td>{item[\"Hold_Period\"]}</td>\n            <td>{item[\"SpecialControl5\"]}</td>\n            <td>{item[\"Release_Date\"]}</td>\n            <td>{item[\"Reason_to_Release\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  async resetHoldnumber() {\n    await this.setState({\n      Holdnumber: \"\", // ตั้งค่า input ให้เป็นค่าว่างตามที่คุณต้องการ\n    });\n  }\n  async resetQanumber() {\n    await this.setState({\n      QANumber: \"\", // ตั้งค่า input ให้เป็นค่าว่างตามที่คุณต้องการ\n    });\n  }\n  handleSubmit = () => {\n    this.DoGetAll(); // เรียกใช้ฟังก์ชัน DoGetAll เพื่อดึงข้อมูล\n  };\n\n  state = {\n    checkboxChecked: false,\n    checkboxHoldNumber: false,\n    showData: false, // สถานะเริ่มต้นเป็น false (ไม่แสดงข้อมูล)\n  };\n\n  handleCheckboxChange = () => {\n    this.setState((prevState) => ({\n      checkboxChecked: !prevState.checkboxChecked,\n      checkboxHoldNumber: false,\n      showData: false, // รีเซ็ตค่า showData เป็น false เมื่อมีการเปลี่ยนแปลง checkbox\n    }));\n  };\n\n  handleCheckHoldNumber = () => {\n    this.setState((prevState) => ({\n      checkboxChecked: false,\n      checkboxHoldNumber: !prevState.checkboxHoldNumber,\n      showData: false, // รีเซ็ตค่า showData เป็น false เมื่อมีการเปลี่ยนแปลง checkbox\n    }));\n  };\n\n  render() {\n    console.log(this.state.model);\n    console.log(this.state.Line);\n    console.log(this.state.Status);\n    console.log(this.state.Access_by);\n    console.log(this.state.listAccess_by);\n    const { isLoadingCheckboxAll, isLoadingHoldAll } = this.state;\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Product hold control </h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      Product hold control{\" \"}\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Search Report By</label>\n                  </h3>\n                  <div className=\"row\">\n                    <div className=\"col-1\"></div>\n                    <div className=\"col-sm-1\">\n                      <label>\n                        <input\n                          type=\"radio\"\n                          checked={\n                            this.state.selectedOption === \"checkboxbyModel\"\n                          }\n                          onChange={() =>\n                            this.setState({\n                              selectedOption: \"checkboxbyModel\",\n                              checkboxChecked: false,\n                              checkboxHoldNumber: false,\n                              checkboxbyModel: true,\n                              CHECKBOXALL: false,\n                              Download_Hold_ALL: false,\n                              isDisable: false,\n                              //by model\n                              report: \"\",\n                              // by QA\n                              report2: \"\",\n                              // by index\n                              report3: \"\",\n                              //All Hold\n                              CHECKBOXALL: \"\",\n                              //All hold Pc\n                              HOLDFORPC: \"\",\n\n                              Download_Hold_ALL: \"\",\n\n                              Hold_ALL_PC: \"\",\n                            })\n                          }\n                        />\n                        Model\n                      </label>\n                    </div>\n\n                    <div className=\"col-sm-2\">\n                      <label>\n                        <input\n                          type=\"radio\"\n                          checked={\n                            this.state.selectedOption === \"checkboxChecked\"\n                          }\n                          onChange={() =>\n                            this.setState({\n                              selectedOption: \"checkboxChecked\",\n                              checkboxChecked: true,\n                              checkboxHoldNumber: false,\n                              Download_Hold_ALL: false,\n                              checkboxbyModel: false,\n                              isDisable: false,\n                              //by model\n                              report: \"\",\n                              // by QA\n                              report2: \"\",\n                              // by index\n                              report3: \"\",\n                              //All Hold\n                              CHECKBOXALL: \"\",\n                              //All hold Pc\n                              HOLDFORPC: \"\",\n                              Download_Hold_ALL: \"\",\n\n                              Hold_ALL_PC: \"\",\n                            })\n                          }\n                        />\n                        QA Number\n                      </label>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <label>\n                        <input\n                          type=\"radio\"\n                          checked={\n                            this.state.selectedOption === \"checkboxHoldNumber\"\n                          }\n                          onChange={() =>\n                            this.setState({\n                              selectedOption: \"checkboxHoldNumber\",\n                              checkboxChecked: false,\n                              checkboxHoldNumber: true,\n                              Download_Hold_ALL: false,\n                              checkboxbyModel: false,\n                              isDisable: false,\n                              //by model\n                              report: \"\",\n                              // by QA\n                              report2: \"\",\n                              // by index\n                              report3: \"\",\n                              //All Hold\n                              CHECKBOXALL: \"\",\n                              //All hold Pc\n                              HOLDFORPC: \"\",\n                              Download_Hold_ALL: \"\",\n\n                              Hold_ALL_PC: \"\",\n                            })\n                          }\n                        />\n                        Hold Number\n                      </label>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      {isLoadingCheckboxAll ? (\n                        <span>Loading...</span>\n                      ) : (\n                        <label>\n                          <input\n                            type=\"radio\"\n                            checked={\n                              this.state.selectedOption === \"CHECKBOXALL\"\n                            }\n                            onChange={async () => {\n                              await this.DoGetAll();\n                              this.setState({\n                                selectedOption: \"CHECKBOXALL\",\n                                checkboxChecked: false,\n                                checkboxHoldNumber: false,\n                                checkboxbyModel: false,\n                                Download_Hold_ALL: true,\n                                isDisable: false,\n                                report: \"\",\n                                report1: \"\",\n                                report2: \"\",\n                                report3: \"\",\n                                HoldNumber: \"\",\n                                QANumber: \"\",\n                                Hold_ALL_PC: \"\",\n                                HOLDFORPC: \"\",\n                              });\n                            }}\n                          />\n                          ALL Hold Report\n                        </label>\n                      )}\n                    </div>\n\n                    <div className=\"col-md-2\">\n                      {isLoadingHoldAll ? (\n                        <span>Loading...</span>\n                      ) : (\n                        <label>\n                          <input\n                            type=\"radio\"\n                            checked={\n                              this.state.selectedOption === \"Hold_ALL_PC\"\n                            }\n                            onChange={async () => {\n                              await this.DoGetAllFORPC();\n                              this.setState({\n                                selectedOption: \"Hold_ALL_PC\",\n                                checkboxChecked: false,\n                                checkboxHoldNumber: false,\n                                checkboxbyModel: false,\n                                Download_Hold_ALL: false,\n                                Hold_ALL_PC: true,\n                                isDisable: false,\n                                report: \"\",\n                                report1: \"\",\n                                report2: \"\",\n                                report3: \"\",\n                                HoldNumber: \"\",\n                                QANumber: \"\",\n                                CHECKBOXALL: \"\",\n                              });\n                            }}\n                          />\n                          Balance ALL\n                        </label>\n                      )}\n                    </div>\n                    <div>{/* Rest of your component's content */}</div>\n                    {this.state.Download_Hold_ALL && (\n                      <div className=\"col-md-1\">\n                        <CSVLink\n                          data={this.state.Raw_Dat}\n                          filename={\"ALL Hold Report.csv\"}\n                        >\n                          <button type=\"button\" className=\"btn btn-primary\">\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                    )}\n\n                    {this.state.Hold_ALL_PC && (\n                      <div className=\"col-md-1\">\n                        <CSVLink\n                          data={this.state.Raw_Dat}\n                          filename={\"Balance ALL.csv\"}\n                        >\n                          <button type=\"button\" className=\"btn btn-primary\">\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {this.state.checkboxChecked && (\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <label>QA Number</label>\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-3\">\n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.QANumber}\n                          onChange={async (e) => {\n                            await this.setState({\n                              QANumber: e.target.value,\n                            });\n                            await this.resetHoldnumber();\n                            this.setState({\n                              model: [{ label: \"Select Model\" }],\n                            });\n                            this.setState({ Line: [{ label: \"Select Line\" }] });\n                            this.setState({\n                              Status: [{ label: \"Select Status\" }],\n                            });\n                            this.setState({\n                              Access_by: [{ label: \"Select Hold_by\" }],\n                            });\n                            this.setState({\n                              report: \"\",\n                              report1: \"\",\n                              report2: \"\",\n                              report3: \"\",\n                              report3: \"\",\n                              HoldNumber: \"\",\n                              CHECKBOXALL: \"\",\n                              isDisable: false,\n                              selectedOption: \"\", // เพิ่มการตั้งค่าเริ่มต้นของ select\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeHolder=\"Scan QANumber here\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ report: \"\" });\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport2();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report2.length > 0) {\n                              if (this.state.report2[0].Lot_QA.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report2[0].Lot_QA.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        // style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-3\">\n                      <CSVLink\n                        data={this.state.Raw_Dat2}\n                        filename={\"QA_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          // style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              )}\n              {this.state.checkboxHoldNumber && (\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <label>Hold number</label>\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-3\">\n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.Holdnumber}\n                          onChange={async (e) => {\n                            await this.setState({\n                              Holdnumber: e.target.value,\n                            });\n                            await this.setState({\n                              model: [{ label: \"Select Model\" }],\n                            });\n                            await this.setState({\n                              Line: [{ label: \"Select Line\" }],\n                            });\n                            await this.setState({\n                              Status: [{ label: \"Select Status\" }],\n                            });\n\n                            await this.setState({\n                              Access_by: [{ label: \"Select Hold_by\" }],\n                            });\n                            await this.resetQanumber();\n\n                            // this.resetHoldnumber();\n                            this.setState({\n                              report: \"\",\n                              report1: \"\",\n                              report2: \"\",\n                              report3: \"\",\n                              report3: \"\",\n                              HoldNumber: \"\",\n                              isDisable: false,\n                              selectedOption: \"\", // เพิ่มการตั้งค่าเริ่มต้นของ select\n                            });\n                            // await this.setState({\n                            //   Holdnumber: [{ label: \"Select Line\" }],\n                            // });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeHolder=\"Hold_number\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n\n                        onClick={(e) => {\n                          this.setState({ report: \"\" });\n                          this.setState({ isDisable: true });\n\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport3();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report3.length > 0) {\n                              if (this.state.report3[0].Lot_QA.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report3[0].Lot_QA.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        // style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-3\">\n                      <CSVLink\n                        data={this.state.Raw_Dat3}\n                        filename={\"Hold_number.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          // style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              )}\n              {this.state.checkboxbyModel && (\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-sm-2\">\n                      <div className=\"form-group\">\n                        <div></div>\n                        <label>Model group</label>\n                        <Select\n                          options={this.state.listModel}\n                          onChange={async (e) => {\n                            await this.setState({ model: e.label });\n                            await this.getLine_No();\n                            await this.getStatus();\n                            await this.getAccess_by();\n\n                            await this.setState({\n                              Line: [{ label: \"Select Line\" }],\n                            });\n                            await this.setState({\n                              Status: [{ label: \"Select Status\" }],\n                            });\n\n                            await this.setState({\n                              Access_by: [{ label: \"Select Hold_by\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeHolder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Line_No\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line_No</label>\n                        <Select\n                          options={this.state.listLine_No}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [] });\n                            this.state.Line.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeHolder=\"Select Line_No\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-2\">\n                      <div className=\"form-group\">\n                        <label>Status</label>\n                        <Select\n                          options={this.state.listStatus}\n                          value={this.state.Status[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Status: [] });\n                            this.state.Status.push({ label: e.label });\n                            await this.getAccess_by();\n                            // if (e.label === \"ACCEPT\") {\n                            //   await this.setState({\n                            //     Access_by: \"--\", // กำหนดให้ Access_by เป็นค่าว่างหรือไม่มีตัวเลือกเลย\n                            //   });\n                            // } else {\n                            //   await this.setState({\n                            //     Access_by: [{ label: \"Select Hold_by\" }],\n                            //   });\n                            //   await this.getAccess_by();\n                            // }\n                          }}\n                          placeHolder=\"Select Status\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-2\">\n                      <div className=\"form-group\">\n                        <label>Access by</label>\n                        <Select\n                          options={this.state.listAccess_by}\n                          value={this.state.Access_by[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Access_by: [] });\n                            this.state.Access_by.push({ label: e.label });\n                          }}\n                          placeHolder=\"Select Hold_by\"\n                          // isDisabled={this.state.Status[0]?.label === \"ACCEPT\"} // กำหนดให้เป็น true เมื่อ Status เป็น \"ACCEPT\" เพื่อปิดการเลือก\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-12\">\n                    <div>\n                      <label>\n                        <input\n                          type=\"radio\"\n                          value=\"Hold_Date\"\n                          checked={\n                            this.state.selectedDateOption === \"Hold_Date\"\n                          }\n                          onChange={this.handleDateOptionChange}\n                        />\n                        Date (Hold)\n                      </label>\n                    </div>\n                    <div>\n                      <label>\n                        <input\n                          type=\"radio\"\n                          value=\"Setlot_Date\"\n                          checked={\n                            this.state.selectedDateOption === \"Setlot_Date\"\n                          }\n                          onChange={this.handleDateOptionChange}\n                        />\n                        Date (Setlot)\n                      </label>\n                    </div>\n                                        {/* //Select Start Date */}\n                                        <div className=\"col-2\">\n                      <div className=\"form-group\">\n                        <label>Select Date &nbsp;</label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeHolder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n      \n\n                    {/* //Select Finish Date */}\n                    <div className=\"col-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeHolder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div>\n                    </div>\n\n\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable }\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({\n                            report: \"\",\n                            report1: \"\",\n                            report2: \"\",\n                            report3: \"\",\n                            report3: \"\",\n                            HoldNumber: \"\",\n                            CHECKBOXALL: \"\",\n                            isDisable: false,\n                            selectedOption: \"\", // เพิ่มการตั้งค่าเริ่มต้นของ select\n                          });\n                          if (!this.state.selectedDateOption) {\n                            Swal.fire({\n                              icon: \"error\",\n                              title: \"Select Date\",\n                              text: \"Please select a date option before submitting.\",\n                            });\n                            return; // Stop further execution\n                          }\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Lot_QA.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Lot_QA.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"Hold system.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{\n                            height: 500,\n                            zIndex: \"3\",\n                            position: \"relative\",\n                            zIndex: \"0\",\n                          }}\n                        >\n                          <table className=\"table text-nowrap table-hover table-head-fixed\">\n                            <thead\n                              style={{\n                                backgroundColor: \"black\",\n                                color: \"black\",\n                              }}\n                            >\n                              <tr>\n                                <th width=\"50\">Setlot Date</th>\n                                <th width=\"50\">Setlot Datetime</th>\n                                <th width=\"50\">Qa ins'p Date</th>\n                                <th width=\"50\">Qa ins'p Datetime</th>\n                                <th width=\"50\">Hold Mfg Date </th>\n                                <th width=\"50\">Hold Date</th>\n                                <th width=\"50\">Hold DateTime</th>\n                                <th width=\"50\">Model group</th>\n                                <th width=\"50\">Model Number</th>\n                                <th width=\"50\">Line No</th>\n                                <th width=\"50\">Hold Number</th>\n                                <th width=\"50\">Lot QA</th>\n                                <th width=\"50\">DateCode</th>\n                                <th width=\"50\">QTY</th>\n                                <th width=\"50\">Hold detail</th>\n                                <th width=\"50\">Remark</th>\n                                <th width=\"50\">Disposition</th>\n                                <th width=\"50\">Hold by</th>\n                                <th width=\"50\">Access by</th>\n                                <th width=\"50\">QA result</th>\n                                <th width=\"50\">Status Hold</th>\n                                <th width=\"50\">Status Shipped</th>\n                                <th width=\"50\">Hold_Period</th>\n                                <th width=\"50\">SpecialControl5</th>\n                                <th width=\"50\">Release Date</th>\n                                <th width=\"50\">Reason to Release</th>\n                  \n     \n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport()}</tbody>\n                            <tbody>{this.renderReport2()}</tbody>\n                            <tbody>{this.renderReport3()}</tbody>\n                            <tbody>{this.renderAll()}</tbody>\n                            <tbody>{this.renderforpc()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Product_hold_control;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport { AddBoxOutlined, CheckBox } from \"@material-ui/icons\";\nimport { red } from \"@material-ui/core/colors\";\n\nclass QA_lots_status extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      QANumber1: '',\n      QANumber2: '* * * *',\n      QANumber3: '* * * *',\n      QANumber4: '* * * *',\n      QANumber5: '* * * *',\n      QANumber6: '* * * *',\n      QANumber7: '* * * *',\n      QANumber8: '* * * *',\n      QANumber9: '* * * *',\n      QANumber10: '* * * *',\n      stc: \" \",\n      newDate: [],\n      report1: [],\n      report2: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listresult: [],\n      listInsType: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n  componentDidMount = async () => {\n   \n\n  };\n\n  doGetDataReport2 = async () => {\n    const result = await httpClient.get(\n      server.MOVEMENTQA_URL +\n      \"/\" + (this.state.QANumber1 !== null ? this.state.QANumber1 : \"\") +\n      \"/\" + (this.state.QANumber2 !== null ? this.state.QANumber2 : \"\") +\n      \"/\" + (this.state.QANumber3 !== null ? this.state.QANumber3 : \"\") +\n      \"/\" + (this.state.QANumber4 !== null ? this.state.QANumber4 : \"\") +\n      \"/\" + (this.state.QANumber5 !== null ? this.state.QANumber5 : \"\") +\n      \"/\" + (this.state.QANumber6 !== null ? this.state.QANumber6 : \"\") +\n      \"/\" + (this.state.QANumber7 !== null ? this.state.QANumber7 : \"\") +\n      \"/\" + (this.state.QANumber8 !== null ? this.state.QANumber8 : \"\") +\n      \"/\" + (this.state.QANumber9 !== null ? this.state.QANumber9 : \"\") +\n      \"/\" + (this.state.QANumber10 !== null ? this.state.QANumber10 : \"\")\n      \n\n\n    );\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n  getresult = async () => {\n    const array = await httpClient.get(server.RESULT_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.InspectionResult,\n    }));\n    this.setState({ listresult: options });\n  };\n\n  renderReport1 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report1.map((item) => (\n          <tr>\n            <td>{item[\"QA_Number\"]}</td>\n\n          </tr>\n        ));\n      }\n    }\n  };\n  renderReport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"Center\" >\n            <td>{item[\"QA_Number\"]}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Item_Number\"]}</td>\n            <td>{item[\"Model_Name\"]}</td>\n            <td>{item[\"MONumber\"]}</td>\n            <td>{item[\"QA_QTY\"]}</td>\n            <td>{item[\"DateCode\"]}</td>\n            <td>{item[\"Inspection_Round\"]}</td>\n            <td>{item[\"Inspection_Type\"]}</td>\n            <td >{item[\"Inspection_Result\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    console.log(this.state.QANumber1);\n    console.log(this.state.QANumber2);\n    console.log(this.state.QANumber3);\n    console.log(this.state.QANumber4);\n    console.log(this.state.QANumber5);\n    console.log(this.state.QANumber6);\n    console.log(this.state.QANumber7);\n    console.log(this.state.QANumber8);\n    console.log(this.state.QANumber9);\n    console.log(this.state.report2);\n    console.log(this.state.stc);\n    return (\n\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-9\">\n                  <h1>QA lots status</h1>\n                </div>\n                <div className=\"col-sm-3\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">QA lots status</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card card-primary card-outline\">\n              <div className=\"card-header\">\n                <h3 className=\"card-title\">\n                  <label>Please scan QA number from QA movement Tag</label>\n                </h3>\n              </div>\n\n\n              <div className=\"card-body\">\n                <div className=\"row\">\n\n                  {/* //Select Critiria \"Qanumber1\" */}                  \n                  <div className=\"col-md-2\" >\n                  <label style={{ marginTop: 5 }} >(1.)   </label>\n                    <div className=\"form-group\">\n                      <input\n                        value={this.state.QANumber1}\n                        onChange={async (e) => {\n                          await this.setState({\n                            QANumber1: e.target.value,\n                          });\n                        }}\n\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Scan QANumber\"\n                      />\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                    <label style={{ color: \"blue\" }}><tbody>{this.state.QANumber1.substring(18, 29)}  {this.state.QANumber1.substring(8, 12)}</tbody></label>\n                  </div>\n\n                  {/* //Select Critiria \"Qanumber2\" */}                  \n                  <div className=\"col-md-2\" >\n                  <label style={{ marginTop: 5 }} >(2.)   </label>\n                    <div className=\"form-group\">\n                      <input\n                        value={this.state.QANumber2}\n                        onChange={async (e) => {\n                          await this.setState({\n                            QANumber2: e.target.value,\n                          });\n                        }}\n\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Scan QANumber\"\n                      />\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                    <label style={{ color: \"blue\" }}><tbody>{this.state.QANumber2.substring(18, 29)}  {this.state.QANumber2.substring(8, 12)}</tbody></label>\n                  </div>\n\n                  {/* //Select Critiria \"Qanumber3\" */}                  \n                  <div className=\"col-md-2\" >\n                  <label style={{ marginTop: 5 }} >(3.)   </label>\n                    <div className=\"form-group\">\n                      <input\n                        value={this.state.QANumber3}\n                        onChange={async (e) => {\n                          await this.setState({\n                            QANumber3: e.target.value,\n                          });\n                        }}\n\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Scan QANumber\"\n                      />\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                    <label style={{ color: \"blue\" }} ><tbody>{this.state.QANumber3.substring(18, 29)}  {this.state.QANumber3.substring(8, 12)}</tbody></label>\n                  </div>\n\n                  {/* //Select Critiria \"Qanumber4\" */}                  \n                  <div className=\"col-md-2\" >\n                  <label style={{ marginTop: 5 }} >(4.)   </label>\n                    <div className=\"form-group\">\n                      <input\n                        value={this.state.QANumber4}\n                        onChange={async (e) => {\n                          await this.setState({\n                            QANumber4: e.target.value,\n                          });\n                        }}\n\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Scan QANumber\"\n                      />\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                    <label style={{ color: \"blue\" }}><tbody>{this.state.QANumber4.substring(18, 29)}  {this.state.QANumber4.substring(8, 12)}</tbody></label>\n                  </div>\n\n                  {/* //Select Critiria \"Qanumber4\" */}                  \n                  <div className=\"col-md-2\" >\n                  <label style={{ marginTop: 5 }} >(5.)   </label>\n                    <div className=\"form-group\">\n                      <input\n                        value={this.state.QANumber5}\n                        onChange={async (e) => {\n                          await this.setState({\n                            QANumber5: e.target.value,\n                          });\n                        }}\n\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Scan QANumber\"\n                      />\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                    <label style={{ color: \"blue\" }} ><tbody>{this.state.QANumber5.substring(18, 29)}  {this.state.QANumber5.substring(8, 12)}</tbody></label>\n                  </div>\n\n                  <div className=\"col-md-2\" ></div>\n\n                  {/* //Select Critiria \"Qanumber6\" */}                  \n                  <div className=\"col-md-2\" >\n                  <label style={{ marginTop: 5 }} >(6.)   </label>\n                    <div className=\"form-group\">\n                      <input\n                        value={this.state.QANumber6}\n                        onChange={async (e) => {\n                          await this.setState({\n                            QANumber6: e.target.value,\n                          });\n                        }}\n\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Scan QANumber\"\n                      />\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                    <label style={{ color: \"blue\" }} ><tbody>{this.state.QANumber6.substring(18, 29)}  {this.state.QANumber6.substring(8, 12)}</tbody></label>\n                  </div>\n\n                  {/* //Select Critiria \"Qanumber7\" */}                  \n                  <div className=\"col-md-2\" >\n                  <label style={{ marginTop: 5 }} >(7.)   </label>\n                    <div className=\"form-group\">\n                      <input\n                        value={this.state.QANumber7}\n                        onChange={async (e) => {\n                          await this.setState({\n                            QANumber7: e.target.value,\n                          });\n                        }}\n\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Scan QANumber\"\n                      />\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                    <label style={{ color: \"blue\" }} ><tbody>{this.state.QANumber7.substring(18, 29)}  {this.state.QANumber7.substring(8, 12)}</tbody></label>\n                  </div>\n\n                  {/* //Select Critiria \"Qanumber4\" */}                  \n                  <div className=\"col-md-2\" >\n                  <label style={{ marginTop: 5 }} >(8.)   </label>\n                    <div className=\"form-group\">\n                      <input\n                        value={this.state.QANumber8}\n                        onChange={async (e) => {\n                          await this.setState({\n                            QANumber8: e.target.value,\n                          });\n                        }}\n\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Scan QANumber\"\n                      />\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                    <label style={{ color: \"blue\" }}><tbody>{this.state.QANumber8.substring(18, 29)}  {this.state.QANumber8.substring(8, 12)}</tbody></label>\n                  </div>\n\n                  {/* //Select Critiria \"Qanumber9\" */}                  \n                  <div className=\"col-md-2\" >\n                  <label style={{ marginTop: 5 }} >(9.)   </label>\n                    <div className=\"form-group\">\n                      <input\n                        value={this.state.QANumber9}\n                        onChange={async (e) => {\n                          await this.setState({\n                            QANumber9: e.target.value,\n                          });\n                        }}\n\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Scan QANumber\"\n                      />\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                    <label style={{ color: \"blue\" }}><tbody>{this.state.QANumber9.substring(18, 29)}  {this.state.QANumber9.substring(8, 12)}</tbody></label>\n                  </div>\n\n                  {/* //Select Critiria \"Qanumber10\" */}                  \n                  <div className=\"col-md-2\" >\n                  <label style={{ marginTop: 5 }} >(10.)   </label>\n                    <div className=\"form-group\">\n                      <input\n                        value={this.state.QANumber10}\n                        onChange={async (e) => {\n                          await this.setState({\n                            QANumber10: e.target.value,\n                          });\n                        }}\n\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Scan QANumber\"\n                      />\n                    </div>\n                    <div className=\"col-md-2\"></div>\n                    <label style={{ color: \"blue\" }}><tbody>{this.state.QANumber10.substring(18, 29)}\n                      {this.state.QANumber10.substring(8, 12)}</tbody></label>\n                  </div>\n\n                  <div className=\"col-md-2\" ></div>\n\n                  {/* Submit button */}\n                  <div className=\"col-md-1\">\n                    <button\n                      disabled={this.state.isDisable}\n                      // type=\"button\"\n                      // className=\"btn btn-info btn-flat\"\n                      onClick={(e) => {\n                        this.setState({ isDisable: true });\n                        // this.doGetDataReport();\n                        Swal.fire({\n                          icon: \"info\",\n                          title: \"Loading Data\",\n                          timer: 60000,\n                          allowOutsideClick: false,\n                          didOpen: async () => {\n                            Swal.showLoading();\n                            await this.doGetDataReport2();\n                            Swal.close();\n                          },\n                        }).then(() => {\n                          if (this.state.report2.length > 0) {\n                            if (this.state.report2[0].QA_Number.length > 0) {\n                              Swal.fire({\n                                icon: \"success\",\n                                title: \"Success\",\n                                text: \"Data has been loaded successfully\",\n                              });\n                            } else if (\n                              this.state.report2[0].QA_Number.length == 0\n                            ) {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          } else {\n                            Swal.fire({\n                              icon: \"error\",\n                              title:\n                                \"Data loading has encountered some error, please try again\",\n                            });\n                          }\n                        });\n                      }}\n                      type=\"submit\"\n                      className=\"btn btn-primary\"\n          \n\n\n                    // style={{ marginTop: 30 }}\n                    >\n                      Submit\n                    </button>\n                    </div>\n\n                  {/* Submit Download */}\n                  <div className=\"col-md-1\">\n                    <CSVLink data={this.state.Raw_Dat}\n                      filename={'QA_report.csv'}>\n\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n           \n\n                      >\n                        Download\n                      </button>\n                    </CSVLink>\n\n                  </div>\n\n                  <div className=\"col-md-2\">\n                    {/* Submit reset */}\n                    <button\n                      disabled={this.state.isDisable}\n                      // type=\"button\"\n                      // className=\"btn btn-info btn-flat\"\n                      onClick={(e) => {\n                        this.setState({ QANumber1: ('') });\n                        this.setState({ QANumber2: ('* * * *') });\n                        this.setState({ QANumber3: ('* * * *') });\n                        this.setState({ QANumber4: ('* * * *') });\n                        this.setState({ QANumber5: ('* * * *') });\n                        this.setState({ QANumber6: ('* * * *') });\n                        this.setState({ QANumber7: ('* * * *') });\n                        this.setState({ QANumber8: ('* * * *') });\n                        this.setState({ QANumber9: ('* * * *') });\n                        this.setState({ QANumber10: ('* * * *') });\n                        this.setState({ report2: ('') });\n                      }}\n                      type=\"submit\"\n                      className=\"btn btn-primary\"\n         \n                    >\n                      Reset\n                    </button>\n                  </div>\n                </div>\n              </div>\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 800 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\"  >\n                            <thead>\n                              <tr Align=\"Center\" >\n\n                                <th width=\"175\">QA_Number</th>\n                                <th width=\"175\">Date</th>\n                                <th width=\"175\">Item_Number</th>\n                                <th width=\"175\">Model_Name</th>\n                                <th width=\"175\">MONumber</th>\n                                <th width=\"175\">QA_QTY</th>\n                                <th width=\"175\">DateCode</th>\n                                <th width=\"175\">Inspection_Round</th>\n                                <th width=\"175\">Inspection_Type</th>\n                                <th width=\"175\">Inspection_Result</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default QA_lots_status;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Operator_tracking_data extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      shift: [],\n      insType: [],\n      report: [],\n      QANumber: \"\",\n      report2: [],\n      options:  {},\n      seriesY: [],\n      Raw_Dat2: [],\n      Raw_Dat: [],\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listshift: [],\n      listInsType: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    // await this.getInsType();\n  };\n\n  // report with select model,date,type\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.REPORTOPT_URL + \"/\" + this.state.startDate\n    );\n\n    let Line_No = [];\n\n    for (let index = 0; index < result.data.resultGraph.length; index++) {\n      const item = result.data.resultGraph[index];\n      await Line_No.push(item.Line_No);\n    }\n\n    let SHIFT_A = result.data.SHIFT_A;\n    let SHIFT_B = result.data.SHIFT_B;\n    let SHIFT_C = result.data.SHIFT_C;\n    let SHIFT_M = result.data.SHIFT_M;\n    let SHIFT_N = result.data.SHIFT_N;\n    let SHIFT_D = result.data.SHIFT_D;\n\n    let rawData = result.data.listData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      Line_No,\n      SHIFT_A,\n      SHIFT_B,\n      SHIFT_C,\n      SHIFT_M,\n      SHIFT_N,\n      SHIFT_D,\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      // let yAxis6 = result.data.LAR;\n      // let yInput = result.data.Input;\n      // let yReject = result.data.Reject;\n      seriesY: [\n\n        {\n          name: \"SHIFT A\",\n          type: \"column\",\n          data: SHIFT_A,\n        },\n\n        {\n          name: \"SHIFT B\",\n          type: \"column\",\n          data: SHIFT_B,\n        },\n        {\n          name: \"SHIFT C\",\n          type: \"column\",\n          data: SHIFT_C,\n        },\n        {\n          name: \"SHIFT D\",\n          type: \"column\",\n          data: SHIFT_D,\n        },\n        {\n          name: \"SHIFT M\",\n          type: \"column\",\n          data: SHIFT_M,\n        },\n        {\n          name: \"SHIFT N\",\n          type: \"column\",\n          data: SHIFT_N,\n        },\n   \n \n     \n      ],\n      options: {\n        chart: {\n          type: \"column\",\n          height: 300,\n          stacked: true,\n          toolbar: {\n            show: true,\n          },\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        // stroke: {\n        //   width: [1, 5],\n        // },\n        title: {\n          text: \"\",\n          align: \"left\",\n          offsetX: 110,\n        },\n        // dataLabels: {\n        //   enabled: true,\n        //   enabledOnSeries: [0, 1],\n        // },\n        xaxis: {\n          categories: Line_No,\n        },\n        yaxis: [\n          {\n            min: 0.0,\n            max: 100.0,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff1a1a\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff1a1a\",\n              },\n            },\n            title: {\n              text: \"Person\",\n              style: {\n                color: \"#ff1a1a\",\n              },\n            },\n            tooltip: {\n              enabled: true,\n            },\n          },\n        ],\n        colors: [\"#0079FF\", \"#00DFA2\", \"#ff1a1a\", \"#FF0060\", \"#E57C23\", \"#9376E0\"],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: \"topLeft\", // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60,\n          },\n        },\n        legend: {\n          horizontalAlign: \"left\",\n          offsetX: 40,\n        },\n        legend: {\n          position: \"right\",\n          offsetY: 40,\n        },\n      },\n    });\n  };\n  getModel = async () => {\n    const array = await httpClient.get(server.SHIFTOPT_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.shift,\n    }));\n    this.setState({ listshift: options });\n  };\n\n  renderReport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Line_No\"]}</td>\n            <td>{item[\"MODEL\"]}</td>\n            <td>{item[\"Item_Name\"]}</td>\n            <td>{item[\"ItemNo\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"SHIFT_A\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"RIGHT\">\n              {Number(item[\"SHIFT_B\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"RIGHT\">\n              {Number(item[\"SHIFT_C\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"RIGHT\">\n              {Number(item[\"SHIFT_D\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"RIGHT\">\n              {Number(item[\"SHIFT_M\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"RIGHT\">\n              {Number(item[\"SHIFT_N\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n    \n            <td align=\"RIGHT\">\n              {Number(item[\"Total\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n \n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n \n    return (\n      \n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Daily operator tracking record</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Daily operator tracking record</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    {/* <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <div></div>\n                        <label>Model group</label>\n                        <Select\n                          options={this.state.listshift}\n                          onChange={async (e) => {\n                            await this.setState({ shift: e.label });\n                            // await this.getInsType();\n                            // await this.setState({\n                            //   insType: [{ label: \"Select Type\" }],\n                            // });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                         \n                        />\n                      </div>\n                    </div> */}\n\n                    {/* //Select Critiria \"Type\" */}\n                    {/* <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Type</label>\n                        <Select\n                          options={this.state.listInsType}\n                          value={this.state.insType[0]}\n                          onChange={async (e) => {\n                            await this.setState({ insType: [] });\n                            this.state.insType.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Type\"\n                        />\n                      </div>\n                    </div> */}\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>\n                          By Daily Select From &nbsp;\n                          {/* <a\n                            class=\"fas fa-question-circle\"\n                            style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                            onClick={() => {\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Day-to-Day Data\",\n                                text:\n                                  \"Day-to-Day data over the course of the selected date\",\n                              });\n                            }}\n                          ></a> */}\n                        </label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Finish Date */}\n                    {/* <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div> */}\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Date.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Date.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n\n                    <div className=\"col-md-3\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"Daily operator record.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"card card-primary card-outline\">\n                        {/* Chart Title */}\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                          \n                           \n                          </h3>\n                        </div>\n\n                        {/* Insert  */}\n                        <div className=\"row\" style={{ width: \"100%\" }}>\n                          <div style={{ width: \"1%\" }}></div>\n                          <div\n                            className=\"card card-warning\"\n                            style={{ width: \"99%\" }}\n                          >\n                            <div className=\"card-body\">\n                              <div className=\"row\">\n                                <div style={{ width: \"100%\" }}>\n                                  <ReactApexChart\n                                    options={this.state.options}\n                                    series={this.state.seriesY}\n                                    type=\"bar\"\n                                    height={400}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{\n                            height: 500,\n                            zIndex: \"3\",\n                            position: \"relative\",\n                            zIndex: \"0\",\n                          }}\n                        >\n                          <table className=\" table  text-nowrap table-hover table-head-fixed\">\n                            <thead>\n                              <tr Align=\"Center\">\n                                <th width=\"175\">Date</th>\n                                <th width=\"175\">Line</th>\n                                <th width=\"175\">MODEL</th>\n                                <th width=\"175\">Item Name</th>\n                                <th width=\"175\">Item No</th>\n                                <th width=\"175\">SHIFT A</th>\n                                <th width=\"175\">SHIFT B</th>\n                                <th width=\"175\">SHIFT C</th>\n                                <th width=\"175\">SHIFT D</th>\n                                <th width=\"175\">SHIFT M</th>\n                                <th width=\"175\">SHIFT N</th>\n                          \n                                <th width=\"175\">TOTAL</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n    \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Operator_tracking_data;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass Trace_back_function_test  extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      Model: [],\n      Line: [],\n      insType: [],\n      report1: [],\n      report2: [],\n      report3: [],\n      xAxis: [],\n      yAxis: [],\n      seriesY: [],\n      seriesY2: [],\n      options: {},\n      options2: {},\n      chart: [],\n      barcodemotor: [],\n      lotqa: [],\n      Raw_Dat1: [],\n      Raw_Dat2: [],\n      Raw_Dat3: [],\n\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n  doGetQPMbybarcodemotor = async () => {\n    const result = await httpClient.get(\n      server.QPMBYBARCODEMOTOR_URL + \"/\" + this.state.barcodemotor\n    );\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n  \n    this.setState({\n      report1: result.data.result,\n      isDisable: false,\n    });\n  };\n  // doGetQPMbylotqa = async () => {\n  //   const result = await httpClient.get(\n  //     server.QPMBYLOTQA_URL + \"/\" + this.state.lotqa\n  //   );\n  //   let rawData = result.data.listRawData1;\n  //   console.log(rawData);\n  //   for (let i = 1; i < rawData.length; i++) {\n  //     rawData[0].push(...rawData[i]);\n  //   }\n  //   this.setState({ Raw_Dat2: rawData[0] });\n  //   console.log(this.state.Raw_Dat2);\n  \n  //   this.setState({\n  //     report2: result.data.result,\n  //     isDisable: false,\n  //   });\n  // };\n  renderreport1 = () => {\n    if (this.state.report1 != null) {\n      if (this.state.report1.length > 0) {\n        return this.state.report1.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"Barcode\"]}</td>\n            <td align=\"Left\">{item[\"Barcode_base\"]}</td>\n            <td align=\"Left\">{item[\"Ramp_tray\"]}</td>\n            <td align=\"Left\">{item[\"divertor\"]}</td>\n            <td align=\"Left\">{item[\"Lot_QA\"]}</td>\n            <td align=\"Left\">{item[\"keavg\"]}</td>\n            <td align=\"Left\">{item[\"keripple\"]}</td>\n            <td align=\"Left\">{item[\"TIRprobeA\"]}</td>\n            <td align=\"Left\">{item[\"NRROprobeA\"]}</td>\n            <td align=\"Left\">{item[\"TIRprobeB\"]}</td>\n            <td align=\"Left\">{item[\"NRROprobeB\"]}</td>\n            <td align=\"Left\">{item[\"RVA\"]}</td>\n            <td align=\"Left\">{item[\"NRROaxFFT1\"]}</td>\n            <td align=\"Left\">{item[\"NRROradFFT1\"]}</td>\n            <td align=\"Left\">{item[\"Runcurrent\"]}</td>\n            <td align=\"Left\">{item[\"brgdrag\"]}</td>\n            <td align=\"Left\">{item[\"RUV\"]}</td>\n            <td align=\"Left\">{item[\"RUW\"]}</td>\n            <td align=\"Left\">{item[\"RVW\"]}</td>\n            <td align=\"Left\">{item[\"SetDim\"]}</td>\n            <td align=\"Left\">{item[\"Pivotheight\"]}</td>\n            <td align=\"Left\">{item[\"Parallelism\"]}</td>\n            <td align=\"Left\">{item[\"FlyHeight\"]}</td>\n            <td align=\"Left\">{item[\"Ramp_Pivot\"]}</td>\n            <td align=\"Left\">{item[\"Projection\"]}</td>\n            <td align=\"Left\">{item[\"Heliumleak\"]}</td>\n            <td align=\"Left\">{item[\"Axial_Play\"]}</td>\n            <td align=\"Left\">{item[\"Oiltop\"]}</td>\n            <td align=\"Left\">{item[\"Oilbottom\"]}</td>\n            <td align=\"Left\">{item[\"ImbalStatic\"]}</td>\n            <td align=\"Left\">{item[\"R_max_min\"]}</td>\n            <td align=\"Left\">{item[\"Bemfbalance\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  // renderreport2 = () => {\n  //   if (this.state.report2 != null) {\n  //     if (this.state.report2.length > 0) {\n  //       return this.state.report2.map((item) => (\n  //         <tr Align=\"Center\">\n  //                <td align=\"Left\">{item[\"Barcode\"]}</td>\n  //           <td align=\"Left\">{item[\"Barcode_base\"]}</td>\n  //           <td align=\"Left\">{item[\"Ramp_tray\"]}</td>\n  //           <td align=\"Left\">{item[\"divertor\"]}</td>\n  //           <td align=\"Left\">{item[\"Lot_QA\"]}</td>\n  //           <td align=\"Left\">{item[\"keavg\"]}</td>\n  //           <td align=\"Left\">{item[\"keripple\"]}</td>\n  //           <td align=\"Left\">{item[\"TIRprobeA\"]}</td>\n  //           <td align=\"Left\">{item[\"NRROprobeA\"]}</td>\n  //           <td align=\"Left\">{item[\"TIRprobeB\"]}</td>\n  //           <td align=\"Left\">{item[\"NRROprobeB\"]}</td>\n  //           <td align=\"Left\">{item[\"RVA\"]}</td>\n  //           <td align=\"Left\">{item[\"NRROaxFFT1\"]}</td>\n  //           <td align=\"Left\">{item[\"NRROradFFT1\"]}</td>\n  //           <td align=\"Left\">{item[\"Runcurrent\"]}</td>\n  //           <td align=\"Left\">{item[\"brgdrag\"]}</td>\n  //           <td align=\"Left\">{item[\"RUV\"]}</td>\n  //           <td align=\"Left\">{item[\"RUW\"]}</td>\n  //           <td align=\"Left\">{item[\"RVW\"]}</td>\n  //           <td align=\"Left\">{item[\"SetDim\"]}</td>\n  //           <td align=\"Left\">{item[\"Pivotheight\"]}</td>\n  //           <td align=\"Left\">{item[\"Parallelism\"]}</td>\n  //           <td align=\"Left\">{item[\"FlyHeight\"]}</td>\n  //           <td align=\"Left\">{item[\"Ramp_Pivot\"]}</td>\n  //           <td align=\"Left\">{item[\"Projection\"]}</td>\n  //           <td align=\"Left\">{item[\"Heliumleak\"]}</td>\n  //           <td align=\"Left\">{item[\"Axial_Play\"]}</td>\n  //           <td align=\"Left\">{item[\"Oiltop\"]}</td>\n  //           <td align=\"Left\">{item[\"Oilbottom\"]}</td>\n  //           <td align=\"Left\">{item[\"ImbalStatic\"]}</td>\n  //           <td align=\"Left\">{item[\"R_max_min\"]}</td>\n  //           <td align=\"Left\">{item[\"Bemfbalance\"]}</td>\n  //         </tr>\n  //       ));\n  //     }\n  //   }\n  \n  // };\n  render() \n  {\n    console.log(this.state.report1);\n    console.log(this.state.report2);\n  return (\n\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Trace back function test by MBA S/N</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                    Trace back function test by MBA S/N\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n  \n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Input Barcode motor</label>\n                  </h3>\n                </div>\n  \n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-4\">\n                     \n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.barcodemotor}\n                          onChange={async (e) => {\n                            await this.setState({\n                              barcodemotor: e.target.value,\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"input Barcode motor\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ lotqa: ('') });\n                          this.setState({ report2: ('') });\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 120000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this. doGetQPMbybarcodemotor();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report1.length > 0) {\n                              if (\n                                this.state.report1[0].Barcode.length > 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report1[0].Barcode.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                         style={{ marginTop: 1 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <CSVLink\n                        data={this.state.Raw_Dat1}\n                        filename={\"QPM report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                           style={{ marginTop: 1 }}\n                        >\n                          Download by barcode motor\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div> \n                </div>\n              </div>\n  \n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr>\n                                <th width=\"150\">Barcode</th>\n                                <th width=\"175\">Barcodebase</th>\n                                <th width=\"175\">Ramptray</th>\n                                <th width=\"175\">Divertor</th>\n                                <th width=\"175\">LotQA</th>\n                                <th width=\"175\">ke avg</th>\n                                <th width=\"175\">ke ripple</th>\n                                <th width=\"175\">TIRprobeA</th>\n                                <th width=\"175\">NRROprobeA</th>\n                                <th width=\"175\">TIRprobeB</th>\n                                <th width=\"175\">NRROprobeB</th>                                \n                                <th width=\"175\">RVA</th>\n                                <th width=\"175\">NRROaxFFT1</th>\n                                <th width=\"175\">NRROradFFT1</th>\n                                <th width=\"175\">Runcurrent</th>\n                                <th width=\"175\">Brgdrag</th>\n                                <th width=\"175\">RUV</th>\n                                <th width=\"175\">RUW</th>\n                                <th width=\"175\">RVW</th>\n                                <th width=\"175\">SetDim</th>\n                                <th width=\"175\">Pivot</th>                                 \n                                <th width=\"175\">Parallelism</th>\n                                <th width=\"175\">FlyHeight</th> \n                                <th width=\"175\">Ramp-Pivot</th>                               \n                                <th width=\"175\">Projection</th>\n                                <th width=\"175\">Helium leak rate</th>\n                                <th width=\"175\">AxialPlay</th>\n                                <th width=\"175\">Oil Top</th>\n                                <th width=\"175\">Oil Bottom</th>\n                                <th width=\"175\">Imbalance</th>\n                                <th width=\"175\">R max-min</th>\n                                <th width=\"175\">Bemfbalance</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>                          \n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\n\n\n\n\nexport default Trace_back_function_test ;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass Trace_back_shipment extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      Model: [],\n      Line: [],\n      insType: [],\n      report1: [],\n      report2: [],\n      report3: [],\n      xAxis: [],\n      yAxis: [],\n      seriesY: [],\n      seriesY2: [],\n      options: {},\n      options2: {},\n      chart: [],\n      barcodemotor: [],\n      lotqa: [],\n      Raw_Dat1: [],\n      Raw_Dat2: [],\n      Raw_Dat3: [],\n\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n  doGetdodatabylotqa = async () => {\n    const result = await httpClient.get(\n      server.DODATABYLOTQA_URL + \"/\" + this.state.dobylotqa\n    );\n    let rawData = result.data.listRawData1;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n  \n    this.setState({\n      report1: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  doGetdodatabyinvoid = async () => {\n    const result = await httpClient.get(\n      server.DODATABYINVOID_URL + \"/\" + this.state.dobyinvoid\n    );\n    let rawData = result.data.listRawData2;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat2: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n  \n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  renderreport1 = () => {\n    if (this.state.report1 != null) {\n      if (this.state.report1.length > 0) {\n        return this.state.report1.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"LotQA\"]}</td>\n            <td align=\"Left\">{item[\"DO_Num\"]}</td>\n            <td align=\"Left\">{item[\"Part_Num\"]}</td>\n            <td align=\"Left\">{item[\"Part_Rev\"]}</td>\n            <td align=\"Left\">{item[\"Lot_num\"]}</td>\n            <td align=\"Left\">{item[\"Lot_Qty\"]}</td>\n            <td align=\"Left\">{item[\"DO_Qty\"]}</td>\n            <td align=\"Left\">{item[\"Ship_date\"]}</td>           \n          </tr>\n        ));\n      }\n    }\n  }; \n  renderreport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"LotQA\"]}</td>\n            <td align=\"Left\">{item[\"DO_Num\"]}</td>\n            <td align=\"Left\">{item[\"Part_Num\"]}</td>\n            <td align=\"Left\">{item[\"Part_Rev\"]}</td>\n            <td align=\"Left\">{item[\"Lot_num\"]}</td>\n            <td align=\"Left\">{item[\"Lot_Qty\"]}</td>\n            <td align=\"Left\">{item[\"DO_Qty\"]}</td>\n            <td align=\"Left\">{item[\"Ship_date\"]}</td>           \n          </tr>\n        ));\n      }\n    }\n  }; \n  render() {\n    return (\n\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Trace back shipment</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                    Trace back shipment\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n  \n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Input Data</label>\n                  </h3>\n                </div>\n  \n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-4\">\n                    <label>Search by Lot QA</label>\n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.dobylotqa}\n                          onChange={async (e) => {\n                            await this.setState({\n                              dobylotqa: e.target.value,\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Input lot QA\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {   \n                          this.setState({ dobyinvoid : ('') });                     \n                          this.setState({ report2: ('') });\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 120000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this. doGetdodatabylotqa();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report1.length > 0) {\n                              if (\n                                this.state.report1[0].LotQA.length > 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report1[0].LotQA.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                         style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <CSVLink\n                        data={this.state.Raw_Dat1}\n                        filename={\"DO Data report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                           style={{ marginTop: 30 }}\n                        >\n                          Download by LotQA\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div> \n                  <div className=\"row\"  style={{ marginTop: 30 }}>\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-4\">\n                    <label>Search by Invoice id</label>\n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.dobyinvoid}\n                          onChange={async (e) => {\n                            await this.setState({\n                              dobyinvoid: e.target.value,\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Input Invoice id \"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {           \n                          this.setState({ dobylotqa : ('') });             \n                          this.setState({ report1: ('') });\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 120000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this. doGetdodatabyinvoid();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report2.length > 0) {\n                              if (\n                                this.state.report2[0].DO_Num.length > 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report1[0].DO_Num.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                         style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <CSVLink\n                        data={this.state.Raw_Dat2}\n                        filename={\"DO Data report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                           style={{ marginTop: 30 }}\n                        >\n                          Download by Invoice\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div> \n                </div>\n              </div>\n  \n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 500 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr>\n                                <th width=\"150\">LotQA</th>\n                                <th width=\"175\">DO Num</th>\n                                <th width=\"175\">Part Num</th>\n                                <th width=\"175\">Part Rev</th>\n                                <th width=\"175\">Lot num(Datecode)</th>\n                                <th width=\"175\">Lot Qty</th>\n                                <th width=\"175\">DO Qty</th>\n                                <th width=\"175\">Ship date</th>                            \n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>   \n                            <tbody>{this.renderreport2()}</tbody>                         \n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Trace_back_shipment;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nclass ROTOR extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //data average per hour\n      title: [],\n      data: [],\n      seriesMC: [],\n\n      xAxis: [],\n      yAxis: [],\n      yAxisUSL: [],\n      yAxisLSL: [],\n      yAxisUCL: [],\n      yAxisLCL: [],\n      yAxisCL: [],\n\n      //raw data per hour\n      Raw_Dat: [],\n      Raw_Dat1:[],\n      //standard deviation per hour\n      yAxisUCLSD: [],\n      yAxisLCLSD: [],\n      yAxisSD: [],\n\n      // Table per hour\n      datatable: [],\n      tablerow: [],\n\n      //data average per day\n      titleday: [],\n      dataday: [],\n      seriesMCday: [],\n      seriesMCSTDDay:[],\n      seriesMCSTD:[],\n      xAxisday: [],\n      yAxisday: [],\n      yAxisUSLday: [],\n      yAxisLSLday: [],\n      yAxisUCLday: [],\n      yAxisLCLday: [],\n      yAxisCLday: [],\n\n      //standard deviation per hour\n      yAxisdaySD: [],\n      yAxisUCLdaySD: [],\n      yAxisLCLdaySD: [],\n\n      // Table per hour\n      datatableday: [],\n      tablerowday: [],\n\n      // criteria\n      model: [],\n      productionline: [],\n      parameter: [],\n      selectMCname: [],\n\n      selectDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      startDate: moment().add(\"days\", -7).format(\"yyyy-MM-DD\"),\n      finishDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listParameter: [],\n      listProductionline: [],\n      listMachine: [],\n\n      optionSelected: null,\n      isDisable: false,\n      isDisableDays: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getParameter();\n    await this.getProductionline();\n    await this.getMachine();\n  };\n\n  doGetData = async () => {\n    let result = await httpClient.get(\n      server.MATCHING_URL +\n        \"/\" +\n        this.state.selectDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.selectMCname\n    );\n    \n\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultAVG.length; index++) {\n      const item = result.data.resultAVG[index];\n      await xAxis.push(item.Time);\n\n    }\n    let yAxis = result.data.seriesY;\n    let yAxisUSL = result.data.seriesUSL;\n    let yAxisLSL = result.data.seriesLSL;\n    let yAxisCL = result.data.seriesCL;\n    let yAxisUCL = result.data.seriesUCL;\n    let yAxisLCL = result.data.seriesLCL;\n\n    var seriesMC = [];\n    seriesMC.push(\n      Object.assign({}, yAxisLSL),\n      Object.assign({}, yAxisUSL),\n      Object.assign({}, yAxisUCL),\n      Object.assign({}, yAxisLCL),\n      Object.assign({}, yAxisCL),\n      Object.assign({}, yAxis)\n    );\n\n    for (let i = 0; i < result.data.seriesMC.length; i++) {\n      seriesMC.push(Object.assign({}, result.data.seriesMC[i]));\n    }\n\n    //Raw_Data\n    let rawData = result.data.listRawData\n    this.setState({Raw_Dat: rawData[0]});\n    console.log(this.state.Raw_Dat)\n\n    let yAxisSD = result.data.seriesSTD;\n    let yAxisLCLSD = result.data.seriesLCL_STD;\n    let yAxisUCLSD = result.data.seriesUCL_STD;\n    let yAxisCLSD = result.data.seriesCL_STD;\n\n    var seriesMCSTD = [];\n    seriesMCSTD.push(\n      Object.assign({}, yAxisUCLSD),\n      Object.assign({}, yAxisLCLSD),\n      Object.assign({}, yAxisCLSD),\n      Object.assign({}, yAxisSD)\n    );\n\n    for (let i = 0; i < result.data.seriesMCSTD.length; i++) {\n      seriesMCSTD.push(Object.assign({}, result.data.seriesMCSTD[i]));\n    }\n    console.log(seriesMC);\n    \n    var datatable = [];\n    //datatable.push(result.data.resultAVG); // AVG ใน table เอาออกก่อน\n\n    for (let i = 0; i < result.data.listResult.length; i++) {\n      datatable.push(result.data.listResult[i]);\n    }\n\n    this.setState({\n      title: result.data.seriesY.title,\n      data: result.data.resultAVG,\n      seriesMC,\n      xAxis,\n      yAxisSD,\n      yAxisUCLSD,\n      yAxisLCLSD,\n      datatable,\n      seriesMCSTD,\n      isDisable: false,\n    });\n  };\n  // doGetDataperday\n  doGetDataDay = async () => {\n    let resultday = await httpClient.get(\n      server.MATCHINGDAY_URL +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        //+ this.state.part + \"/\"\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.selectMCname\n    );\n    let xAxisday = [];\n    for (let index = 0; index < resultday.data.resultAVGday.length; index++) {\n      const item = resultday.data.resultAVGday[index];\n      await xAxisday.push(item.Date);\n    }\n        //Raw_Data\n        let rawData1 = resultday.data.listRawData;\n        this.setState({ Raw_Dat1: rawData1[0] });\n        console.log(this.state.Raw_Dat1);\n\n    let yAxisday = resultday.data.seriesYday;\n    let yAxisUSLday = resultday.data.seriesUSL;\n    let yAxisLSLday = resultday.data.seriesLSL;\n    let yAxisUCLday = resultday.data.seriesUCL;\n    let yAxisLCLday = resultday.data.seriesLCL;\n    let yAxisCLday = resultday.data.seriesCL;\n\n    var seriesMCday = [];\n    seriesMCday.push(\n      Object.assign({}, yAxisLSLday),\n      Object.assign({}, yAxisUSLday),\n      Object.assign({}, yAxisUCLday),\n      Object.assign({}, yAxisLCLday),\n      Object.assign({}, yAxisCLday),\n      Object.assign({}, yAxisday)\n    );\n\n    for (let i = 0; i < resultday.data.seriesMCday.length; i++) {\n      seriesMCday.push(Object.assign({}, resultday.data.seriesMCday[i]));\n    }\n   //STD\n   let yAxisdaySD = resultday.data.seriesSTDDay;\n   let yAxisUCLdaySD = resultday.data.seriesUCL_STD;\n   let yAxisLCLdaySD = resultday.data.seriesLCL_STD;\n   let yAxisCLdaySD = resultday.data.seriesCL_STD;\n\n   var seriesMCSTDDay = [];\n   seriesMCSTDDay.push(\n     Object.assign({}, yAxisUCLdaySD),\n     Object.assign({}, yAxisLCLdaySD),\n     Object.assign({}, yAxisCLdaySD),\n     Object.assign({}, yAxisdaySD)\n   );\n\n   for (let i = 0; i < resultday.data.seriesMCSTDDay.length; i++) {\n    seriesMCSTDDay.push(Object.assign({}, resultday.data.seriesMCSTDDay[i]));\n  }\n\nconsole.log(seriesMCSTDDay);\n\n    var datatableday = [];\n    //datatableday.push(resultday.data.resultAVGday);\n\n    for (let i = 0; i < resultday.data.listResultday.length; i++) {\n      datatableday.push(resultday.data.listResultday[i]);\n    }\n\n    this.setState({\n      titleday: resultday.data.seriesYday.titleday,\n      dataday: resultday.data.resultAVGday,\n      seriesMCday,\n      xAxisday,\n      yAxisdaySD,\n      yAxisUCLdaySD,\n      yAxisLCLdaySD,\n      seriesMCSTDDay,\n      datatableday,\n      isDisableDays: false,\n    });\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MATCHMODEL_URL);\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getParameter = async () => {\n    const array = await httpClient.get(server.MATCHPARAM_URL);\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listParameter: options });\n  };\n\n  getProductionline = async () => {\n    const array = await httpClient.get(\n      server.MATCHLINE_URL + \"/\" + this.state.model\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listProductionline: options });\n  };\n\n  getMachine = async () => {\n    const array = await httpClient.get(\n      server.MATCHMACHINE_URL +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        this.state.productionline[0].label\n    );\n\n    const options = array.data.result.map((d) => ({\n      label: d.MCname,\n      value: d.MCname,\n    }));\n    this.setState({ listMachine: options });\n  };\n\n  handleChange = async (event) => {\n    const Newevent = Object.keys(event).map((key) => event[key].label);\n    const json_string = JSON.stringify(Newevent);\n    this.setState({ selectMCname: json_string });\n    this.setState({ optionSelected: event });\n    console.log(Newevent);\n    // console.log(json_string);\n    // console.log(this.state.selectMCname);\n    // console.log(this.state.optionSelected);\n  };\n\n  renderTableRow = () => {\n    var tablerow = [];\n    for (let i = 0; i < this.state.datatable.length; i++) {\n      tablerow.push(\n        this.state.datatable[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerow;\n  };\n\n  renderTableRowday = () => {\n    var tablerowday = [];\n    for (let i = 0; i < this.state.datatableday.length; i++) {\n      tablerowday.push(\n        this.state.datatableday[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerowday;\n  };\n\n  render() {\n    // console.log(this.state.seriesMC);\n    console.log( this.state.yAxisUCLdaySD);\n    console.log( this.state.seriesMCSTDDay);\n    console.log( this.state.xAxisday);\n \n\n\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Rotor assembly SPC chart (He drive)</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Rotor assembly SPC chart (He drive)</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Select Parameter</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ model: e.label });\n                              await this.getProductionline();\n                              await this.setState({\n                                productionline: [\n                                  { label: \"Select Production Line\" },\n                                ],\n                              });\n                              await this.setState({\n                                parameter: [{ label: \"Select Parameter\" }],\n                              });\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listProductionline}\n                            value={this.state.productionline[0]}\n                            onChange={async (e) => {\n                              await this.setState({ productionline: [] });\n                              this.state.productionline.push({\n                                label: e.label,\n                              });\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production line\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Parameter\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Parameter</label>\n                          <Select\n                            options={this.state.listParameter}\n                            value={this.state.parameter[0]}\n                            onChange={async (e) => {\n                              await this.setState({ parameter: [] });\n                              this.state.parameter.push({ label: e.label });\n                              await this.getMachine();\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Machine No.\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Tester No.</label>\n                          <Select\n                            isMulti\n                            options={this.state.listMachine}\n                            onChange={this.handleChange.bind(this)}\n                            displayValue=\"label\"\n                            selectionLimit=\"3\"\n                            allowSelectAll={true}\n                            closeMenuOnSelect={false}\n                            hideSelectedOptions={true}\n                            value={this.state.optionSelected}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Tester No.\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Hourly Select Date &nbsp;\n                            <i\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Hourly Data\",\n                                  text:\n                                    \"Hourly data over the course of the selected day\",\n                                });\n                              }}\n                            ></i>\n                          </label>\n                          <input\n                            value={this.state.selectDate}\n                            onChange={(e) => {\n                              this.setState({ selectDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={(e) => {\n                            this.setState({ isDisable: true });\n                            this.doGetData();\n                            this.setState({\n                              showHourly: true,\n                              showDaily: false,\n                            })\n                  \n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 240000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetData();\n                                // console.log(this.state.datatable[0].length)\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatable.length > 0) {\n                                for (let i = 0; i < this.state.datatable.length; i++) {\n                                  for (let j = 0; j < this.state.datatable[i].length; j++) {\n                                    if (this.state.datatable[i][j].AVG !== null) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text: \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n                                    \n                                    if (i === this.state.datatable.length-1) {\n                                    if (j === this.state.datatable[i].length-1) {\n                                      if (this.state.datatable[i][j].AVG == null) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          });\n                                        }\n                                      else {\n                                        Swal.fire({\n                                              icon: \"error\",\n                                              title:\n                                                \"Data loading has encountered some error, please try again\",\n                                            });\n                                      }\n                                      break;\n                                    }\n                                  }\n                                  \n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                      <div className=\"col-md-8\">\n                        <CSVLink data={this.state.Raw_Dat}>\n                          <button type=\"button\" className=\"btn btn-primary\" style={{ marginTop: 30 }}>\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Daily Select From &nbsp;\n                            <i\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Day-to-Day Data\",\n                                  text:\n                                    \"Day-to-Day data over the course of the selected date\",\n                                });\n                              }}\n                            ></i>\n                          </label>\n                          <input\n                            value={this.state.startDate}\n                            onChange={(e) => {\n                              this.setState({ startDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Finish Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>To</label>\n                          <input\n                            value={this.state.finishDate}\n                            onChange={(e) => {\n                              this.setState({ finishDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Finish Date\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisableDays}\n                          onClick={(e) => {\n                            this.setState({ isDisableDays: true });\n                            this.doGetDataDay();\n                            this.setState({\n                              showHourly: false, // ไม่แสดง Hourly\n                              showDaily: true,   // แสดง Daily\n                            });\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetDataDay();\n                                // console.log(this.state.datatableday[0].length)\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatableday.length > 0) {\n                                for (let i = 0; i < this.state.datatableday.length; i++) {\n                                  for (let j = 0; j < this.state.datatableday[i].length; j++) {\n                                    if (this.state.datatableday[i][j].AVG !== null) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text: \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n                                    \n                                    if (i === this.state.datatableday.length-1) {\n                                    if (j === this.state.datatableday[i].length-1) {\n                                      if (this.state.datatableday[i][j].AVG == null) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          }).then(() => {\n                                            // รีเฟรชหน้าใหม่\n                                            window.location.reload();\n                                          });\n                                        }\n                                      else {\n                                        Swal.fire({\n                                              icon: \"error\",\n                                              title:\n                                                \"Data loading has encountered some error, please try again\",\n                                              }).then(() => {\n                                                // รีเฟรชหน้าใหม่\n                                                window.location.reload();\n                                            });\n                                      }\n                                      break;\n                                    }\n                                  }\n                                  \n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <CSVLink data={this.state.Raw_Dat1}>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 30 }}\n                          >\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                      </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      \n        {/* Real-time data per hour */}\n        \n        {this.state.showHourly  &&(\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          \n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Hourly SPC Chart on {this.state.selectDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n   \n          {/* Chart per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n\n                    {/* Insert Xbar Chart */}\n                     <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMC}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                            \n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTD}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Table per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Time</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRow()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n  )}\n        {/* Real-time data per day */}\n        { this.state.showDaily && (\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Daily SPC Chart from {this.state.startDate} to{\" \"}\n                    {this.state.finishDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Chart per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\" style={{}}>\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 3, 3, 3, 4],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCday}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTDDay}\n               \n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Insert Table per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Time</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRowday()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n  )}\n\n      </div>\n    );\n  }\n}\nexport default ROTOR;\n","import React, { Component } from \"react\";\r\nimport { server } from \"../../constants\";\r\nimport { httpClient } from \"../../utils/HttpClient\";\r\nimport Chart from \"react-apexcharts\";\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nclass MOTORDIM extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //set state\r\n    this.state = {\r\n      //data average per hour\r\n      title: [],\r\n      data: [],\r\n      seriesMC: [],\r\n      seriesMCSTD: [],\r\n\r\n      xAxis: [],\r\n      yAxis: [],\r\n      yAxisUSL: [],\r\n      yAxisLSL: [],\r\n      yAxisUCL: [],\r\n      yAxisLCL: [],\r\n      yAxisCL: [],\r\n\r\n      //raw data per hour\r\n      Raw_Dat: [],\r\n      Raw_Dat1: [],\r\n\r\n\r\n      //standard deviation per hour\r\n      yAxisUCLSD: [],\r\n      yAxisLCLSD: [],\r\n      yAxisCLSD: [],\r\n      yAxisSD: [],\r\n\r\n      // Table per hour\r\n      datatable: [],\r\n      tablerow: [],\r\n\r\n      //data average per day\r\n      titleday: [],\r\n      dataday: [],\r\n      seriesMCday: [],\r\n      seriesMCSTDDay: [],\r\n\r\n      xAxisday: [],\r\n      yAxisday: [],\r\n      yAxisUSLday: [],\r\n      yAxisLSLday: [],\r\n      yAxisUCLday: [],\r\n      yAxisLCLday: [],\r\n      yAxisCLday: [],\r\n\r\n      //standard deviation per hour\r\n      yAxisdaySD: [],\r\n      yAxisUCLdaySD: [],\r\n      yAxisLCLdaySD: [],\r\n      yAxisCLdaySD: [],\r\n\r\n      // Table per hour\r\n      datatableday: [],\r\n      tablerowday: [],\r\n\r\n      // criteria\r\n      model: [],\r\n      productionline: [],\r\n      parameter: [],\r\n      selectMCname: [],\r\n\r\n      selectDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\r\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\r\n      finishDate: moment().format(\"yyyy-MM-DD\"),\r\n\r\n      // criteria options\r\n      listModel: [],\r\n      listParameter: [],\r\n      listProductionline: [],\r\n      listMachine: [],\r\n\r\n      optionSelected: null,\r\n      isDisable: false,\r\n      isDisableDays: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.getModel();\r\n    await this.getParameter();\r\n    await this.getProductionline();\r\n    await this.getMachine();\r\n  };\r\n\r\n  doGetData = async () => {\r\n    let result = await httpClient.get(\r\n      server.MOTORDIM_URL +\r\n        \"/\" +\r\n        this.state.selectDate +\r\n        \"/\" +\r\n        this.state.model +\r\n        \"/\" +\r\n        this.state.parameter[0].label +\r\n        \"/\" +\r\n        this.state.productionline[0].label +\r\n        \"/\" +\r\n        this.state.selectMCname\r\n    );\r\n\r\n    let title = result.data.seriesY.title;\r\n    let xAxis = [];\r\n    //let yAxisSD = [];\r\n    //let yAxisUCLSD = [];\r\n    //let yAxisLCLSD = [];\r\n\r\n    for (let index = 0; index < result.data.resultAVG.length; index++) {\r\n      const item = result.data.resultAVG[index];\r\n      await xAxis.push(item.Time);\r\n      //await yAxisSD.push(item.STD);\r\n\r\n      // for (let index1 = 0; index1 < result.data.controlLimit.length; index1++) {\r\n      //   const item1 = result.data.controlLimit[index1];\r\n      //   await yAxisUCLSD.push(item1.LCL_STD);\r\n      //   await yAxisLCLSD.push(item1.UCL_STD);\r\n      // }\r\n    }\r\n\r\n    //Raw_Data\r\n    let rawData = result.data.listRawData;\r\n    console.log(rawData);\r\n    for (let i = 1; i < rawData.length; i++) {\r\n      rawData[0].push(...rawData[i]);\r\n    }\r\n    this.setState({ Raw_Dat: rawData[0] });\r\n    console.log(this.state.Raw_Dat);\r\n\r\n    //AVG\r\n    let yAxis = result.data.seriesY;\r\n    let yAxisUSL = result.data.seriesUSL;\r\n    let yAxisLSL = result.data.seriesLSL;\r\n    let yAxisCL = result.data.seriesCL;\r\n    let yAxisUCL = result.data.seriesUCL;\r\n    let yAxisLCL = result.data.seriesLCL;\r\n\r\n    var seriesMC = [];\r\n    seriesMC.push(\r\n      Object.assign({}, yAxisUSL),\r\n      Object.assign({}, yAxisLSL),\r\n      Object.assign({}, yAxisUCL),\r\n      Object.assign({}, yAxisLCL),\r\n      Object.assign({}, yAxisCL),\r\n      Object.assign({}, yAxis)\r\n    );\r\n\r\n    for (let i = 0; i < result.data.seriesMC.length; i++) {\r\n      seriesMC.push(Object.assign({}, result.data.seriesMC[i]));\r\n    }\r\n\r\n    //STD\r\n    let yAxisSD = result.data.seriesSTD;\r\n    let yAxisLCLSD = result.data.seriesLCL_STD;\r\n    let yAxisUCLSD = result.data.seriesUCL_STD;\r\n    let yAxisCLSD = result.data.seriesCL_STD;\r\n\r\n    var seriesMCSTD = [];\r\n    seriesMCSTD.push(\r\n      Object.assign({}, yAxisUCLSD),\r\n      Object.assign({}, yAxisLCLSD),\r\n      Object.assign({}, yAxisCLSD),\r\n      Object.assign({}, yAxisSD)\r\n    );\r\n\r\n    for (let i = 0; i < result.data.seriesMCSTD.length; i++) {\r\n      seriesMCSTD.push(Object.assign({}, result.data.seriesMCSTD[i]));\r\n    }\r\n\r\n    var datatable = [];\r\n    //datatable.push(result.data.resultAVG);\r\n\r\n    for (let i = 0; i < result.data.listResult.length; i++) {\r\n      datatable.push(result.data.listResult[i]);\r\n    }\r\n\r\n    this.setState({\r\n      title,\r\n      data: result.data.resultAVG,\r\n      datatable,\r\n\r\n      seriesMC,\r\n      seriesMCSTD,\r\n      xAxis,\r\n\r\n      isDisable: false,\r\n    });\r\n  };\r\n\r\n  // doGetDataperday\r\n  doGetDataDay = async () => {\r\n    let resultday = await httpClient.get(\r\n      server.MOTORDIMDAY_URL +\r\n        \"/\" +\r\n        this.state.startDate +\r\n        \"/\" +\r\n        this.state.finishDate +\r\n        \"/\" +\r\n        this.state.model +\r\n        \"/\" +\r\n        this.state.parameter[0].label +\r\n        \"/\" +\r\n        this.state.productionline[0].label +\r\n        \"/\" +\r\n        this.state.selectMCname\r\n    );\r\n   //Raw_Data\r\n   let rawData1 = resultday.data.listRawData\r\n   this.setState({Raw_Dat1: rawData1[0]});\r\n   console.log(this.state.Raw_Dat1)\r\n\r\n    let titleday = resultday.data.seriesYday.titleday;\r\n    let xAxisday = [];\r\n\r\n    for (let index = 0; index < resultday.data.resultAVGday.length; index++) {\r\n      const item = resultday.data.resultAVGday[index];\r\n      await xAxisday.push(item.Date);\r\n    }\r\n\r\n    //AVG\r\n    let yAxisday = resultday.data.seriesYday;\r\n    let yAxisUSLday = resultday.data.seriesUSL;\r\n    let yAxisLSLday = resultday.data.seriesLSL;\r\n    let yAxisUCLday = resultday.data.seriesUCL;\r\n    let yAxisLCLday = resultday.data.seriesLCL;\r\n    let yAxisCLday = resultday.data.seriesCL;\r\n\r\n    var seriesMCday = [];\r\n    seriesMCday.push(\r\n      Object.assign({}, yAxisUSLday),\r\n      Object.assign({}, yAxisLSLday),\r\n      Object.assign({}, yAxisUCLday),\r\n      Object.assign({}, yAxisLCLday),\r\n      Object.assign({}, yAxisCLday),\r\n      Object.assign({}, yAxisday)\r\n    );\r\n\r\n    // var seriesMCday = [];\r\n    // seriesMCday.push(\r\n    //   yAxisUSLday,\r\n    //   yAxisLSLday,\r\n    //   yAxisUCLday,\r\n    //   yAxisLCLday,\r\n    //   yAxisCLday,\r\n    //   yAxisday\r\n    // );\r\n\r\n    for (let i = 0; i < resultday.data.seriesMCday.length; i++) {\r\n      seriesMCday.push(Object.assign({}, resultday.data.seriesMCday[i]));\r\n    }\r\n\r\n    //STD\r\n    let yAxisdaySD = resultday.data.seriesSTDDay;\r\n    let yAxisUCLdaySD = resultday.data.seriesUCL_STD;\r\n    let yAxisLCLdaySD = resultday.data.seriesLCL_STD;\r\n    let yAxisCLdaySD = resultday.data.seriesCL_STD;\r\n\r\n    var seriesMCSTDDay = [];\r\n    seriesMCSTDDay.push(\r\n      Object.assign({}, yAxisUCLdaySD),\r\n      Object.assign({}, yAxisLCLdaySD),\r\n      Object.assign({}, yAxisCLdaySD),\r\n      Object.assign({}, yAxisdaySD)\r\n    );\r\n\r\n    for (let i = 0; i < resultday.data.seriesMCSTDDay.length; i++) {\r\n      seriesMCSTDDay.push(Object.assign({}, resultday.data.seriesMCSTDDay[i]));\r\n    }\r\n\r\n    var datatableday = [];\r\n    //datatableday.push(resultday.data.resultAVGday);\r\n\r\n    for (let i = 0; i < resultday.data.listResultday.length; i++) {\r\n      datatableday.push(resultday.data.listResultday[i]);\r\n    }\r\n\r\n    this.setState({\r\n      titleday,\r\n      dataday: resultday.data.resultAVGday,\r\n      datatableday,\r\n\r\n      seriesMCday,\r\n      seriesMCSTDDay,\r\n      xAxisday,\r\n\r\n      isDisableDays: false,\r\n    });\r\n    console.log(titleday);\r\n  };\r\n\r\n  getModel = async () => {\r\n    const array = await httpClient.get(server.MOTORDIMMODEL_URL);\r\n    // console.log(array.data.result);\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Model,\r\n    }));\r\n    this.setState({ listModel: options });\r\n  };\r\n\r\n  getParameter = async () => {\r\n    const array = await httpClient.get(\r\n      server.MOTORDIMPARAM_URL + \"/\" + this.state.model\r\n    );\r\n    // console.log(array.data.result);\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Parameter,\r\n    }));\r\n    this.setState({ listParameter: options });\r\n  };\r\n\r\n  getProductionline = async () => {\r\n    const array = await httpClient.get(\r\n      server.MOTORDIMLINE_URL + \"/\" + this.state.model\r\n    );\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Line,\r\n    }));\r\n    this.setState({ listProductionline: options });\r\n  };\r\n\r\n  getMachine = async () => {\r\n    const array = await httpClient.get(\r\n      server.MOTORDIMMACHINE_URL +\r\n        \"/\" +\r\n        this.state.productionline[0].label +\r\n        \"/\" +\r\n        this.state.model\r\n    );\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Machine_no,\r\n      value: d.Machine_no,\r\n    }));\r\n    this.setState({ listMachine: options });\r\n  };\r\n\r\n  handleChange = async (event) => {\r\n    const Newevent = Object.keys(event).map((key) => event[key].label);\r\n    const json_string = JSON.stringify(Newevent);\r\n    this.setState({ selectMCname: json_string });\r\n    this.setState({ optionSelected: event });\r\n  };\r\n\r\n\r\n  renderTableRow = () => {\r\n    var tablerow = [];\r\n    for (let i = 0; i < this.state.datatable.length; i++) {\r\n      tablerow.push(\r\n        this.state.datatable[i].map((item) => (\r\n          <tr>\r\n            <td>{item.Machine}</td>\r\n            <td>{item[\"Time\"]}</td>\r\n            <td>{item[\"%Yield\"]}</td>\r\n            <td>{item[\"AVG\"]}</td>\r\n            <td>{item[\"STD\"]}</td>\r\n            <td>{item[\"CPK\"]}</td>\r\n            <td>{item[\"Cycle_time (sec)\"]}</td>\r\n            <td>{item[\"Down time (min)\"]}</td>\r\n          </tr>\r\n        ))\r\n      );\r\n    }\r\n    return tablerow;\r\n  };\r\n\r\n  renderTableRowday = () => {\r\n    var tablerowday = [];\r\n    for (let i = 0; i < this.state.datatableday.length; i++) {\r\n      tablerowday.push(\r\n        this.state.datatableday[i].map((item) => (\r\n          <tr>\r\n            <td>{item.Machine}</td>\r\n            <td>{item[\"Date\"]}</td>\r\n            <td>{item[\"%Yield\"]}</td>\r\n            <td>{item[\"AVG\"]}</td>\r\n            <td>{item[\"STD\"]}</td>\r\n            <td>{item[\"CPK\"]}</td>\r\n            <td>{item[\"Cycle_time (sec)\"]}</td>\r\n            <td>{item[\"Down time (min)\"]}</td>\r\n          </tr>\r\n        ))\r\n      );\r\n    }\r\n    return tablerowday;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.seriesMC);\r\n    console.log(this.state.datatable);\r\n    console.log(this.state.listMachine);\r\n\r\n    return (\r\n      <div class=\"content-wrapper\">\r\n        <div className=\"content\" style={{ paddingTop: 70 }}>\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Dynamic parallelism data SPC chart</h1>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a href=\"/Home\">Home</a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">\r\n                    Dynamic parallelism data SPC chart\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n          <div class=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card card-primary card-outline\">\r\n                  <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">\r\n                      <label>Select Parameter</label>\r\n                    </h3>\r\n                  </div>\r\n\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      {/* //Select Critiria \"Model\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Model</label>\r\n                          <Select\r\n                            options={this.state.listModel}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ model: e.label });\r\n                              await this.setState({\r\n                                seriesMC: [],\r\n                                seriesMCSTD: [],\r\n                                seriesMCday: [],\r\n                                seriesMCSTDDay: [],\r\n                              });\r\n                              await this.getParameter();\r\n                              await this.getProductionline();\r\n                              await this.setState({\r\n                                productionline: [\r\n                                  { label: \"Select Production Line\" },\r\n                                ],\r\n                              });\r\n                              await this.setState({\r\n                                parameter: [{ label: \"Select Parameter\" }],\r\n                              });\r\n                              await this.setState({\r\n                                optionSelected: \"Selected Tester No.\",\r\n                              });\r\n                            }}\r\n                            placeholder=\"Select Model\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Production line\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Production line</label>\r\n                          <Select\r\n                            options={this.state.listProductionline}\r\n                            value={this.state.productionline[0]}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ productionline: [] });\r\n                              this.state.productionline.push({\r\n                                label: e.label,\r\n                              });\r\n                              await this.setState({\r\n                                seriesMC: [],\r\n                                seriesMCSTD: [],\r\n                                seriesMCday: [],\r\n                                seriesMCSTDDay: [],\r\n                              });\r\n                              await this.getMachine();\r\n                              await this.setState({\r\n                                optionSelected: \"Selected Tester No.\",\r\n                              });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Production Line\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Parameter\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Parameter</label>\r\n                          <Select\r\n                            options={this.state.listParameter}\r\n                            value={this.state.parameter[0]}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ parameter: [] });\r\n                              this.state.parameter.push({ label: e.label });\r\n                              await this.setState({\r\n                                seriesMC: [],\r\n                                seriesMCSTD: [],\r\n                                seriesMCday: [],\r\n                                seriesMCSTDDay: [],\r\n                              });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Parameter\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Machine No.\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Tester No.</label>\r\n                          <Select\r\n                            isMulti\r\n                            options={this.state.listMachine}\r\n                            onChange={\r\n                              this.handleChange.bind(this)}\r\n                            displayValue=\"label\"\r\n                            selectionLimit=\"4\"\r\n                            allowSelectAll={true}\r\n                            closeMenuOnSelect={false}\r\n                            hideSelectedOptions={true}\r\n                            value={this.state.optionSelected}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Tester No.\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Start Date */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            By Hourly Select Date &nbsp;\r\n                            <i\r\n                              class=\"fas fa-question-circle\"\r\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\r\n                              onClick={() => {\r\n                                Swal.fire({\r\n                                  icon: \"info\",\r\n                                  title: \"Hourly Data\",\r\n                                  text:\r\n                                    \"Hourly data over the course of the selected day\",\r\n                                });\r\n                              }}\r\n                            ></i>\r\n                          </label>\r\n                          <input\r\n                            value={this.state.selectDate}\r\n                            onChange={(e) => {\r\n                              this.setState({ selectDate: e.target.value });\r\n                            }}\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select Start Date\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Submit button */}\r\n                      <div className=\"col-md-1\">\r\n                        <button\r\n                          disabled={this.state.isDisable}\r\n                          onClick={(e) => {\r\n                            this.setState({ isDisable: true });\r\n                            console.log(this.state.selectMCname);\r\n                            this.doGetData();\r\n                            this.setState({\r\n                              showHourly: true, // ไม่แสดง Hourly\r\n                              showDaily: false,   // แสดง Daily\r\n                            });\r\n                            Swal.fire({\r\n                              icon: \"info\",\r\n                              title: \"Loading Data\",\r\n                              timer: 60000,\r\n                              allowOutsideClick: false,\r\n                              didOpen: async () => {\r\n                                Swal.showLoading();\r\n                                await this.doGetData();\r\n                                // console.log(this.state.datatable[0].length)\r\n                                Swal.close();\r\n                              },\r\n                            }).then(() => {\r\n                              if (this.state.datatable.length > 0) {\r\n                                for (\r\n                                  let i = 0;\r\n                                  i < this.state.datatable.length;\r\n                                  i++\r\n                                ) {\r\n                                  for (\r\n                                    let j = 0;\r\n                                    j < this.state.datatable[i].length;\r\n                                    j++\r\n                                  ) {\r\n                                    if (\r\n                                      this.state.datatable[i][j].AVG !== null\r\n                                    ) {\r\n                                      Swal.fire({\r\n                                        icon: \"success\",\r\n                                        title: \"Success\",\r\n                                        type: \"success\",\r\n                                        text:\r\n                                          \"Data has been loaded successfully\",\r\n                                      });\r\n                                      break;\r\n                                    }\r\n\r\n                                    if (i === this.state.datatable.length - 1) {\r\n                                      if (\r\n                                        j ===\r\n                                        this.state.datatable[i].length - 1\r\n                                      ) {\r\n                                        if (\r\n                                          this.state.datatable[i][j].AVG == null\r\n                                        ) {\r\n                                          Swal.fire({\r\n                                            icon: \"error\",\r\n                                            title: \"No production data\",\r\n                                            text: \"Please select other date\",\r\n                                          });\r\n                                        } else {\r\n                                          Swal.fire({\r\n                                            icon: \"error\",\r\n                                            title:\r\n                                              \"Data loading has encountered some error, please try again\",\r\n                                          });\r\n                                        }\r\n                                        break;\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                }\r\n                              }\r\n                            });\r\n                          }}\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          style={{ marginTop: 30 }}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-8\">\r\n                        <CSVLink data={this.state.Raw_Dat}>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            style={{ marginTop: 30 }}\r\n                          >\r\n                            Download\r\n                          </button>\r\n                        </CSVLink>\r\n                      </div>\r\n                      {/* //Select Start Date */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            By Daily Select From &nbsp;\r\n                            <i\r\n                              class=\"fas fa-question-circle\"\r\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\r\n                              onClick={() => {\r\n                                Swal.fire({\r\n                                  icon: \"info\",\r\n                                  title: \"Day-to-Day Data\",\r\n                                  text:\r\n                                    \"Day-to-Day data over the course of the selected date\",\r\n                                });\r\n                              }}\r\n                            ></i>\r\n                          </label>\r\n                          <input\r\n                            value={this.state.startDate}\r\n                            onChange={(e) => {\r\n                              this.setState({ startDate: e.target.value });\r\n                            }}\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select Start Date\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Finish Date */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>To</label>\r\n                          <input\r\n                            value={this.state.finishDate}\r\n                            onChange={(e) => {\r\n                              this.setState({ finishDate: e.target.value });\r\n                            }}\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select Finish Date\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Submit button */}\r\n                      <div className=\"col-md-1\">\r\n                        <button\r\n                          disabled={this.state.isDisableDays}\r\n                          onClick={(e) => {\r\n                            this.setState({ isDisableDays: true });\r\n                      \r\n                            this.doGetDataDay();\r\n                            this.setState({\r\n                              showHourly: false, // ไม่แสดง Hourly\r\n                              showDaily: true,   // แสดง Daily\r\n                            });\r\n                            Swal.fire({\r\n                              icon: \"info\",\r\n                              title: \"Loading Data\",\r\n                              timer: 120000,\r\n                              allowOutsideClick: false,\r\n                              didOpen: async () => {\r\n                                Swal.showLoading();\r\n                                await this.doGetDataDay();\r\n                                // console.log(this.state.datatableday[0].length)\r\n                                Swal.close();\r\n                              },\r\n                            }).then(() => {\r\n                              if (this.state.datatableday.length > 0) {\r\n                                for (\r\n                                  let i = 0;\r\n                                  i < this.state.datatableday.length;\r\n                                  i++\r\n                                ) {\r\n                                  for (\r\n                                    let j = 0;\r\n                                    j < this.state.datatableday[i].length;\r\n                                    j++\r\n                                  ) {\r\n                                    if (\r\n                                      this.state.datatableday[i][j].AVG !== null\r\n                                    ) {\r\n                                      Swal.fire({\r\n                                        icon: \"success\",\r\n                                        title: \"Success\",\r\n                                        type: \"success\",\r\n                                        text:\r\n                                          \"Data has been loaded successfully\",\r\n                                      });\r\n                                      break;\r\n                                    }\r\n\r\n                                    if (\r\n                                      i ===\r\n                                      this.state.datatableday.length - 1\r\n                                    ) {\r\n                                      if (\r\n                                        j ===\r\n                                        this.state.datatableday[i].length - 1\r\n                                      ) {\r\n                                        if (\r\n                                          this.state.datatableday[i][j].AVG ==\r\n                                          null\r\n                                        ) {\r\n                                          Swal.fire({\r\n                                            icon: \"error\",\r\n                                            title: \"No production data\",\r\n                                            text: \"Please select other date\",\r\n                                          }).then(() => {\r\n                                            // รีเฟรชหน้าใหม่\r\n                                           \r\n                                          });\r\n                                        } else {\r\n                                          Swal.fire({\r\n                                            icon: \"error\",\r\n                                            title:\r\n                                              \"Data loading has encountered some error, please try again\",\r\n                                            }).then(() => {\r\n                                              // รีเฟรชหน้าใหม่\r\n                                              window.location.reload();\r\n                                          });\r\n                                        }\r\n                                        break;\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                }\r\n                              }\r\n                            });\r\n                          }}\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          style={{ marginTop: 30 }}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-md-1\">\r\n                        <CSVLink data={this.state.Raw_Dat1}>\r\n                          <button type=\"button\" className=\"btn btn-primary\" style={{ marginTop: 30 }}>\r\n                            Download\r\n                          </button>\r\n                        </CSVLink>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Real-time data per hour */}\r\n\r\n        {this.state.showHourly  &&(\r\n        <div className=\"content\" style={{ paddingTop: 20 }}>\r\n          <div className=\"content-header\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row mb-2\">\r\n                <div class=\"col-sm-\">\r\n                  <h1 className=\"brand-text font-weight-light\">\r\n                    Hourly SPC Chart on {this.state.selectDate}\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Chart per hour*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Xbar Chart</label>\r\n                      </h3>\r\n                    </div>\r\n\r\n                    {/* Insert Xbar Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\">\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxis,\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.title,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                },\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n\r\n                              colors: [\r\n                                \"#C62828\",\r\n                                \"#C62828\",\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMC}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Standard Deviation Chart</label>\r\n                      </h3>\r\n                    </div>\r\n                    {/* Insert R Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\">\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxis,\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.title,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                },\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n                              colors: [\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMCSTD}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Table per hour*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"card card-primary\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    {/* /.card-header */}\r\n                    <div\r\n                      className=\"card-body table-responsive p-0\"\r\n                      style={{ height: 500 }}\r\n                    >\r\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th width=\"150\">Machine</th>\r\n                            <th width=\"175\">Time</th>\r\n                            <th width=\"175\">%Yield</th>\r\n                            <th width=\"175\">Average</th>\r\n                            <th width=\"175\">STD</th>\r\n                            <th width=\"175\">Cpk</th>\r\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\r\n                            <th width=\"175\">Down time (min)</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>{this.renderTableRow()}</tbody>\r\n                      </table>\r\n                    </div>\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                  {/* /.card */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )}\r\n    \r\n    { this.state.showDaily && (\r\n        <div className=\"content\" style={{ paddingTop: 20 }}>\r\n          <div className=\"content-header\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row mb-2\">\r\n                <div class=\"col-sm-\">\r\n                  <h1 className=\"brand-text font-weight-light\">\r\n                    Daily SPC Chart from {this.state.startDate} to{\" \"}\r\n                    {this.state.finishDate}\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Chart per day*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Xbar Chart</label>\r\n                      </h3>\r\n                    </div>\r\n                    {/* Insert Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\" style={{}}>\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxisday,\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.titleday,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                  fontFamily: undefined,\r\n                                  color: \"#263238\",\r\n                                },\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n\r\n                              colors: [\r\n                                \"#C62828\",\r\n                                \"#C62828\",\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMCday}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Standard Deviation Chart</label>\r\n                      </h3>\r\n                    </div>\r\n                    {/* Insert R Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\">\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxisday,\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.titleday,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                  fontFamily: undefined,\r\n                                  color: \"#263238\",\r\n                                },\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n                              colors: [\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMCSTDDay}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Insert Table per day*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"card card-primary\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    {/* /.card-header */}\r\n                    <div\r\n                      className=\"card-body table-responsive p-0\"\r\n                      style={{ height: 500 }}\r\n                    >\r\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th width=\"150\">Machine</th>\r\n                            <th width=\"175\">Time</th>\r\n                            <th width=\"175\">%Yield</th>\r\n                            <th width=\"175\">Average</th>\r\n                            <th width=\"175\">STD</th>\r\n                            <th width=\"175\">Cpk</th>\r\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\r\n                            <th width=\"175\">Down time (min)</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>{this.renderTableRowday()}</tbody>\r\n                      </table>\r\n                    </div>\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                  {/* /.card */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          )}\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default MOTORDIM;\r\n","import React, { Component } from \"react\";\r\nimport { key, server } from \"../../constants\";\r\nimport { httpClient } from \"../../utils/HttpClient\";\r\nimport Chart from \"react-apexcharts\";\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nclass MOTORDIM extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //set state\r\n    this.state = {\r\n      //data average per hour\r\n      title: [],\r\n      data: [],\r\n      seriesMC: [],\r\n      seriesMCSTD: [],\r\n\r\n      xAxis: [],\r\n      yAxis: [],\r\n      yAxisUSL: [],\r\n      yAxisLSL: [],\r\n      yAxisUCL: [],\r\n      yAxisLCL: [],\r\n      yAxisCL: [],\r\n\r\n      //raw data per hour\r\n      Raw_Dat: [],\r\n      Raw_Dat1: [],\r\n\r\n      //standard deviation per hour\r\n      yAxisUCLSD: [],\r\n      yAxisLCLSD: [],\r\n      yAxisCLSD: [],\r\n      yAxisSD: [],\r\n\r\n      // Table per hour\r\n      datatable: [],\r\n      tablerow: [],\r\n\r\n      //data average per day\r\n      titleday: [],\r\n      dataday: [],\r\n      seriesMCday: [],\r\n      seriesMCSTDDay: [],\r\n\r\n      xAxisday: [],\r\n      yAxisday: [],\r\n      yAxisUSLday: [],\r\n      yAxisLSLday: [],\r\n      yAxisUCLday: [],\r\n      yAxisLCLday: [],\r\n      yAxisCLday: [],\r\n\r\n      //standard deviation per hour\r\n      yAxisdaySD: [],\r\n      yAxisUCLdaySD: [],\r\n      yAxisLCLdaySD: [],\r\n      yAxisCLdaySD: [],\r\n\r\n      // Table per hour\r\n      datatableday: [],\r\n      tablerowday: [],\r\n\r\n      // criteria\r\n      model: [],\r\n      productionline: [],\r\n      parameter: [],\r\n      selectMCname: [],\r\n      aiPress: [],\r\n\r\n      selectDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\r\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\r\n      finishDate: moment().format(\"yyyy-MM-DD\"),\r\n\r\n      // criteria options\r\n      listModel: [],\r\n      listParameter: [],\r\n      listProductionline: [],\r\n      listMachine: [],\r\n      listAiPress: [],\r\n\r\n      optionSelected: null,\r\n      isDisable: false,\r\n      isDisableDays: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.getModel();\r\n    await this.getAiPress();\r\n    await this.getParameter();\r\n    await this.getProductionline();\r\n    await this.getMachine();\r\n  };\r\n\r\n  doGetData = async () => {\r\n    let result = await httpClient.get(\r\n      server.MOTORDIMAI_URL +\r\n        \"/\" +\r\n        this.state.selectDate +\r\n        \"/\" +\r\n        this.state.model +\r\n        \"/\" +\r\n        this.state.parameter[0].label +\r\n        \"/\" +\r\n        this.state.productionline[0].label +\r\n        \"/\" +\r\n        this.state.selectMCname[0].label +\r\n        \"/\" +\r\n        this.state.aiPress\r\n    );\r\n\r\n    let title = result.data.seriesY.title;\r\n    let xAxis = [];\r\n    for (let index = 0; index < result.data.resultAVG.length; index++) {\r\n      const item = result.data.resultAVG[index];\r\n      await xAxis.push(item.Time);\r\n    }\r\n\r\n    //Raw_Data\r\n    let rawData = result.data.listRawData;\r\n    console.log(rawData);\r\n    // for (let i = 1; i < rawData.length; i++) {\r\n    //   rawData[0].push(...rawData[i])\r\n    // }\r\n    this.setState({ Raw_Dat1: rawData[0] });\r\n    console.log(this.state.Raw_Dat1);\r\n\r\n    //AVG\r\n    let yAxis = result.data.seriesY;\r\n    let yAxisUSL = result.data.seriesUSL;\r\n    let yAxisLSL = result.data.seriesLSL;\r\n    let yAxisCL = result.data.seriesCL;\r\n    let yAxisUCL = result.data.seriesUCL;\r\n    let yAxisLCL = result.data.seriesLCL;\r\n\r\n    var seriesMC = [];\r\n    seriesMC.push(\r\n      Object.assign({}, yAxisUSL),\r\n      Object.assign({}, yAxisLSL),\r\n      Object.assign({}, yAxisUCL),\r\n      Object.assign({}, yAxisLCL),\r\n      Object.assign({}, yAxisCL),\r\n      Object.assign({}, yAxis)\r\n    );\r\n\r\n    for (let i = 0; i < result.data.seriesMC.length; i++) {\r\n      seriesMC.push(Object.assign({}, result.data.seriesMC[i]));\r\n    }\r\n\r\n    //STD\r\n    let yAxisSD = result.data.seriesSTD;\r\n    let yAxisLCLSD = result.data.seriesLCL_STD;\r\n    let yAxisUCLSD = result.data.seriesUCL_STD;\r\n    let yAxisCLSD = result.data.seriesCL_STD;\r\n\r\n    var seriesMCSTD = [];\r\n    seriesMCSTD.push(\r\n      Object.assign({}, yAxisUCLSD),\r\n      Object.assign({}, yAxisLCLSD),\r\n      Object.assign({}, yAxisCLSD),\r\n      Object.assign({}, yAxisSD)\r\n    );\r\n\r\n    for (let i = 0; i < result.data.seriesMCSTD.length; i++) {\r\n      seriesMCSTD.push(Object.assign({}, result.data.seriesMCSTD[i]));\r\n    }\r\n\r\n    var datatable = [];\r\n\r\n    for (let i = 0; i < result.data.listResult.length; i++) {\r\n      datatable.push(result.data.listResult[i]);\r\n    }\r\n\r\n    this.setState({\r\n      title,\r\n      data: result.data.resultAVG,\r\n      datatable,\r\n\r\n      seriesMC,\r\n      seriesMCSTD,\r\n      xAxis,\r\n\r\n      isDisable: false,\r\n    });\r\n  };\r\n\r\n  // doGetDataperday\r\n  doGetDataDay = async () => {\r\n    let resultday = await httpClient.get(\r\n      server.MOTORDIMAIDAY_URL +\r\n        \"/\" +\r\n        this.state.startDate +\r\n        \"/\" +\r\n        this.state.finishDate +\r\n        \"/\" +\r\n        this.state.model +\r\n        \"/\" +\r\n        this.state.parameter[0].label +\r\n        \"/\" +\r\n        this.state.productionline[0].label +\r\n        \"/\" +\r\n        this.state.selectMCname[0].label +\r\n        \"/\" +\r\n        this.state.aiPress\r\n    );\r\n\r\n    let titleday = resultday.data.seriesYday.titleday;\r\n    let xAxisday = [];\r\n\r\n    for (let index = 0; index < resultday.data.resultAVGday.length; index++) {\r\n      const item = resultday.data.resultAVGday[index];\r\n      await xAxisday.push(item.Date);\r\n    }\r\n    //Raw_Data\r\n    let rawData = resultday.data.listRawData;\r\n    console.log(rawData);\r\n    for (let i = 1; i < rawData.length; i++) {\r\n      rawData[0].push(...rawData[i]);\r\n    }\r\n    this.setState({ Raw_Dat1: rawData[0] });\r\n    console.log(this.state.Raw_Dat1);\r\n    //AVG\r\n    let yAxisday = resultday.data.seriesYday;\r\n    let yAxisUSLday = resultday.data.seriesUSL;\r\n    let yAxisLSLday = resultday.data.seriesLSL;\r\n    let yAxisUCLday = resultday.data.seriesUCL;\r\n    let yAxisLCLday = resultday.data.seriesLCL;\r\n    let yAxisCLday = resultday.data.seriesCL;\r\n\r\n    var seriesMCday = [];\r\n    seriesMCday.push(\r\n      Object.assign({}, yAxisUSLday),\r\n      Object.assign({}, yAxisLSLday),\r\n      Object.assign({}, yAxisUCLday),\r\n      Object.assign({}, yAxisLCLday),\r\n      Object.assign({}, yAxisCLday),\r\n      Object.assign({}, yAxisday)\r\n    );\r\n\r\n    for (let i = 0; i < resultday.data.seriesMCday.length; i++) {\r\n      seriesMCday.push(Object.assign({}, resultday.data.seriesMCday[i]));\r\n    }\r\n\r\n    //STD\r\n    let yAxisdaySD = resultday.data.seriesSTDDay;\r\n    let yAxisUCLdaySD = resultday.data.seriesUCL_STD;\r\n    let yAxisLCLdaySD = resultday.data.seriesLCL_STD;\r\n    let yAxisCLdaySD = resultday.data.seriesCL_STD;\r\n\r\n    var seriesMCSTDDay = [];\r\n    seriesMCSTDDay.push(\r\n      Object.assign({}, yAxisUCLdaySD),\r\n      Object.assign({}, yAxisLCLdaySD),\r\n      Object.assign({}, yAxisCLdaySD),\r\n      Object.assign({}, yAxisdaySD)\r\n    );\r\n\r\n    for (let i = 0; i < resultday.data.seriesMCSTDDay.length; i++) {\r\n      seriesMCSTDDay.push(Object.assign({}, resultday.data.seriesMCSTDDay[i]));\r\n    }\r\n\r\n    var datatableday = [];\r\n    //datatableday.push(resultday.data.resultAVGday);\r\n\r\n    for (let i = 0; i < resultday.data.listResultday.length; i++) {\r\n      datatableday.push(resultday.data.listResultday[i]);\r\n    }\r\n\r\n    this.setState({\r\n      titleday,\r\n      dataday: resultday.data.resultAVGday,\r\n      datatableday,\r\n\r\n      seriesMCday,\r\n      seriesMCSTDDay,\r\n      xAxisday,\r\n\r\n      isDisableDays: false,\r\n    });\r\n  };\r\n\r\n  getModel = async () => {\r\n    const array = await httpClient.get(server.MOTORDIMAIMODEL_URL);\r\n    // console.log(array.data.result);\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Model,\r\n    }));\r\n    this.setState({ listModel: options });\r\n  };\r\n\r\n  getParameter = async () => {\r\n    const array = await httpClient.get(\r\n      server.MOTORDIMAIPARAM_URL + \"/\" + this.state.model\r\n    );\r\n    // console.log(array.data.result);\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Parameter,\r\n    }));\r\n    this.setState({ listParameter: options });\r\n  };\r\n\r\n  getProductionline = async () => {\r\n    const array = await httpClient.get(\r\n      server.MOTORDIMAILINE_URL + \"/\" + this.state.model\r\n    );\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Line,\r\n    }));\r\n    this.setState({ listProductionline: options });\r\n  };\r\n\r\n  getMachine = async () => {\r\n    const array = await httpClient.get(\r\n      server.MOTORDIMAIMACHINE_URL +\r\n        \"/\" +\r\n        this.state.productionline[0].label +\r\n        \"/\" +\r\n        this.state.model\r\n    );\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Machine_no,\r\n    }));\r\n    this.setState({ listMachine: options });\r\n  };\r\n\r\n  getAiPress = async () => {\r\n    const array = await httpClient.get(server.MOTORDIMAIPRESS_URL);\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Machine_no,\r\n      value: d.Machine_no,\r\n    }));\r\n    this.setState({ listAiPress: options });\r\n  };\r\n\r\n  handleChange = async (event) => {\r\n    const Newevent = Object.keys(event).map((key) => event[key].label);\r\n    const json_string = JSON.stringify(Newevent);\r\n    this.setState({ aiPress: json_string });\r\n    this.setState({ optionSelected: event });\r\n    console.log(Newevent);\r\n    console.log(json_string);\r\n    console.log(this.state.aiPress);\r\n    // console.log(this.state.optionSelected);\r\n  };\r\n\r\n  renderTableRow = () => {\r\n    var tablerow = [];\r\n    for (let i = 0; i < this.state.datatable.length; i++) {\r\n      tablerow.push(\r\n        this.state.datatable[i].map((item) => (\r\n          <tr>\r\n            <td>{item.Fixture}</td>\r\n            <td>{item[\"Time\"]}</td>\r\n            <td>{item[\"%Yield\"]}</td>\r\n            <td>{item[\"AVG\"]}</td>\r\n            <td>{item[\"STD\"]}</td>\r\n            <td>{item[\"CPK\"]}</td>\r\n            <td>{item[\"Cycle_time (sec)\"]}</td>\r\n            <td>{item[\"Down time (min)\"]}</td>\r\n          </tr>\r\n        ))\r\n      );\r\n    }\r\n    return tablerow;\r\n  };\r\n\r\n  renderTableRowday = () => {\r\n    var tablerowday = [];\r\n    for (let i = 0; i < this.state.datatableday.length; i++) {\r\n      tablerowday.push(\r\n        this.state.datatableday[i].map((item) => (\r\n          <tr>\r\n            <td>{item.Fixture}</td>\r\n            <td>{item[\"Date\"]}</td>\r\n            <td>{item[\"%Yield\"]}</td>\r\n            <td>{item[\"AVG\"]}</td>\r\n            <td>{item[\"STD\"]}</td>\r\n            <td>{item[\"CPK\"]}</td>\r\n            <td>{item[\"Cycle_time (sec)\"]}</td>\r\n            <td>{item[\"Down time (min)\"]}</td>\r\n          </tr>\r\n        ))\r\n      );\r\n    }\r\n    return tablerowday;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"content-wrapper\">\r\n        <div className=\"content\" style={{ paddingTop: 70 }}>\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-9\">\r\n                  <h1>Ai-press data SPC chart</h1>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a href=\"/Home\">Home</a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">\r\n                    Ai-press data SPC chart\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n          <div class=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card card-primary card-outline\">\r\n                  <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">\r\n                      <label>Select Parameter</label>\r\n                    </h3>\r\n                  </div>\r\n\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      {/* //Select Critiria \"Model\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Model</label>\r\n                          <Select\r\n                            options={this.state.listModel}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ model: e.label });\r\n                              await this.setState({\r\n                                seriesMC: [],\r\n                                seriesMCSTD: [],\r\n                                seriesMCday: [],\r\n                                seriesMCSTDDay: [],\r\n                              });\r\n                              await this.getParameter();\r\n                              await this.getProductionline();\r\n                              await this.setState({\r\n                                productionline: [\r\n                                  { label: \"Select Production Line\" },\r\n                                ],\r\n                              });\r\n                              await this.setState({\r\n                                parameter: [{ label: \"Select Parameter\" }],\r\n                              });\r\n                              await this.setState({\r\n                                selectMCname: [\r\n                                  { label: \"Selected Tester No.\" },\r\n                                ],\r\n                              });\r\n                              await this.setState({\r\n                                optionSelected: \"Select Ass'y Fixture\",\r\n                              });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Model\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Production line\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Production line</label>\r\n                          <Select\r\n                            options={this.state.listProductionline}\r\n                            value={this.state.productionline[0]}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ productionline: [] });\r\n                              this.state.productionline.push({\r\n                                label: e.label,\r\n                              });\r\n                              await this.setState({\r\n                                seriesMC: [],\r\n                                seriesMCSTD: [],\r\n                                seriesMCday: [],\r\n                                seriesMCSTDDay: [],\r\n                              });\r\n                              await this.getMachine();\r\n                              await this.setState({\r\n                                selectMCname: [\r\n                                  { label: \"Selected Tester No.\" },\r\n                                ],\r\n                              });\r\n                              await this.setState({\r\n                                optionSelected: \"Select Ass'y Fixture\",\r\n                              });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Production Line\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Parameter\" */}\r\n                      <div className=\"col-md-2\">\r\n                        <div className=\"form-group\">\r\n                          <label>Parameter</label>\r\n                          <Select\r\n                            options={this.state.listParameter}\r\n                            value={this.state.parameter[0]}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ parameter: [] });\r\n                              this.state.parameter.push({ label: e.label });\r\n                              await this.setState({\r\n                                seriesMC: [],\r\n                                seriesMCSTD: [],\r\n                                seriesMCday: [],\r\n                                seriesMCSTDDay: [],\r\n                              });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Parameter\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Machine No.\" */}\r\n                      <div className=\"col-md-2\">\r\n                        <div className=\"form-group\">\r\n                          <label>Tester No.</label>\r\n                          <Select\r\n                            options={this.state.listMachine}\r\n                            value={this.state.selectMCname[0]}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ selectMCname: [] });\r\n                              this.state.selectMCname.push({ label: e.label });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Tester No.\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-2\">\r\n                        <div className=\"form-group\">\r\n                          <label>Ass'y Fixture</label>\r\n                          <Select\r\n                            isMulti\r\n                            options={this.state.listAiPress}\r\n                            onChange={this.handleChange.bind(this)}\r\n                            displayValue=\"label\"\r\n                            selectionLimit=\"2\"\r\n                            allowSelectAll={true}\r\n                            closeMenuOnSelect={false}\r\n                            hideSelectedOptions={true}\r\n                            value={this.state.optionSelected}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Ass'y Fixture\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Start Date */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            By Hourly Select Date &nbsp;\r\n                            <i\r\n                              class=\"fas fa-question-circle\"\r\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\r\n                              onClick={() => {\r\n                                Swal.fire({\r\n                                  icon: \"info\",\r\n                                  title: \"Hourly Data\",\r\n                                  text: \"Hourly data over the course of the selected day\",\r\n                                });\r\n                              }}\r\n                            ></i>\r\n                          </label>\r\n                          <input\r\n                            value={this.state.selectDate}\r\n                            onChange={(e) => {\r\n                              this.setState({ selectDate: e.target.value });\r\n                            }}\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select Start Date\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Submit button */}\r\n                      <div className=\"col-md-1\">\r\n                        <button\r\n                          disabled={this.state.isDisable}\r\n                          onClick={(e) => {\r\n                            this.setState({ isDisable: true });\r\n                            this.doGetData();\r\n                            this.setState({ showHourly: true  , showDaily: false});\r\n                            Swal.fire({\r\n                              icon: \"info\",\r\n                              title: \"Loading Data\",\r\n                              timer: 60000,\r\n                              allowOutsideClick: false,\r\n                              didOpen: async () => {\r\n                                Swal.showLoading();\r\n                                await this.doGetData();\r\n                                console.log(this.state.seriesMC[5].data);\r\n                                Swal.close();\r\n                              },\r\n                            }).then(() => {\r\n                              if (this.state.seriesMC.length > 0) {\r\n                                if (this.state.seriesMC[5].data.length > 0) {\r\n                                  Swal.fire({\r\n                                    icon: \"success\",\r\n                                    title: \"Success\",\r\n                                    text: \"Data has been loaded successfully\",\r\n                                  });\r\n                                } else if (\r\n                                  this.state.seriesMC[5].data.length == 0\r\n                                ) {\r\n                                  Swal.fire({\r\n                                    icon: \"error\",\r\n                                    title: \"No production data\",\r\n                                    text: \"Please select other date\",\r\n                                  }).then(() => {\r\n                                    // รีเฟรชหน้าใหม่\r\n                                    window.location.reload();\r\n                                  });\r\n                                }\r\n                              } else {\r\n                                Swal.fire({\r\n                                  icon: \"error\",\r\n                                  title:\r\n                                    \"Data loading has encountered some error, please try again\",\r\n                                  }).then(() => {\r\n                                    // รีเฟรชหน้าใหม่\r\n                                    window.location.reload();\r\n                                });\r\n                              }\r\n                            });\r\n                          }}\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          style={{ marginTop: 30 }}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-md-8\">\r\n                        <CSVLink data={this.state.Raw_Dat}>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            style={{ marginTop: 30 }}\r\n                          >\r\n                            Download\r\n                          </button>\r\n                        </CSVLink>\r\n                      </div>\r\n\r\n                      {/* //Select Start Date */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            By Daily Select From &nbsp;\r\n                            <a\r\n                              class=\"fas fa-question-circle\"\r\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\r\n                              onClick={() => {\r\n                                Swal.fire({\r\n                                  icon: \"info\",\r\n                                  title: \"Day-to-Day Data\",\r\n                                  text: \"Day-to-Day data over the course of the selected date\",\r\n                                });\r\n                              }}\r\n                            ></a>\r\n                          </label>\r\n                          <input\r\n                            value={this.state.startDate}\r\n                            onChange={(e) => {\r\n                              this.setState({ startDate: e.target.value });\r\n                            }}\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select Start Date\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Finish Date */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>To</label>\r\n                          <input\r\n                            value={this.state.finishDate}\r\n                            onChange={(e) => {\r\n                              this.setState({ finishDate: e.target.value });\r\n                            }}\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select Finish Date\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        {/* Submit button */}\r\n                        <div className=\"col-md-6\">\r\n                          <button\r\n                            disabled={this.state.isDisableDays}\r\n                            onClick={(e) => {\r\n                              this.setState({ isDisableDays: true });\r\n                              this.doGetDataDay();\r\n                              this.setState({\r\n                                showHourly: false, // ไม่แสดง Hourly\r\n                                showDaily: true  // แสดง Daily\r\n                              });\r\n                              Swal.fire({\r\n                                icon: \"info\",\r\n                                title: \"Loading Data\",\r\n                                timer: 120000,\r\n                                allowOutsideClick: false,\r\n                                didOpen: async () => {\r\n                                  Swal.showLoading();\r\n                                  await this.doGetDataDay();\r\n                                  Swal.close();\r\n                                },\r\n                              }).then(() => {\r\n                                // ตรวจสอบเงื่อนไขว่าเกิด error หรือไม่\r\n                                if (this.state.seriesMCday.length > 0) {\r\n                                  if (\r\n                                    this.state.seriesMCday[5].data.length > 0\r\n                                  ) {\r\n                                    Swal.fire({\r\n                                      icon: \"success\",\r\n                                      title: \"Success\",\r\n                                      text: \"Data has been loaded successfully\",\r\n                                    });\r\n                                  } else if (\r\n                                    this.state.seriesMCday[5].data.length === 0\r\n                                  ) {\r\n                                    Swal.fire({\r\n                                      icon: \"error\",\r\n                                      title: \"No production data\",\r\n                                      text: \"Please select another date\",\r\n                                    }).then(() => {\r\n                                      // รีเฟรชหน้าเว็บ\r\n                                      window.location.reload();\r\n                                    });\r\n                                  }\r\n                                } else {\r\n                                  Swal.fire({\r\n                                    icon: \"error\",\r\n                                    title:\r\n                                      \"Data loading encountered an error, please try again\",\r\n                                  }).then(() => {\r\n                                    // รีเฟรชหน้าเว็บ\r\n                                    window.location.reload();\r\n                                  });\r\n                                }\r\n                              });\r\n                            }}\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary\"\r\n                            style={{ marginTop: 30 }}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <CSVLink data={this.state.Raw_Dat1}>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-primary\"\r\n                              style={{ marginTop: 30 }}\r\n                            >\r\n                              Download\r\n                            </button>\r\n                          </CSVLink>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Real-time data per hour */}\r\n        {this.state.showHourly&&(\r\n        <div className=\"content\" style={{ paddingTop: 20 }}>\r\n          <div className=\"content-header\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row mb-2\">\r\n                <div class=\"col-sm-\">\r\n                  <h1 className=\"brand-text font-weight-light\">\r\n                    Hourly SPC Chart on {this.state.selectDate}\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Chart per hour*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Xbar Chart</label>\r\n                      </h3>\r\n                    </div>\r\n\r\n                    {/* Insert Xbar Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\">\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxis,\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.title,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                },\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n\r\n                              colors: [\r\n                                \"#C62828\",\r\n                                \"#C62828\",\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMC}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Standard Deviation Chart</label>\r\n                      </h3>\r\n                    </div>\r\n                    {/* Insert R Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\">\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxis,\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.title,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                },\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n                              colors: [\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMCSTD}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Table per hour*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"card card-primary\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    {/* /.card-header */}\r\n                    <div\r\n                      className=\"card-body table-responsive p-0\"\r\n                      style={{ height: 500 }}\r\n                    >\r\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th width=\"150\">Fixture</th>\r\n                            <th width=\"175\">Time</th>\r\n                            <th width=\"175\">%Yield</th>\r\n                            <th width=\"175\">Average</th>\r\n                            <th width=\"175\">STD</th>\r\n                            <th width=\"175\">Cpk</th>\r\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\r\n                            <th width=\"175\">Down time (min)</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>{this.renderTableRow()}</tbody>\r\n                      </table>\r\n                    </div>\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                  {/* /.card */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n)}\r\n        {/* Real-time data per day */}\r\n        {this.state.showDaily&&(\r\n        <div className=\"content\" style={{ paddingTop: 20 }}>\r\n          <div className=\"content-header\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row mb-2\">\r\n                <div class=\"col-sm-\">\r\n                  <h1 className=\"brand-text font-weight-light\">\r\n                    Daily SPC Chart from {this.state.startDate} to{\" \"}\r\n                    {this.state.finishDate}\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Chart per day*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Xbar Chart</label>\r\n                      </h3>\r\n                    </div>\r\n                    {/* Insert Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\" style={{}}>\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxisday,\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.titleday,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                  fontFamily: undefined,\r\n                                  color: \"#263238\",\r\n                                },\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n\r\n                              colors: [\r\n                                \"#C62828\",\r\n                                \"#C62828\",\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMCday}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Standard Deviation Chart</label>\r\n                      </h3>\r\n                    </div>\r\n                    {/* Insert R Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\">\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxisday,\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.titleday,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                  fontFamily: undefined,\r\n                                  color: \"#263238\",\r\n                                },\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n                              colors: [\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMCSTDDay}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Insert Table per day*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"card card-primary\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    {/* /.card-header */}\r\n                    <div\r\n                      className=\"card-body table-responsive p-0\"\r\n                      style={{ height: 500 }}\r\n                    >\r\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th width=\"150\">Fixture</th>\r\n                            <th width=\"175\">Date</th>\r\n                            <th width=\"175\">%Yield</th>\r\n                            <th width=\"175\">Average</th>\r\n                            <th width=\"175\">STD</th>\r\n                            <th width=\"175\">Cpk</th>\r\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\r\n                            <th width=\"175\">Down time (min)</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>{this.renderTableRowday()}</tbody>\r\n                      </table>\r\n                    </div>\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                  {/* /.card */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MOTORDIM;\r\n","import React, { Component } from \"react\";\r\nimport { key, server } from \"../../constants\";\r\nimport { httpClient } from \"../../utils/HttpClient\";\r\nimport Chart from \"react-apexcharts\";\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nclass MOTORDIM extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //set state\r\n    this.state = {\r\n      //data average per hour\r\n      title: [],\r\n      data: [],\r\n      seriesMC: [],\r\n      seriesMCSTD: [],\r\n\r\n      xAxis: [],\r\n      yAxis: [],\r\n      yAxisUSL: [],\r\n      yAxisLSL: [],\r\n      yAxisUCL: [],\r\n      yAxisLCL: [],\r\n      yAxisCL: [],\r\n\r\n      //raw data per hour\r\n      Raw_Dat: [],\r\n\r\n      //standard deviation per hour\r\n      yAxisUCLSD: [],\r\n      yAxisLCLSD: [],\r\n      yAxisCLSD: [],\r\n      yAxisSD: [],\r\n\r\n      // Table per hour\r\n      datatable: [],\r\n      tablerow: [],\r\n\r\n      //data average per day\r\n      titleday: [],\r\n      dataday: [],\r\n      seriesMCday: [],\r\n      seriesMCSTDDay: [],\r\n\r\n      xAxisday: [],\r\n      yAxisday: [],\r\n      yAxisUSLday: [],\r\n      yAxisLSLday: [],\r\n      yAxisUCLday: [],\r\n      yAxisLCLday: [],\r\n      yAxisCLday: [],\r\n\r\n      //standard deviation per hour\r\n      yAxisdaySD: [],\r\n      yAxisUCLdaySD: [],\r\n      yAxisCLdaySD: [],\r\n      yAxisLCLdaySD: [],\r\n\r\n      // Table per hour\r\n      datatableday: [],\r\n      tablerowday: [],\r\n\r\n      // criteria\r\n      model: [],\r\n      productionline: [],\r\n      parameter: [],\r\n      selectMCname: [],\r\n      RTB: [],\r\n\r\n      selectDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\r\n      startDate: moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\r\n      finishDate: moment().format(\"yyyy-MM-DD\"),\r\n\r\n      // criteria options\r\n      listModel: [],\r\n      listParameter: [],\r\n      listProductionline: [],\r\n      listMachine: [],\r\n      listRTB: [],\r\n\r\n      optionSelected: null,\r\n      isDisable: false,\r\n      isDisableDays: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.getModel();\r\n    await this.getRTB();\r\n    await this.getParameter();\r\n    await this.getProductionline();\r\n    await this.getMachine();\r\n  };\r\n\r\n  doGetData = async () => {\r\n    let result = await httpClient.get(\r\n      server.MOTORDIMRTB_URL +\r\n        \"/\" +\r\n        this.state.selectDate +\r\n        \"/\" +\r\n        this.state.model +\r\n        \"/\" +\r\n        this.state.parameter[0].label +\r\n        \"/\" +\r\n        this.state.productionline[0].label +\r\n        \"/\" +\r\n        this.state.selectMCname[0].label +\r\n        \"/\" +\r\n        this.state.RTB\r\n    );\r\n\r\n    let title = result.data.seriesY.title;\r\n    let xAxis = [];\r\n    for (let index = 0; index < result.data.resultAVG.length; index++) {\r\n      const item = result.data.resultAVG[index];\r\n      await xAxis.push(item.Time);\r\n    }\r\n\r\n    //Raw_Data\r\n    let rawData = result.data.listRawData\r\n    console.log(rawData)\r\n    for (let i = 1; i < rawData.length; i++) {\r\n      rawData[0].push(...rawData[i])\r\n    }\r\n    this.setState({Raw_Dat: rawData[0]})\r\n    console.log(this.state.Raw_Dat)\r\n\r\n    //AVG\r\n    let yAxis = result.data.seriesY;\r\n    let yAxisUSL = result.data.seriesUSL;\r\n    let yAxisLSL = result.data.seriesLSL;\r\n    let yAxisCL = result.data.seriesCL;\r\n    let yAxisUCL = result.data.seriesUCL;\r\n    let yAxisLCL = result.data.seriesLCL;\r\n\r\n    var seriesMC = [];\r\n    seriesMC.push(\r\n      Object.assign({}, yAxisUSL),\r\n      Object.assign({}, yAxisLSL),\r\n      Object.assign({}, yAxisUCL),\r\n      Object.assign({}, yAxisLCL),\r\n      Object.assign({}, yAxisCL),\r\n      Object.assign({}, yAxis)\r\n    );\r\n\r\n    for (let i = 0; i < result.data.seriesMC.length; i++) {\r\n      seriesMC.push(Object.assign({}, result.data.seriesMC[i]));\r\n    }\r\n\r\n    //STD\r\n    let yAxisSD = result.data.seriesSTD;\r\n    let yAxisLCLSD = result.data.seriesLCL_STD;\r\n    let yAxisUCLSD = result.data.seriesUCL_STD;\r\n    let yAxisCLSD = result.data.seriesCL_STD;\r\n\r\n    var seriesMCSTD = [];\r\n    seriesMCSTD.push(\r\n      Object.assign({}, yAxisUCLSD),\r\n      Object.assign({}, yAxisLCLSD),\r\n      Object.assign({}, yAxisCLSD),\r\n      Object.assign({}, yAxisSD)\r\n    );\r\n\r\n    for (let i = 0; i < result.data.seriesMCSTD.length; i++) {\r\n      seriesMCSTD.push(Object.assign({}, result.data.seriesMCSTD[i]));\r\n    }\r\n\r\n    var datatable = [];\r\n\r\n    for (let i = 0; i < result.data.listResult.length; i++) {\r\n      datatable.push(result.data.listResult[i]);\r\n    }\r\n\r\n    var options = {\r\n      series: [{\r\n      name: 'Website Blog',\r\n      type: 'column',\r\n      data: [440, 505, 414, 671, 227, 413, 201, 352, 752, 320, 257, 160]\r\n    }, {\r\n      name: 'Social Media',\r\n      type: 'line',\r\n      data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16]\r\n    }],\r\n      chart: {\r\n      height: 350,\r\n      type: 'line',\r\n    },\r\n    stroke: {\r\n      width: [0, 4]\r\n    },\r\n    title: {\r\n      text: 'Traffic Sources'\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      enabledOnSeries: [1]\r\n    },\r\n    labels: ['01 Jan 2001', '02 Jan 2001', '03 Jan 2001', '04 Jan 2001', '05 Jan 2001', '06 Jan 2001', '07 Jan 2001', '08 Jan 2001', '09 Jan 2001', '10 Jan 2001', '11 Jan 2001', '12 Jan 2001'],\r\n    xaxis: {\r\n      type: 'datetime'\r\n    },\r\n    yaxis: [{\r\n      title: {\r\n        text: 'Website Blog',\r\n      },\r\n    \r\n    }, {\r\n      opposite: true,\r\n      title: {\r\n        text: 'Social Media'\r\n      }\r\n    }]\r\n    };\r\n\r\n    this.setState({\r\n      title,\r\n      data: result.data.resultAVG,\r\n      datatable,\r\n\r\n      seriesMC,\r\n      seriesMCSTD,\r\n      xAxis,\r\n\r\n      isDisable: false,\r\n    });\r\n  };\r\n\r\n  // doGetDataperday\r\n  doGetDataDay = async () => {\r\n    let resultday = await httpClient.get(\r\n      server.MOTORDIMRTBDAY_URL +\r\n        \"/\" +\r\n        this.state.startDate +\r\n        \"/\" +\r\n        this.state.finishDate +\r\n        \"/\" +\r\n        this.state.model +\r\n        \"/\" +\r\n        this.state.parameter[0].label +\r\n        \"/\" +\r\n        this.state.productionline[0].label +\r\n        \"/\" +\r\n        this.state.selectMCname[0].label +\r\n        \"/\" +\r\n        this.state.RTB\r\n    );\r\n\r\n    let titleday = resultday.data.seriesYday.titleday;\r\n    let xAxisday = [];\r\n\r\n    for (let index = 0; index < resultday.data.resultAVGday.length; index++) {\r\n      const item = resultday.data.resultAVGday[index];\r\n      await xAxisday.push(item.Date);\r\n    }\r\n\r\n    //AVG\r\n    let yAxisday = resultday.data.seriesYday;\r\n    let yAxisUSLday = resultday.data.seriesUSL;\r\n    let yAxisLSLday = resultday.data.seriesLSL;\r\n    let yAxisUCLday = resultday.data.seriesUCL;\r\n    let yAxisLCLday = resultday.data.seriesLCL;\r\n    let yAxisCLday = resultday.data.seriesCL;\r\n\r\n    var seriesMCday = [];\r\n    seriesMCday.push(\r\n      Object.assign({}, yAxisUSLday),\r\n      Object.assign({}, yAxisLSLday),\r\n      Object.assign({}, yAxisUCLday),\r\n      Object.assign({}, yAxisLCLday),\r\n      Object.assign({}, yAxisCLday),\r\n      Object.assign({}, yAxisday)\r\n    );\r\n\r\n    for (let i = 0; i < resultday.data.seriesMCday.length; i++) {\r\n      seriesMCday.push(Object.assign({}, resultday.data.seriesMCday[i]));\r\n    }\r\n\r\n    //STD\r\n    let yAxisdaySD = resultday.data.seriesSTDDay;\r\n    let yAxisUCLdaySD = resultday.data.seriesUCL_STD;\r\n    let yAxisLCLdaySD = resultday.data.seriesLCL_STD;\r\n    let yAxisCLdaySD = resultday.data.seriesCL_STD;\r\n\r\n    var seriesMCSTDDay = [];\r\n    seriesMCSTDDay.push(\r\n      Object.assign({}, yAxisUCLdaySD),\r\n      Object.assign({}, yAxisLCLdaySD),\r\n      Object.assign({}, yAxisCLdaySD),\r\n      Object.assign({}, yAxisdaySD)\r\n    );\r\n\r\n    for (let i = 0; i < resultday.data.seriesMCSTDDay.length; i++) {\r\n      seriesMCSTDDay.push(Object.assign({}, resultday.data.seriesMCSTDDay[i]));\r\n    }\r\n\r\n    var datatableday = [];\r\n    //datatableday.push(resultday.data.resultAVGday);\r\n\r\n    for (let i = 0; i < resultday.data.listResultday.length; i++) {\r\n      datatableday.push(resultday.data.listResultday[i]);\r\n    }\r\n\r\n    this.setState({\r\n      titleday,\r\n      dataday: resultday.data.resultAVGday,\r\n      datatableday,\r\n\r\n      seriesMCday,\r\n      seriesMCSTDDay,\r\n      xAxisday,\r\n\r\n      isDisableDays: false,\r\n    });\r\n  };\r\n\r\n  getModel = async () => {\r\n    const array = await httpClient.get(server.MOTORDIMRTBMODEL_URL);\r\n    // console.log(array.data.result);\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Model,\r\n    }));\r\n    this.setState({ listModel: options });\r\n  };\r\n\r\n  getParameter = async () => {\r\n    const array = await httpClient.get(\r\n      server.MOTORDIMRTBPARAM_URL + \"/\" + this.state.model\r\n    );\r\n    // console.log(array.data.result);\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Parameter,\r\n    }));\r\n    this.setState({ listParameter: options });\r\n  };\r\n\r\n  getProductionline = async () => {\r\n    const array = await httpClient.get(\r\n      server.MOTORDIMRTBLINE_URL + \"/\" + this.state.model\r\n    );\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Line,\r\n    }));\r\n    this.setState({ listProductionline: options });\r\n  };\r\n\r\n  getMachine = async () => {\r\n    const array = await httpClient.get(\r\n      server.MOTORDIMRTBMACHINE_URL +\r\n        \"/\" +\r\n        this.state.productionline[0].label +\r\n        \"/\" +\r\n        this.state.model\r\n    );\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Machine_no,\r\n    }));\r\n    this.setState({ listMachine: options });\r\n  };\r\n\r\n  getRTB = async () => {\r\n    const array = await httpClient.get(server.MOTORDIMRTBAI_URL);\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Machine_no,\r\n      value: d.Machine_no,\r\n    }));\r\n    this.setState({ listRTB: options });\r\n  };\r\n\r\n  handleChange = async (event) => {\r\n    const Newevent = Object.keys(event).map((key) => event[key].label);\r\n    const json_string = JSON.stringify(Newevent);\r\n    this.setState({ RTB: json_string });\r\n    this.setState({ optionSelected: event });\r\n    console.log(Newevent);\r\n    console.log(json_string);\r\n    console.log(this.state.RTB);\r\n    // console.log(this.state.optionSelected);\r\n  };\r\n\r\n  renderTableRow = () => {\r\n    var tablerow = [];\r\n    for (let i = 0; i < this.state.datatable.length; i++) {\r\n      tablerow.push(\r\n        this.state.datatable[i].map((item) => (\r\n          <tr>\r\n            <td>{item.Fixture}</td>\r\n            <td>{item[\"Time\"]}</td>\r\n            <td>{item[\"%Yield\"]}</td>\r\n            <td>{item[\"AVG\"]}</td>\r\n            <td>{item[\"STD\"]}</td>\r\n            <td>{item[\"CPK\"]}</td>\r\n            <td>{item[\"Cycle_time (sec)\"]}</td>\r\n            <td>{item[\"Down time (min)\"]}</td>\r\n          </tr>\r\n        ))\r\n      );\r\n    }\r\n    return tablerow;\r\n  };\r\n\r\n  renderTableRowday = () => {\r\n    var tablerowday = [];\r\n    for (let i = 0; i < this.state.datatableday.length; i++) {\r\n      tablerowday.push(\r\n        this.state.datatableday[i].map((item) => (\r\n          <tr>\r\n            <td>{item.Fixture}</td>\r\n            <td>{item[\"Date\"]}</td>\r\n            <td>{item[\"%Yield\"]}</td>\r\n            <td>{item[\"AVG\"]}</td>\r\n            <td>{item[\"STD\"]}</td>\r\n            <td>{item[\"CPK\"]}</td>\r\n            <td>{item[\"Cycle_time (sec)\"]}</td>\r\n            <td>{item[\"Down time (min)\"]}</td>\r\n          </tr>\r\n        ))\r\n      );\r\n    }\r\n    return tablerowday;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.seriesMC);\r\n    console.log(this.state.datatable);\r\n    console.log(this.state.listModel);\r\n    console.log(this.state.listMachine);\r\n    console.log(this.state.listRTB);\r\n\r\n    return (\r\n      <div class=\"content-wrapper\">\r\n        <div className=\"content\" style={{ paddingTop: 50 }}>\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-9\">\r\n                  <h1>SPC Chart Dynamic Parallelism (Single Plate RTB)</h1>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a href=\"/Home\">Home</a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">\r\n                      Dynamic Parallelism\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n          <div class=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card card-primary card-outline\">\r\n                  <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">\r\n                      <label>Select Parameter</label>\r\n                    </h3>\r\n                  </div>\r\n\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      {/* //Select Critiria \"Model\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Model</label>\r\n                          <Select\r\n                            options={this.state.listModel}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ model: e.label });\r\n                              await this.setState({\r\n                                seriesMC: [],\r\n                                seriesMCSTD: [],\r\n                                seriesMCday: [],\r\n                                seriesMCSTDDay: [],\r\n                              });\r\n                              await this.getParameter();\r\n                              await this.getProductionline();\r\n                              await this.setState({\r\n                                productionline: [\r\n                                  { label: \"Select Production Line\" },\r\n                                ],\r\n                              });\r\n                              await this.setState({\r\n                                parameter: [{ label: \"Select Parameter\" }],\r\n                              });\r\n                              await this.setState({\r\n                                selectMCname: [\r\n                                  { label: \"Selected Tester No.\" },\r\n                                ],\r\n                              });\r\n                              await this.setState({\r\n                                optionSelected: \"Select Ass'y Fixture\",\r\n                              });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Model\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Production line\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Production line</label>\r\n                          <Select\r\n                            options={this.state.listProductionline}\r\n                            value={this.state.productionline[0]}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ productionline: [] });\r\n                              this.state.productionline.push({\r\n                                label: e.label,\r\n                              });\r\n                              await this.setState({\r\n                                seriesMC: [],\r\n                                seriesMCSTD: [],\r\n                                seriesMCday: [],\r\n                                seriesMCSTDDay: [],\r\n                              });\r\n                              await this.getMachine();\r\n                              await this.setState({\r\n                                selectMCname: [\r\n                                  { label: \"Selected Tester No.\" },\r\n                                ],\r\n                              });\r\n                              await this.setState({\r\n                                optionSelected: \"Select Ass'y Fixture\",\r\n                              });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Production Line\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Parameter\" */}\r\n                      <div className=\"col-md-2\">\r\n                        <div className=\"form-group\">\r\n                          <label>Parameter</label>\r\n                          <Select\r\n                            options={this.state.listParameter}\r\n                            value={this.state.parameter[0]}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ parameter: [] });\r\n                              this.state.parameter.push({ label: e.label });\r\n                              await this.setState({\r\n                                seriesMC: [],\r\n                                seriesMCSTD: [],\r\n                                seriesMCday: [],\r\n                                seriesMCSTDDay: [],\r\n                              });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Parameter\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Machine No.\" */}\r\n                      <div className=\"col-md-2\">\r\n                        <div className=\"form-group\">\r\n                          <label>Tester No.</label>\r\n                          <Select\r\n                            options={this.state.listMachine}\r\n                            value={this.state.selectMCname[0]}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ selectMCname: [] });\r\n                              this.state.selectMCname.push({ label: e.label });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Tester No.\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-2\">\r\n                        <div className=\"form-group\">\r\n                          <label>Ass'y Fixture</label>\r\n                          <Select\r\n                            isMulti\r\n                            options={this.state.listRTB}\r\n                            onChange={this.handleChange.bind(this)}\r\n                            displayValue=\"label\"\r\n                            selectionLimit=\"2\"\r\n                            allowSelectAll={true}\r\n                            closeMenuOnSelect={false}\r\n                            hideSelectedOptions={true}\r\n                            value={this.state.optionSelected}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Ass'y Fixture\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Start Date */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            By Hourly Select Date &nbsp;\r\n                            <i\r\n                              class=\"fas fa-question-circle\"\r\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\r\n                              onClick={() => {\r\n                                Swal.fire({\r\n                                  icon: \"info\",\r\n                                  title: \"Hourly Data\",\r\n                                  text:\r\n                                    \"Hourly data over the course of the selected day\",\r\n                                });\r\n                              }}\r\n                            ></i>\r\n                          </label>\r\n                          <input\r\n                            value={this.state.selectDate}\r\n                            onChange={(e) => {\r\n                              this.setState({ selectDate: e.target.value });\r\n                            }}\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select Start Date\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Submit button */}\r\n                      <div className=\"col-md-1\">\r\n                        <button\r\n                          disabled={this.state.isDisable}\r\n                          onClick={(e) => {\r\n                            this.setState({ isDisable: true });\r\n                            this.doGetData();\r\n                            Swal.fire({\r\n                              icon: \"info\",\r\n                              title: \"Loading Data\",\r\n                              timer: 60000,\r\n                              allowOutsideClick: false,\r\n                              didOpen: async () => {\r\n                                Swal.showLoading();\r\n                                await this.doGetData();\r\n                                console.log(this.state.seriesMC[5].data);\r\n                                Swal.close();\r\n                              },\r\n                            }).then(() => {\r\n                              if (this.state.seriesMC.length > 0) {\r\n                                if (this.state.seriesMC[5].data.length > 0) {\r\n                                  Swal.fire({\r\n                                    icon: \"success\",\r\n                                    title: \"Success\",\r\n                                    text: \"Data has been loaded successfully\",\r\n                                  });\r\n                                } else if (\r\n                                  this.state.seriesMC[5].data.length == 0\r\n                                ) {\r\n                                  Swal.fire({\r\n                                    icon: \"error\",\r\n                                    title: \"No production data\",\r\n                                    text: \"Please select other date\",\r\n                                  });\r\n                                }\r\n                              } else {\r\n                                Swal.fire({\r\n                                  icon: \"error\",\r\n                                  title:\r\n                                    \"Data loading has encountered some error, please try again\",\r\n                                });\r\n                              }\r\n                            });\r\n                          }}\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          style={{ marginTop: 30 }}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-md-8\">\r\n                        <CSVLink data={this.state.Raw_Dat}>\r\n                          <button type=\"button\" className=\"btn btn-primary\" style={{ marginTop: 30 }}>\r\n                            Download\r\n                          </button>\r\n                        </CSVLink>\r\n                      </div>\r\n                      {/* //Select Start Date */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            By Daily Select From &nbsp;\r\n                            <a\r\n                              class=\"fas fa-question-circle\"\r\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\r\n                              onClick={() => {\r\n                                Swal.fire({\r\n                                  icon: \"info\",\r\n                                  title: \"Day-to-Day Data\",\r\n                                  text:\r\n                                    \"Day-to-Day data over the course of the selected date\",\r\n                                });\r\n                              }}\r\n                            ></a>\r\n                          </label>\r\n                          <input\r\n                            value={this.state.startDate}\r\n                            onChange={(e) => {\r\n                              this.setState({ startDate: e.target.value });\r\n                            }}\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select Start Date\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Finish Date */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>To</label>\r\n                          <input\r\n                            value={this.state.finishDate}\r\n                            onChange={(e) => {\r\n                              this.setState({ finishDate: e.target.value });\r\n                            }}\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select Finish Date\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Submit button */}\r\n                      <div className=\"col-md-1\">\r\n                        <button\r\n                          disabled={this.state.isDisableDays}\r\n                          onClick={(e) => {\r\n                            this.setState({ isDisableDays: true });\r\n                            this.doGetDataDay();\r\n                            Swal.fire({\r\n                              icon: \"info\",\r\n                              title: \"Loading Data\",\r\n                              timer: 60000,\r\n                              allowOutsideClick: false,\r\n                              didOpen: async () => {\r\n                                Swal.showLoading();\r\n                                await this.doGetDataDay();\r\n                                Swal.close();\r\n                              },\r\n                            }).then(() => {\r\n                              if (this.state.seriesMCday.length > 0) {\r\n                                if (this.state.seriesMCday[5].data.length > 0) {\r\n                                  Swal.fire({\r\n                                    icon: \"success\",\r\n                                    title: \"Success\",\r\n                                    text: \"Data has been loaded successfully\",\r\n                                  });\r\n                                } else if (\r\n                                  this.state.seriesMCday[5].data.length == 0\r\n                                ) {\r\n                                  Swal.fire({\r\n                                    icon: \"error\",\r\n                                    title: \"No production data\",\r\n                                    text: \"Please select other date\",\r\n                                  });\r\n                                }\r\n                              } else {\r\n                                Swal.fire({\r\n                                  icon: \"error\",\r\n                                  title:\r\n                                    \"Data loading has encountered some error, please try again\",\r\n                                });\r\n                              }\r\n                            });\r\n                          }}\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          style={{ marginTop: 30 }}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Real-time data per hour */}\r\n        <div className=\"content\" style={{ paddingTop: 20 }}>\r\n          <div className=\"content-header\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row mb-2\">\r\n                <div class=\"col-sm-\">\r\n                  <h1 className=\"brand-text font-weight-light\">\r\n                    Hourly SPC Chart on {this.state.selectDate}\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Chart per hour*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Xbar Chart</label>\r\n                      </h3>\r\n                    </div>\r\n\r\n                    \r\n\r\n                    {/* Insert Xbar Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\">\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxis,\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.title,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                },\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n\r\n                              colors: [\r\n                                \"#C62828\",\r\n                                \"#C62828\",\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMC}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Standard Deviation Chart</label>\r\n                      </h3>\r\n                    </div>\r\n                    {/* Insert R Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\">\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxis,\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.title,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                },\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n                              colors: [\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMCSTD}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Table per hour*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"card card-primary\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    {/* /.card-header */}\r\n                    <div\r\n                      className=\"card-body table-responsive p-0\"\r\n                      style={{ height: 500 }}\r\n                    >\r\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th width=\"150\">Fixture</th>\r\n                            <th width=\"175\">Time</th>\r\n                            <th width=\"175\">%Yield</th>\r\n                            <th width=\"175\">Average</th>\r\n                            <th width=\"175\">STD</th>\r\n                            <th width=\"175\">Cpk</th>\r\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\r\n                            <th width=\"175\">Down time (min)</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>{this.renderTableRow()}</tbody>\r\n                      </table>\r\n                    </div>\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                  {/* /.card */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Real-time data per day */}\r\n        <div className=\"content\" style={{ paddingTop: 20 }}>\r\n          <div className=\"content-header\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row mb-2\">\r\n                <div class=\"col-sm-\">\r\n                  <h1 className=\"brand-text font-weight-light\">\r\n                    Daily SPC Chart from {this.state.startDate} to{\" \"}\r\n                    {this.state.finishDate}\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Chart per day*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Xbar Chart</label>\r\n                      </h3>\r\n                    </div>\r\n                    {/* Insert Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\" style={{}}>\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxisday,\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.titleday,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                  fontFamily: undefined,\r\n                                  color: \"#263238\",\r\n                                },\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n\r\n                              colors: [\r\n                                \"#C62828\",\r\n                                \"#C62828\",\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMCday}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                  <div className=\"card card-primary card-outline\">\r\n                    {/* Chart Title */}\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">\r\n                        <i className=\"far fa-chart-bar\" />\r\n                        <label>Standard Deviation Chart</label>\r\n                      </h3>\r\n                    </div>\r\n                    {/* Insert R Chart */}\r\n                    <div className=\"card-body\" style={{ height: 415 }}>\r\n                      <div className=\"chart\">\r\n                        <div id=\"areaChart\">\r\n                          <Chart\r\n                            options={{\r\n                              chart: {\r\n                                id: \"basic-bar\",\r\n                              },\r\n                              xaxis: {\r\n                                categories: this.state.xAxisday,\r\n                              },\r\n\r\n                              title: {\r\n                                text: this.state.titleday,\r\n                                align: \"bottom\",\r\n\r\n                                style: {\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"bold\",\r\n                                  fontFamily: undefined,\r\n                                  color: \"#263238\",\r\n                                },\r\n                              },\r\n                              legend: {\r\n                                showForSingleSeries: false,\r\n                                showForNullSeries: false,\r\n                                showForZeroSeries: false,\r\n                                position: \"right\",\r\n                              },\r\n                              markers: {\r\n                                size: [0, 0, 0, 5, 5, 5, 6],\r\n                              },\r\n                              stroke: {\r\n                                width: [2, 2, 2, 4, 4, 4, 2],\r\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\r\n                              },\r\n                              colors: [\r\n                                \"#FF5722\",\r\n                                \"#FF5722\",\r\n                                \"#78909C\",\r\n                                \"#FF8A65\",\r\n                                \"#4DD0E1\",\r\n                                \"#9CCC65\",\r\n                                \"#1976D2\",\r\n                              ],\r\n                            }}\r\n                            series={this.state.seriesMCSTDDay}\r\n                            type=\"line\"\r\n                            height=\"350\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Insert Table per day*/}\r\n          <div class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div className=\"card card-primary\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    {/* /.card-header */}\r\n                    <div\r\n                      className=\"card-body table-responsive p-0\"\r\n                      style={{ height: 500 }}\r\n                    >\r\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th width=\"150\">Fixture</th>\r\n                            <th width=\"175\">Date</th>\r\n                            <th width=\"175\">%Yield</th>\r\n                            <th width=\"175\">Average</th>\r\n                            <th width=\"175\">STD</th>\r\n                            <th width=\"175\">Cpk</th>\r\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\r\n                            <th width=\"175\">Down time (min)</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>{this.renderTableRowday()}</tbody>\r\n                      </table>\r\n                    </div>\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                  {/* /.card */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MOTORDIM;\r\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nclass MOTOREWMS extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //data average per hour\n      title: [],\n      data: [],\n      seriesMC: [],\n      seriesMCSTD: [],\n\n      xAxis: [],\n      yAxis: [],\n      yAxisUSL: [],\n      yAxisLSL: [],\n      yAxisUCL: [],\n      yAxisLCL: [],\n      yAxisCL: [],\n\n      //raw data per hour\n      Raw_Dat: [],\n      Raw_Dat1:[],\n      //standard deviation per hour\n      yAxisUCLSD: [],\n      yAxisLCLSD: [],\n      yAxisCLSD: [],\n      yAxisSD: [],\n\n      // Table per hour\n      datatable: [],\n      tablerow: [],\n\n      //data average per day\n      titleday: [],\n      dataday: [],\n      seriesMCday: [],\n      seriesMCSTDDay: [],\n\n      xAxisday: [],\n      yAxisday: [],\n      yAxisUSLday: [],\n      yAxisLSLday: [],\n      yAxisUCLday: [],\n      yAxisLCLday: [],\n      yAxisCLday: [],\n\n      //standard deviation per hour\n      yAxisdaySD: [],\n      yAxisUCLdaySD: [],\n      yAxisCLdaySD: [],\n      yAxisLCLdaySD: [],\n\n      // Table per hour\n      datatableday: [],\n      tablerowday: [],\n\n      // criteria\n      model: [],\n      productionline: [],\n      parameter: [],\n      selectMCname: [],\n\n      selectDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listParameter: [],\n      listProductionline: [],\n      listMachine: [],\n\n      optionSelected: null,\n      isDisable: false,\n      isDisableDays: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getParameter();\n    await this.getProductionline();\n    await this.getMachine();\n  };\n\n  doGetData = async () => {\n    let result = await httpClient.get(\n      server.MOTOREWMS_URL +\n        \"/\" +\n        this.state.selectDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.selectMCname\n    );\n\n    let title = result.data.seriesY.title;\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultAVG.length; index++) {\n      const item = result.data.resultAVG[index];\n      await xAxis.push(item.Time);\n    }\n\n    //Raw_Data\n    let rawData = result.data.listRawData\n    console.log(rawData)\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i])\n    }\n    this.setState({Raw_Dat: rawData[0]})\n    console.log(this.state.Raw_Dat)\n\n    //AVG\n    let yAxis = result.data.seriesY;\n    let yAxisUSL = result.data.seriesUSL;\n    let yAxisLSL = result.data.seriesLSL;\n    let yAxisCL = result.data.seriesCL;\n    let yAxisUCL = result.data.seriesUCL;\n    let yAxisLCL = result.data.seriesLCL;\n\n    var seriesMC = [];\n    seriesMC.push(\n      Object.assign({}, yAxisUSL),\n      Object.assign({}, yAxisLSL),\n      Object.assign({}, yAxisUCL),\n      Object.assign({}, yAxisLCL),\n      Object.assign({}, yAxisCL),\n      Object.assign({}, yAxis)\n    );\n\n    for (let i = 0; i < result.data.seriesMC.length; i++) {\n      seriesMC.push(Object.assign({}, result.data.seriesMC[i]));\n    }\n\n    //STD\n    let yAxisSD = result.data.seriesSTD;\n    let yAxisLCLSD = result.data.seriesLCL_STD;\n    let yAxisUCLSD = result.data.seriesUCL_STD;\n    let yAxisCLSD = result.data.seriesCL_STD;\n\n    var seriesMCSTD = [];\n    seriesMCSTD.push(\n      Object.assign({}, yAxisUCLSD),\n      Object.assign({}, yAxisLCLSD),\n      Object.assign({}, yAxisCLSD),\n      Object.assign({}, yAxisSD)\n    );\n\n    for (let i = 0; i < result.data.seriesMCSTD.length; i++) {\n      seriesMCSTD.push(Object.assign({}, result.data.seriesMCSTD[i]));\n    }\n\n    var datatable = [];\n    //datatable.push(result.data.resultAVG);\n\n    for (let i = 0; i < result.data.listResult.length; i++) {\n      datatable.push(result.data.listResult[i]);\n    }\n\n    this.setState({\n      title,\n      data: result.data.resultAVG,\n      datatable,\n\n      seriesMC,\n      seriesMCSTD,\n      xAxis,\n\n      isDisable: false,\n    });\n  };\n\n  // doGetDataperday\n  doGetDataDay = async () => {\n    let resultday = await httpClient.get(\n      server.MOTOREWMSDAY_URL +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.selectMCname\n    );\n\n    let titleday = resultday.data.seriesYday.titleday;\n    let xAxisday = [];\n\n   //Raw_Data\n   let rawData = resultday.data.listRawData\n   console.log(rawData)\n   for (let i = 1; i < rawData.length; i++) {\n     rawData[0].push(...rawData[i])\n   }\n   this.setState({Raw_Dat1: rawData[0]})\n   console.log(this.state.Raw_Dat1)\n\n    for (let index = 0; index < resultday.data.resultAVGday.length; index++) {\n      const item = resultday.data.resultAVGday[index];\n      await xAxisday.push(item.Date);\n    }\n\n    let yAxisday = resultday.data.seriesYday;\n    let yAxisUSLday = resultday.data.seriesUSL;\n    let yAxisLSLday = resultday.data.seriesLSL;\n    let yAxisUCLday = resultday.data.seriesUCL;\n    let yAxisLCLday = resultday.data.seriesLCL;\n    let yAxisCLday = resultday.data.seriesCL;\n\n    var seriesMCday = [];\n    seriesMCday.push(\n      Object.assign({}, yAxisLSLday),\n      Object.assign({}, yAxisUSLday),\n      Object.assign({}, yAxisUCLday),\n      Object.assign({}, yAxisLCLday),\n      Object.assign({}, yAxisCLday),\n      Object.assign({}, yAxisday)\n    );\n\n    for (let i = 0; i < resultday.data.seriesMCday.length; i++) {\n      seriesMCday.push(Object.assign({}, resultday.data.seriesMCday[i]));\n    }\n\n    //STD\n    let yAxisdaySD = resultday.data.seriesSTDDay;\n    let yAxisUCLdaySD = resultday.data.seriesUCL_STD;\n    let yAxisLCLdaySD = resultday.data.seriesLCL_STD;\n    let yAxisCLdaySD = resultday.data.seriesCL_STD;\n\n    var seriesMCSTDDay = [];\n    seriesMCSTDDay.push(\n      Object.assign({}, yAxisLCLdaySD),\n      Object.assign({}, yAxisUCLdaySD),\n      Object.assign({}, yAxisCLdaySD),\n      Object.assign({}, yAxisdaySD)\n    );\n\n    for (let i = 0; i < resultday.data.seriesMCSTDDay.length; i++) {\n      seriesMCSTDDay.push(Object.assign({}, resultday.data.seriesMCSTDDay[i]));\n    }\n\n    var datatableday = [];\n\n    for (let i = 0; i < resultday.data.listResultday.length; i++) {\n      datatableday.push(resultday.data.listResultday[i]);\n    }\n\n    this.setState({\n      titleday,\n      dataday: resultday.data.resultAVGday,\n      datatableday,\n\n      seriesMCday,\n      seriesMCSTDDay,\n      xAxisday,\n\n      isDisableDays: false,\n    });\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MOTOREWMSMODEL_URL);\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getParameter = async () => {\n    const array = await httpClient.get(\n      server.MOTOREWMSPARAM_URL + \"/\" + this.state.model\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listParameter: options });\n  };\n\n  getProductionline = async () => {\n    const array = await httpClient.get(\n      server.MOTOREWMSLINE_URL + \"/\" + this.state.model\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listProductionline: options });\n  };\n\n  getMachine = async () => {\n    const array = await httpClient.get(\n      server.MOTOREWMSMACHINE_URL +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.model\n    );\n\n    const options = array.data.result.map((d) => ({\n      label: d.Machine_no,\n      value: d.Machine_no,\n    }));\n    this.setState({ listMachine: options });\n  };\n\n  handleChange = async (event) => {\n    const Newevent = Object.keys(event).map((key) => event[key].label);\n    const json_string = JSON.stringify(Newevent);\n    this.setState({ selectMCname: json_string });\n    this.setState({\n      optionSelected: event,\n    });\n  };\n\n  renderTableRow = () => {\n    var tablerow = [];\n    for (let i = 0; i < this.state.datatable.length; i++) {\n      tablerow.push(\n        this.state.datatable[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerow;\n  };\n\n  renderTableRowday = () => {\n    var tablerowday = [];\n    for (let i = 0; i < this.state.datatableday.length; i++) {\n      tablerowday.push(\n        this.state.datatableday[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerowday;\n  };\n\n  render() {\n    console.log(this.state.seriesMC);\n    console.log(this.state.datatable);\n\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>EWMS data SPC chart</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">EWMS data SPC chart</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Select Parameter</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ model: e.label });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                              });\n                              await this.getParameter();\n                              await this.getProductionline();\n                              await this.setState({\n                                productionline: [\n                                  { label: \"Select Production Line\" },\n                                ],\n                              });\n                              await this.setState({\n                                parameter: [{ label: \"Select Parameter\" }],\n                              });\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listProductionline}\n                            value={this.state.productionline[0]}\n                            onChange={async (e) => {\n                              await this.setState({ productionline: [] });\n                              this.state.productionline.push({\n                                label: e.label,\n                              });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                              });\n                              await this.getMachine();\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production Line\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Parameter\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Parameter</label>\n                          <Select\n                            options={this.state.listParameter}\n                            value={this.state.parameter[0]}\n                            onChange={async (e) => {\n                              await this.setState({ parameter: [] });\n                              this.state.parameter.push({ label: e.label });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                              });\n                            }}\n                            \n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Machine No.\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Tester No.</label>\n                          <Select\n                            isMulti\n                            options={this.state.listMachine}\n                            onChange={this.handleChange.bind(this)}\n                            displayValue=\"label\"\n                            selectionLimit=\"4\"\n                            allowSelectAll={true}\n                            closeMenuOnSelect={false}\n                            hideSelectedOptions={true}\n                            value={this.state.optionSelected}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Tester No.\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Hourly Select Date &nbsp;\n                            <i\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Hourly Data\",\n                                  text:\n                                    \"Hourly data over the course of the selected day\",\n                                });\n                              }}\n                            ></i>\n                          </label>\n                          <input\n                            value={this.state.selectDate}\n                            onChange={(e) => {\n                              this.setState({ selectDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={(e) => {\n                            this.setState({ isDisable: true });\n                            console.log(this.state.selectDate)\n                            console.log(this.state.model)\n                            console.log(this.state.parameter[0].label)\n                            console.log(this.state.productionline[0].label)\n                            console.log(this.state.selectMCname)\n                            this.doGetData();\n                            this.setState({\n                            showHourly: true,\n                            showDaily: false,\n                            })\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetData();\n                                // console.log(this.state.datatable[0].length);\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatable.length > 0) {\n                                for (\n                                  let i = 0;\n                                  i < this.state.datatable.length;\n                                  i++\n                                ) {\n                                  for (\n                                    let j = 0;\n                                    j < this.state.datatable[i].length;\n                                    j++\n                                  ) {\n                                    if (\n                                      this.state.datatable[i][j].AVG !== null\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text:\n                                          \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n\n                                    if (i === this.state.datatable.length - 1) {\n                                      if (\n                                        j ===\n                                        this.state.datatable[i].length - 1\n                                      ) {\n                                        if (\n                                          this.state.datatable[i][j].AVG == null\n                                        ) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          });\n                                        } else {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title:\n                                              \"Data loading has encountered some error, please try again\",\n                                          });\n                                        }\n                                        break;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n\n                      <div className=\"col-md-8\">\n                        <CSVLink data={this.state.Raw_Dat}>\n                          <button type=\"button\" className=\"btn btn-primary\" style={{ marginTop: 30 }}>\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Daily Select From &nbsp;\n                            <a\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Day-to-Day Data\",\n                                  text:\n                                    \"Day-to-Day data over the course of the selected date\",\n                                });\n                              }}\n                            ></a>\n                          </label>\n                          <input\n                            value={this.state.startDate}\n                            onChange={(e) => {\n                              this.setState({ startDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Finish Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>To</label>\n                          <input\n                            value={this.state.finishDate}\n                            onChange={(e) => {\n                              this.setState({ finishDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Finish Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <button\n                          disabled={this.state.isDisableDays}\n                          onClick={(e) => {\n                            this.setState({ isDisableDays: true });\n                            this.doGetDataDay();\n                            this.setState({ showHourly:false,showDaily: true });\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetDataDay();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatableday.length > 0) {\n                                for (\n                                  let i = 0;\n                                  i < this.state.datatableday.length;\n                                  i++\n                                ) {\n                                  for (\n                                    let j = 0;\n                                    j < this.state.datatableday[i].length;\n                                    j++\n                                  ) {\n                                    if (\n                                      this.state.datatableday[i][j].AVG !== null\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text:\n                                          \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n\n                                    if (\n                                      i ===\n                                      this.state.datatableday.length - 1\n                                    ) {\n                                      if (\n                                        j ===\n                                        this.state.datatableday[i].length - 1\n                                      ) {\n                                        if (\n                                          this.state.datatableday[i][j].AVG ==\n                                          null\n                                        ) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          }).then(() => {\n                                            // รีเฟรชหน้าใหม่\n                                            window.location.reload();\n                                          });\n                                        } else {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title:\n                                              \"Data loading has encountered some error, please try again\",\n                                            }).then(() => {\n                                              // รีเฟรชหน้าใหม่\n                                              window.location.reload();\n                                          });\n                                        }\n                                        break;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                        {/* <button\n                          disabled={this.state.isDisableDays}\n                          onClick={async (e) => {\n                            this.setState({ isDisableDays: true });\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              allowOutsideClick: false,\n                              didOpen: () => {\n                                Swal.showLoading()\n                                }\n                            });\n                            await this.doGetDataDay();\n                            Swal.fire({\n                              icon: \"success\",\n                              title: \"Success\",\n                              type: \"success\",\n                              text: \"Data has been loaded successfully\",\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button> */}\n                      </div>\n                      {/* <div className=\"col-md-8\">\n                        <CSVLink data={this.state.Raw_Dat}>\n                          <button type=\"button\" className=\"btn btn-primary\" style={{ marginTop: 30 }}>\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div> */}\n                      \n                      <div className=\"col-md-4\">\n                        <CSVLink data ={this.state.Raw_Dat1}>\n                          <button type=\"button\" className=\"btn btn-primary\" style={{marginTop:30}}>\n                            Download\n                          </button>\n                          </CSVLink>\n                        </div>\n                      <div>\n                      </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Real-time data per hour */}\n{this.state.showHourly&&(\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Hourly SPC Chart on {this.state.selectDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Chart per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n\n                    {/* Insert Xbar Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMC}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTD}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Table per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Time</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRow()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n)}\n        {/* Real-time data per day */}\n        {this.state.showDaily&&(\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Daily SPC Chart from {this.state.startDate} to{\" \"}\n                    {this.state.finishDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Chart per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\" style={{}}>\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCday}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTDDay}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Insert Table per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Time</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRowday()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default MOTOREWMS;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nclass MOTORHIPOT extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //data average per hour\n      title: [],\n      data: [],\n      seriesMC: [],\n      seriesMCSTD: [],\n\n      xAxis: [],\n      yAxis: [],\n      yAxisUSL: [],\n      yAxisLSL: [],\n      yAxisUCL: [],\n      yAxisLCL: [],\n      yAxisCL: [],\n\n      //raw data per hour\n      Raw_Dat: [],\n      Raw_Dat2: [],\n\n      //standard deviation per hour\n      yAxisUCLSD: [],\n      yAxisLCLSD: [],\n      yAxisCLSD: [],\n      yAxisSD: [],\n\n      // Table per hour\n      datatable: [],\n      tablerow: [],\n\n      //data average per day\n      titleday: [],\n      dataday: [],\n      seriesMCday: [],\n      seriesMCSTDDay: [],\n\n      xAxisday: [],\n      yAxisday: [],\n      yAxisUSLday: [],\n      yAxisLSLday: [],\n      yAxisUCLday: [],\n      yAxisLCLday: [],\n      yAxisCLday: [],\n\n      //standard deviation per hour\n      yAxisdaySD: [],\n      yAxisUCLdaySD: [],\n      yAxisCLdaySD: [],\n      yAxisLSLdaySD: [],\n\n      // Table per hour\n      datatableday: [],\n      tablerowday: [],\n\n      // criteria\n      model: [],\n      productionline: [],\n      parameter: [],\n      selectMCname: [],\n\n      selectDate: moment().format(\"yyyy-MM-DD\"),\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listParameter: [],\n      listProductionline: [],\n      listMachine: [],\n\n      optionSelected: null,\n      isDisable: false,\n      isDisableDays: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getParameter();\n    await this.getProductionline();\n    await this.getMachine();\n  };\n\n  doGetData = async () => {\n    let result = await httpClient.get(\n      server.MOTORHIPOT_URL +\n        \"/\" +\n        this.state.selectDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.selectMCname\n    );\n\n    let title = result.data.seriesY.title;\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultAVG.length; index++) {\n      const item = result.data.resultAVG[index];\n      await xAxis.push(item.Time);\n    }\n\n    let yAxis = result.data.seriesY;\n    let yAxisUSL = result.data.seriesUSL;\n    let yAxisLSL = result.data.seriesLSL;\n    let yAxisCL = result.data.seriesCL;\n    let yAxisUCL = result.data.seriesUCL;\n    let yAxisLCL = result.data.seriesLCL;\n\n    var seriesMC = [];\n    seriesMC.push(\n      Object.assign({}, yAxisUSL),\n      Object.assign({}, yAxisLSL),\n      Object.assign({}, yAxisUCL),\n      Object.assign({}, yAxisLCL),\n      Object.assign({}, yAxisCL),\n      Object.assign({}, yAxis)\n    );\n\n    for (let i = 0; i < result.data.seriesMC.length; i++) {\n      seriesMC.push(Object.assign({}, result.data.seriesMC[i]));\n    }\n\n    //Raw_Data\n    let rawData = result.data.listRawData\n    this.setState({Raw_Dat: rawData[0]});\n    console.log(this.state.Raw_Dat)\n\n    //STD\n    let yAxisSD = result.data.seriesSTD;\n    let yAxisLCLSD = result.data.seriesLCL_STD;\n    let yAxisUCLSD = result.data.seriesUCL_STD;\n    let yAxisCLSD = result.data.seriesCL_STD;\n\n    var seriesMCSTD = [];\n    seriesMCSTD.push(\n      Object.assign({}, yAxisUCLSD),\n      Object.assign({}, yAxisLCLSD),\n      Object.assign({}, yAxisCLSD),\n      Object.assign({}, yAxisSD)\n    );\n\n    for (let i = 0; i < result.data.seriesMCSTD.length; i++) {\n      seriesMCSTD.push(Object.assign({}, result.data.seriesMCSTD[i]));\n    }\n\n    var datatable = [];\n    //datatable.push(result.data.resultAVG);\n\n    for (let i = 0; i < result.data.listResult.length; i++) {\n      datatable.push(result.data.listResult[i]);\n    }\n\n    this.setState({\n      title,\n      data: result.data.resultAVG,\n      datatable,\n\n      seriesMC,\n      seriesMCSTD,\n      xAxis,\n\n      isDisable: false,\n    });\n  };\n\n  // doGetDataperday\n  doGetDataDay = async () => {\n    let resultday = await httpClient.get(\n      server.MOTORHIPOTDAY_URL +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.selectMCname\n    );\n\n    let titleday = resultday.data.seriesYday.titleday;\n    let xAxisday = [];\n\n    for (let index = 0; index < resultday.data.resultAVGday.length; index++) {\n      const item = resultday.data.resultAVGday[index];\n      await xAxisday.push(item.Date);\n    }\n        //Raw_Data\n        let rawData = resultday.data.listRawData\n        this.setState({Raw_Dat2: rawData[0]});\n        console.log(this.state.Raw_Dat2)\n\n    //AVG\n    let yAxisday = resultday.data.seriesYday;\n    let yAxisUSLday = resultday.data.seriesUSL;\n    let yAxisLSLday = resultday.data.seriesLSL;\n    let yAxisUCLday = resultday.data.seriesUCL;\n    let yAxisLCLday = resultday.data.seriesLCL;\n    let yAxisCLday = resultday.data.seriesCL;\n\n    var seriesMCday = [];\n    seriesMCday.push(\n      Object.assign({}, yAxisUSLday),\n      Object.assign({}, yAxisLSLday),\n      Object.assign({}, yAxisUCLday),\n      Object.assign({}, yAxisLCLday),\n      Object.assign({}, yAxisCLday),\n      Object.assign({}, yAxisday)\n    );\n\n    for (let i = 0; i < resultday.data.seriesMCday.length; i++) {\n      seriesMCday.push(Object.assign({}, resultday.data.seriesMCday[i]));\n    }\n\n    //STD\n    let yAxisdaySD = resultday.data.seriesSTDDay;\n    let yAxisUCLdaySD = resultday.data.seriesUCL_STD;\n    let yAxisLCLdaySD = resultday.data.seriesLCL_STD;\n    let yAxisCLdaySD = resultday.data.seriesCL_STD;\n\n    var seriesMCSTDDay = [];\n    seriesMCSTDDay.push(\n      Object.assign({}, yAxisUCLdaySD),\n      Object.assign({}, yAxisLCLdaySD),\n      Object.assign({}, yAxisCLdaySD),\n      Object.assign({}, yAxisdaySD)\n    );\n\n    for (let i = 0; i < resultday.data.seriesMCSTDDay.length; i++) {\n      seriesMCSTDDay.push(Object.assign({}, resultday.data.seriesMCSTDDay[i]));\n    }\n\n    var datatableday = [];\n    //datatableday.push(resultday.data.resultAVGday);\n\n    for (let i = 0; i < resultday.data.listResultday.length; i++) {\n      datatableday.push(resultday.data.listResultday[i]);\n    }\n\n    this.setState({\n      titleday,\n      dataday: resultday.data.resultAVGday,\n      datatableday,\n\n      seriesMCday,\n      seriesMCSTDDay,\n      xAxisday,\n      \n      isDisableDays: false,\n    });\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MOTORHIPOTMODEL_URL);\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getParameter = async () => {\n    const array = await httpClient.get(\n      server.MOTORHIPOTPARAM_URL + \"/\" + this.state.model\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listParameter: options });\n  };\n\n  getProductionline = async () => {\n    const array = await httpClient.get(\n      server.MOTORHIPOTLINE_URL + \"/\" + this.state.model\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listProductionline: options });\n  };\n\n  getMachine = async () => {\n    const array = await httpClient.get(\n      server.MOTORHIPOTMACHINE_URL + \"/\" + this.state.productionline[0].label + \"/\" + this.state.model\n    );\n\n    const options = array.data.result.map((d) => ({\n      label: d.Machine_no,\n      value: d.Machine_no,\n    }));\n    this.setState({ listMachine: options });\n  };\n\n  handleChange = async (event) => {\n    const Newevent = Object.keys(event).map((key) => event[key].label);\n    const json_string = JSON.stringify(Newevent);\n    this.setState({ selectMCname: json_string });\n    this.setState({\n      optionSelected: event,\n    });\n  };\n\n  renderTableRow = () => {\n    var tablerow = [];\n    for (let i = 0; i < this.state.datatable.length; i++) {\n      tablerow.push(\n        this.state.datatable[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerow;\n  };\n\n  renderTableRowday = () => {\n    var tablerowday = [];\n    for (let i = 0; i < this.state.datatableday.length; i++) {\n      tablerowday.push(\n        this.state.datatableday[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerowday;\n  };\n\n  render() {\n    console.log(this.state.seriesMC);\n    console.log(this.state.datatable);\n\n    // console.log(this.state.data);\n    // console.log(this.state.datatableday);\n    // console.log(this.state.dataday);\n\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Hi-pot data SPC chart</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Hi-pot data SPC chart</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Select Parameter</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ model: e.label });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                              });\n                              await this.getParameter();\n                              await this.getProductionline();\n                              await this.setState({\n                                productionline: [\n                                  { label: \"Select Production Line\" },\n                                ],\n                              });\n                              await this.setState({\n                                parameter: [{ label: \"Select Parameter\" }],\n                              });\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listProductionline}\n                            value={this.state.productionline[0]}\n                            onChange={async (e) => {\n                              await this.setState({ productionline: [] });            \n                              this.state.productionline.push({\n                                label: e.label,\n                              });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                              });\n                              await this.getMachine();\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production Line\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Parameter\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Parameter</label>\n                          <Select\n                            options={this.state.listParameter}\n                            value={this.state.parameter[0]}\n                            onChange={async (e) => {\n                              await this.setState({ parameter: [] });\n                              this.state.parameter.push({ label: e.label });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Machine No.\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Tester No.</label>\n                          <Select\n                            isMulti\n                            options={this.state.listMachine}\n                            onChange={this.handleChange.bind(this)}\n                            displayValue=\"label\"\n                            selectionLimit=\"4\"\n                            allowSelectAll={true}\n                            closeMenuOnSelect={false}\n                            hideSelectedOptions={true}\n                            value={this.state.optionSelected}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Tester No.\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Hourly Select Date &nbsp;\n                            <i\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Hourly Data\",\n                                  text:\n                                    \"Hourly data over the course of the selected day\",\n                                });\n                              }}\n                            ></i>\n                          </label>\n                          <input\n                            value={this.state.selectDate}\n                            onChange={(e) => {\n                              this.setState({ selectDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={(e) => {\n                            this.setState({ isDisable: true });\n                            this.doGetData();\n                            this.setState({\n                              showHourly: true, // แสดง Daily \n                              showDaily: false,   // ไม่แสดง Hourly\n                            });\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetData();\n                                // console.log(this.state.datatable[0].length);\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatable.length > 0) {\n                                for (\n                                  let i = 0;\n                                  i < this.state.datatable.length;\n                                  i++\n                                ) {\n                                  for (\n                                    let j = 0;\n                                    j < this.state.datatable[i].length;\n                                    j++\n                                  ) {\n                                    if (\n                                      this.state.datatable[i][j].AVG !== null\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text:\n                                          \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n\n                                    if (i === this.state.datatable.length - 1) {\n                                      if (\n                                        j ===\n                                        this.state.datatable[i].length - 1\n                                      ) {\n                                        if (\n                                          this.state.datatable[i][j].AVG == null\n                                        ) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          });\n                                        } else {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title:\n                                              \"Data loading has encountered some error, please try again\",\n                                          });\n                                        }\n                                        break;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                      <div className=\"col-md-8\">\n                        <CSVLink data={this.state.Raw_Dat}>\n                          <button type=\"button\" className=\"btn btn-primary\" style={{ marginTop: 30 }}>\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                      {/* //Select Start Date */}\n                    \n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Daily Select From &nbsp;\n                            <a\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Day-to-Day Data\",\n                                  text:\n                                    \"Day-to-Day data over the course of the selected date\",\n                                });\n                              }}\n                            ></a>\n                          </label>\n                          <input\n                            value={this.state.startDate}\n                            onChange={(e) => {\n                              this.setState({ startDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Finish Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>To</label>\n                          <input\n                            value={this.state.finishDate}\n                            onChange={(e) => {\n                              this.setState({ finishDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Finish Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisableDays}\n                          onClick={(e) => {\n                            this.setState({ isDisableDays: true });\n                            this.doGetDataDay();\n                            this.setState({\n                              showHourly: false, // ไม่แสดง Hourly\n                              showDaily: true // แสดง Daily\n                            });\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetDataDay();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatableday.length > 0) {\n                                for (\n                                  let i = 0;\n                                  i < this.state.datatableday.length;\n                                  i++\n                                ) {\n                                  for (\n                                    let j = 0;\n                                    j < this.state.datatableday[i].length;\n                                    j++\n                                  ) {\n                                    if (\n                                      this.state.datatableday[i][j].AVG !== null\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text:\n                                          \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n\n                                    if (\n                                      i ===\n                                      this.state.datatableday.length - 1\n                                    ) {\n                                      if (\n                                        j ===\n                                        this.state.datatableday[i].length - 1\n                                      ) {\n                                        if (\n                                          this.state.datatableday[i][j].AVG ==\n                                          null\n                                        ) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          }).then(() => {\n                                            // รีเฟรชหน้าใหม่\n                                            window.location.reload();\n                                          });\n                                        } else {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title:\n                                              \"Data loading has encountered some error, please try again\",\n                                            }).then(() => {\n                                              // รีเฟรชหน้าใหม่\n                                              window.location.reload();\n                                          });\n                                        }\n                                        break;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n\n                      <div className=\"col-md-1\">\n                        <CSVLink data={this.state.Raw_Dat2}>\n                          <button type=\"button\" className=\"btn btn-primary\" style={{ marginTop: 30 }}>\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Real-time data per hour */}\n        {this.state.showHourly&&(\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Hourly SPC Chart on {this.state.selectDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Chart per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n\n                    {/* Insert Xbar Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMC}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTD}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Table per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Time</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRow()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n)}\n        {/* Real-time data per day */}\n        {this.state.showDaily&&(\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Daily SPC Chart from {this.state.startDate} to{\" \"}\n                    {this.state.finishDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Chart per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\" style={{}}>\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCday}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTDDay}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Insert Table per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Time</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRowday()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default MOTORHIPOT;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nclass MOTORHE extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //data average per hour\n      title: [],\n      data: [],\n      seriesMC: [],\n      seriesMCSTD: [],\n\n      xAxis: [],\n      yAxis: [],\n      yAxisUSL: [],\n      yAxisLSL: [],\n      yAxisUCL: [],\n      yAxisLCL: [],\n      yAxisCL: [],\n\n      //raw data per hour\n      Raw_Dat: [],\n\n      //standard deviation per hour\n      yAxisUCLSD: [],\n      yAxisLCLSD: [],\n      yAxisSD: [],\n\n      // Table per hour\n      datatable: [],\n      tablerow: [],\n\n      //data average per day\n      titleday: [],\n      dataday: [],\n      seriesMCday: [],\n      seriesMCSTDDay: [],\n\n      xAxisday: [],\n      yAxisday: [],\n      yAxisUSLday: [],\n      yAxisLSLday: [],\n      yAxisUCLday: [],\n      yAxisLCLday: [],\n      yAxisCLday: [],\n\n      //standard deviation per hour\n      yAxisdaySD: [],\n      yAxisUCLdaySD: [],\n      yAxisLCLdaySD: [],\n\n      // Table per hour\n      datatableday: [],\n      tablerowday: [],\n\n      // criteria\n      model: [],\n      productionline: [],\n      parameter: [],\n      selectMCname: [],\n\n      selectDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      startDate: moment().add(\"days\", -7).format(\"yyyy-MM-DD\"),\n      finishDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listParameter: [],\n      listProductionline: [],\n      listMachine: [],\n\n      optionSelected: null,\n      isDisable: false,\n      isDisableDays: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getParameter();\n    await this.getProductionline();\n    await this.getMachine();\n  };\n\n  doGetData = async () => {\n    let result = await httpClient.get(\n      server.MOTORHE_URL +\n        \"/\" +\n        this.state.selectDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.selectMCname\n    );\n    console.log(result)\n      \n    let title = result.data.seriesY.title;\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultAVG.length; index++) {\n      const item = result.data.resultAVG[index];\n      await xAxis.push(item.Time);\n    }\n\n    let yAxis = result.data.seriesY;\n    let yAxisUSL = result.data.seriesUSL;\n    let yAxisLSL = result.data.seriesLSL;\n    let yAxisCL = result.data.seriesCL;\n    let yAxisUCL = result.data.seriesUCL;\n    let yAxisLCL = result.data.seriesLCL;\n\n    var seriesMC = [];\n    seriesMC.push(\n      Object.assign({}, yAxisUSL),\n      Object.assign({}, yAxisLSL),\n      Object.assign({}, yAxisUCL),\n      Object.assign({}, yAxisLCL),\n      Object.assign({}, yAxisCL),\n      Object.assign({}, yAxis)\n    );\n\n    for (let i = 0; i < result.data.seriesMC.length; i++) {\n      seriesMC.push(Object.assign({}, result.data.seriesMC[i]));\n    }\n\n    //Raw_Data\n    let rawData = result.data.listRawData\n    console.log(rawData)\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i])\n    }\n    this.setState({Raw_Dat: rawData[0]})\n    console.log(this.state.Raw_Dat)\n\n    //STD\n    let yAxisSD = result.data.seriesSTD;\n    let yAxisLCLSD = result.data.seriesLCL_STD;\n    let yAxisUCLSD = result.data.seriesUCL_STD;\n\n    var seriesMCSTD = [];\n    seriesMCSTD.push(\n      Object.assign({}, yAxisUCLSD),\n      Object.assign({}, yAxisLCLSD),\n      Object.assign({}, yAxisSD)\n    );\n\n    for (let i = 0; i < result.data.seriesMCSTD.length; i++) {\n      seriesMCSTD.push(Object.assign({}, result.data.seriesMCSTD[i]));\n    }\n\n    var datatable = [];\n    //datatable.push(result.data.resultAVG);\n\n    for (let i = 0; i < result.data.listResult.length; i++) {\n      datatable.push(result.data.listResult[i]);\n    }\n\n    this.setState({\n      title,\n      data: result.data.resultAVG,\n      datatable,\n\n      seriesMC,\n      seriesMCSTD,\n      xAxis,\n\n      isDisable: false,\n    });\n  };\n  // doGetDataperday\n  doGetDataDay = async () => {\n    let resultday = await httpClient.get(\n      server.MOTORHEDAY_URL +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.selectMCname\n    );\n\n    let titleday = resultday.data.seriesYday.titleday;\n    let xAxisday = [];\n\n    for (let index = 0; index < resultday.data.resultAVGday.length; index++) {\n      const item = resultday.data.resultAVGday[index];\n      await xAxisday.push(item.Date);\n    }\n\n    let yAxisday = resultday.data.seriesYday;\n    let yAxisUSLday = resultday.data.seriesUSL;\n    let yAxisLSLday = resultday.data.seriesLSL;\n    let yAxisUCLday = resultday.data.seriesUCL;\n    let yAxisLCLday = resultday.data.seriesLCL;\n    let yAxisCLday = resultday.data.seriesCL;\n\n    var seriesMCday = [];\n    seriesMCday.push(\n      Object.assign({}, yAxisUSLday),\n      Object.assign({}, yAxisLSLday),\n      Object.assign({}, yAxisUCLday),\n      Object.assign({}, yAxisLCLday),\n      Object.assign({}, yAxisCLday),\n      Object.assign({}, yAxisday)\n    );\n\n    for (let i = 0; i < resultday.data.seriesMCday.length; i++) {\n      seriesMCday.push(Object.assign({}, resultday.data.seriesMCday[i]));\n    }\n\n    //STD\n    let yAxisdaySD = resultday.data.seriesSTDDay;\n    let yAxisUCLdaySD = resultday.data.seriesUCL_STD;\n    let yAxisLCLdaySD = resultday.data.seriesLCL_STD;\n\n    var seriesMCSTDDay = [];\n    seriesMCSTDDay.push(\n      Object.assign({}, yAxisUCLdaySD),\n      Object.assign({}, yAxisLCLdaySD),\n      Object.assign({}, yAxisdaySD)\n    );\n\n    for (let i = 0; i < resultday.data.seriesMCSTDDay.length; i++) {\n      seriesMCSTDDay.push(Object.assign({}, resultday.data.seriesMCSTDDay[i]));\n    }\n\n    var datatableday = [];\n    //datatableday.push(resultday.data.resultAVGday);\n\n    for (let i = 0; i < resultday.data.listResultday.length; i++) {\n      datatableday.push(resultday.data.listResultday[i]);\n    }\n\n    this.setState({\n      titleday,\n      dataday: resultday.data.resultAVGday,\n      datatableday,\n\n      seriesMCday,\n      seriesMCSTDDay,\n      xAxisday,\n\n      isDisableDays: false,\n    });\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MOTORHEMODEL_URL);\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getParameter = async () => {\n    const array = await httpClient.get(\n      server.MOTORHEPARAM_URL + \"/\" + this.state.model\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listParameter: options });\n  };\n\n  getProductionline = async () => {\n    const array = await httpClient.get(\n      server.MOTORHELINE_URL + \"/\" + this.state.model\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listProductionline: options });\n  };\n\n  getMachine = async () => {\n    const array = await httpClient.get(\n      server.MOTORHEMACHINE_URL + \"/\" + this.state.productionline[0].label + \"/\" + this.state.model\n    );\n\n    const options = array.data.result.map((d) => ({\n      label: d.Machine_no,\n      value: d.Machine_no,\n    }));\n    this.setState({ listMachine: options });\n  };\n\n  handleChange = async (event) => {\n    const Newevent = Object.keys(event).map((key) => event[key].label);\n    const json_string = JSON.stringify(Newevent);\n    this.setState({ selectMCname: json_string });\n    this.setState({\n      optionSelected: event,\n    });\n  };\n\n  renderTableRow = () => {\n    var tablerow = [];\n    for (let i = 0; i < this.state.datatable.length; i++) {\n      tablerow.push(\n        this.state.datatable[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerow;\n  };\n\n  renderTableRowday = () => {\n    var tablerowday = [];\n    for (let i = 0; i < this.state.datatableday.length; i++) {\n      tablerowday.push(\n        this.state.datatableday[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerowday;\n  };\n\n  render() {\n    console.log(this.state.seriesMC);\n    console.log(this.state.datatable);\n\n    // console.log(this.state.data);\n    // console.log(this.state.datatableday);\n    // console.log(this.state.dataday);\n\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>SPC Chart He Leak</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">He Leak</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Select Parameter</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ model: e.label });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                              });\n                              await this.getParameter();\n                              await this.getProductionline();\n                              await this.setState({\n                                productionline: [\n                                  { label: \"Select Production Line\" },\n                                ],\n                              });\n                              await this.setState({\n                                parameter: [{ label: \"Select Parameter\" }],\n                              });\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listProductionline}\n                            value={this.state.productionline[0]}\n                            onChange={async (e) => {\n                              await this.setState({ productionline: [] });\n                              this.state.productionline.push({\n                                label: e.label,\n                              });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                              });\n                              await this.getMachine();\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production Line\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Parameter\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Parameter</label>\n                          <Select\n                            options={this.state.listParameter}\n                            value={this.state.parameter[0]}\n                            onChange={async (e) => {\n                              await this.setState({ parameter: [] });\n                              this.state.parameter.push({ label: e.label });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Machine No.\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Tester No.</label>\n                          <Select\n                            isMulti\n                            options={this.state.listMachine}\n                            onChange={this.handleChange.bind(this)}\n                            displayValue=\"label\"\n                            selectionLimit=\"4\"\n                            allowSelectAll={true}\n                            closeMenuOnSelect={false}\n                            hideSelectedOptions={true}\n                            value={this.state.optionSelected}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Tester No.\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Hourly Select Date &nbsp;\n                            <i\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Hourly Data\",\n                                  text:\n                                    \"Hourly data over the course of the selected day\",\n                                });\n                              }}\n                            ></i>\n                          </label>\n                          <input\n                            value={this.state.selectDate}\n                            onChange={(e) => {\n                              this.setState({ selectDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={(e) => {\n                            this.setState({ isDisable: true });\n                            this.doGetData();\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetData();\n                                // console.log(this.state.datatable[0].length);\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatable.length > 0) {\n                                for (\n                                  let i = 0;\n                                  i < this.state.datatable.length;\n                                  i++\n                                ) {\n                                  for (\n                                    let j = 0;\n                                    j < this.state.datatable[i].length;\n                                    j++\n                                  ) {\n                                    if (\n                                      this.state.datatable[i][j].AVG !== null\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text:\n                                          \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n\n                                    if (i === this.state.datatable.length - 1) {\n                                      if (\n                                        j ===\n                                        this.state.datatable[i].length - 1\n                                      ) {\n                                        if (\n                                          this.state.datatable[i][j].AVG == null\n                                        ) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          });\n                                        } else {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title:\n                                              \"Data loading has encountered some error, please try again\",\n                                          });\n                                        }\n                                        break;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                      <div className=\"col-md-8\">\n                        <CSVLink data={this.state.Raw_Dat}>\n                          <button type=\"button\" className=\"btn btn-primary\" style={{ marginTop: 30 }}>\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Daily Select From &nbsp;\n                            <a\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Day-to-Day Data\",\n                                  text:\n                                    \"Day-to-Day data over the course of the selected date\",\n                                });\n                              }}\n                            ></a>\n                          </label>\n                          <input\n                            value={this.state.startDate}\n                            onChange={(e) => {\n                              this.setState({ startDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Finish Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>To</label>\n                          <input\n                            value={this.state.finishDate}\n                            onChange={(e) => {\n                              this.setState({ finishDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Finish Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisableDays}\n                          onClick={(e) => {\n                            this.setState({ isDisableDays: true });\n                            this.doGetDataDay();\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetDataDay();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatableday.length > 0) {\n                                for (\n                                  let i = 0;\n                                  i < this.state.datatableday.length;\n                                  i++\n                                ) {\n                                  for (\n                                    let j = 0;\n                                    j < this.state.datatableday[i].length;\n                                    j++\n                                  ) {\n                                    if (\n                                      this.state.datatableday[i][j].AVG !== null\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text:\n                                          \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n\n                                    if (\n                                      i ===\n                                      this.state.datatableday.length - 1\n                                    ) {\n                                      if (\n                                        j ===\n                                        this.state.datatableday[i].length - 1\n                                      ) {\n                                        if (\n                                          this.state.datatableday[i][j].AVG ==\n                                          null\n                                        ) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          });\n                                        } else {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title:\n                                              \"Data loading has encountered some error, please try again\",\n                                          });\n                                        }\n                                        break;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Real-time data per hour */}\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Hourly SPC Chart on {this.state.selectDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Chart per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n\n                    {/* Insert Xbar Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMC}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 4, 4, 4, 2],\n                                dashArray: [6, 6, 0, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTD}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Table per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Time</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRow()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Real-time data per day */}\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Daily SPC Chart from {this.state.startDate} to{\" \"}\n                    {this.state.finishDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Chart per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\" style={{}}>\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCday}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 4, 4, 4, 2],\n                                dashArray: [6, 6, 0, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTDDay}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Insert Table per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Time</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRowday()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MOTORHE;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nclass STACKHEIGHT extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //data average per hour\n      title: [],\n      data: [],\n      seriesMC: [],\n      seriesMCSTD: [],\n\n      xAxis: [],\n      yAxis: [],\n      yAxisUSL: [],\n      yAxisLSL: [],\n      yAxisUCL: [],\n      yAxisLCL: [],\n      yAxisCL: [],\n      dataCount: [],\n      count: [],\n\n      //raw data per hour\n      Raw_Dat: [],\n      Raw_Dat1: [],\n\n      //standard deviation per hour\n      yAxisUCLSD: [],\n      yAxisLCLSD: [],\n      yAxisCLSD: [],\n      yAxisSD: [],\n\n      // Table per hour\n      datatable: [],\n      tablerow: [],\n\n      //data average per day\n      titleday: [],\n      dataday: [],\n      seriesMCday: [],\n      seriesMCSTDDay: [],\n\n      xAxisday: [],\n      yAxisday: [],\n      yAxisUSLday: [],\n      yAxisLSLday: [],\n      yAxisUCLday: [],\n      yAxisLCLday: [],\n      yAxisCLday: [],\n      dataCountDay: [],\n      countDay: [],\n\n      //standard deviation per hour\n      yAxisdaySD: [],\n      yAxisUCLdaySD: [],\n      yAxisCLdaySD: [],\n      yAxisLCLdaySD: [],\n\n      // Table per hour\n      datatableday: [],\n      tablerowday: [],\n\n      // criteria\n      model: [],\n      productionline: [],\n      parameter: [],\n      selectMCname: [],\n\n      selectDate: moment().format(\"yyyy-MM-DD\"),\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listParameter: [],\n      listProductionline: [],\n      listMachine: [],\n\n      optionSelected: null,\n      isDisable: false,\n      isDisableDays: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getParameter();\n    await this.getProductionline();\n    await this.getMachine();\n  };\n\n  doGetData = async () => {\n    let result = await httpClient.get(\n      server.STACKHI_URL +\n        \"/\" +\n        this.state.selectDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.selectMCname\n    );\n\n    let title = result.data.seriesY.title;\n    let xAxis = [];\n    let count = [];\n    for (let index = 0; index < result.data.resultAVG.length; index++) {\n      const item = result.data.resultAVG[index];\n      await xAxis.push(item.Time);\n      console.log(this.state.model);\n      if (this.state.model === \"EVANBP\" || this.state.model === \"HARRIE\") {\n        await count.push(600);\n      } else {\n        await count.push(1200);\n      }\n    }\n\n    //Raw_Data\n    let rawData = result.data.listRawData;\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    //AVG\n    let yAxis = result.data.seriesY;\n    let yAxisUSL = result.data.seriesUSL;\n    let yAxisLSL = result.data.seriesLSL;\n    let yAxisCL = result.data.seriesCL;\n    let yAxisUCL = result.data.seriesUCL;\n    let yAxisLCL = result.data.seriesLCL;\n\n    var seriesMC = [];\n    seriesMC.push(\n      Object.assign({}, yAxisUSL),\n      Object.assign({}, yAxisLSL),\n      Object.assign({}, yAxisUCL),\n      Object.assign({}, yAxisLCL),\n      Object.assign({}, yAxisCL)\n      //Object.assign({}, yAxis)\n    );\n\n    for (let i = 0; i < result.data.seriesMC.length; i++) {\n      seriesMC.push(Object.assign({}, result.data.seriesMC[i]));\n    }\n\n    //STD\n    let yAxisSD = result.data.seriesSTD;\n    let yAxisLCLSD = result.data.seriesLCL_STD;\n    let yAxisUCLSD = result.data.seriesUCL_STD;\n    let yAxisCLSD = result.data.seriesCL_STD;\n\n    var seriesMCSTD = [];\n    seriesMCSTD.push(\n      Object.assign({}, yAxisUCLSD),\n      Object.assign({}, yAxisLCLSD),\n      Object.assign({}, yAxisCLSD),\n      Object.assign({}, yAxisSD)\n    );\n\n    for (let i = 0; i < result.data.seriesMCSTD.length; i++) {\n      seriesMCSTD.push(Object.assign({}, result.data.seriesMCSTD[i]));\n    }\n\n    //dataCount\n    let dataCount = result.data.seriesMCCount[0].data;\n\n    var datatable = [];\n\n    for (let i = 0; i < result.data.listResult.length; i++) {\n      datatable.push(result.data.listResult[i]);\n    }\n\n    this.setState({\n      title,\n      data: result.data.resultAVG,\n      datatable,\n      seriesMC,\n      seriesMCSTD,\n      xAxis,\n      dataCount,\n      count,\n\n      isDisable: false,\n    });\n  };\n\n  // doGetDataperday\n  doGetDataDay = async () => {\n    let resultday = await httpClient.get(\n      server.STACKHIDAY_URL +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.parameter[0].label +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.selectMCname\n    );\n    //Raw_Data\n    let rawData1 = resultday.data.listRawData;\n    this.setState({ Raw_Dat1: rawData1[0] });\n    console.log(this.state.Raw_Dat1);\n\n    let titleday = resultday.data.seriesYday.titleday;\n    let xAxisday = [];\n    let countDay = [];\n    for (let index = 0; index < resultday.data.resultAVGday.length; index++) {\n      const item = resultday.data.resultAVGday[index];\n      await xAxisday.push(item.Date);\n      await countDay.push(12000);\n    }\n\n    //AVG\n    let yAxisday = resultday.data.seriesYday;\n    let yAxisUSLday = resultday.data.seriesUSL;\n    let yAxisLSLday = resultday.data.seriesLSL;\n    let yAxisUCLday = resultday.data.seriesUCL;\n    let yAxisLCLday = resultday.data.seriesLCL;\n    let yAxisCLday = resultday.data.seriesCL;\n\n    var seriesMCday = [];\n    seriesMCday.push(\n      Object.assign({}, yAxisUSLday),\n      Object.assign({}, yAxisLSLday),\n      Object.assign({}, yAxisUCLday),\n      Object.assign({}, yAxisLCLday),\n      Object.assign({}, yAxisCLday)\n      //Object.assign({}, yAxisday)\n    );\n\n    for (let i = 0; i < resultday.data.seriesMCday.length; i++) {\n      seriesMCday.push(Object.assign({}, resultday.data.seriesMCday[i]));\n    }\n\n    //STD\n    let yAxisdaySD = resultday.data.seriesSTDDay;\n    let yAxisUCLdaySD = resultday.data.seriesUCL_STD;\n    let yAxisLCLdaySD = resultday.data.seriesLCL_STD;\n    let yAxisCLdaySD = resultday.data.seriesCL_STD;\n\n    var seriesMCSTDDay = [];\n    seriesMCSTDDay.push(\n      Object.assign({}, yAxisUCLdaySD),\n      Object.assign({}, yAxisLCLdaySD),\n      Object.assign({}, yAxisCLdaySD),\n      Object.assign({}, yAxisdaySD)\n    );\n\n    for (let i = 0; i < resultday.data.seriesMCSTDDay.length; i++) {\n      seriesMCSTDDay.push(Object.assign({}, resultday.data.seriesMCSTDDay[i]));\n    }\n\n    //dataCount\n    let dataCountDay = resultday.data.seriesMCCountDay[0].data;\n\n    var datatableday = [];\n\n    for (let i = 0; i < resultday.data.listResultday.length; i++) {\n      datatableday.push(resultday.data.listResultday[i]);\n    }\n\n    this.setState({\n      titleday,\n      dataday: resultday.data.resultAVGday,\n      datatableday,\n\n      seriesMCday,\n      seriesMCSTDDay,\n      xAxisday,\n      dataCountDay,\n      countDay,\n\n      isDisableDays: false,\n    });\n\n\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.STACKHIMODEL_URL +\n      \"/\" +\n      this.state.startDate +\n      \"/\" +\n      this.state.finishDate );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getParameter = async () => {\n    const array = await httpClient.get(\n      server.STACKHIPARAM_URL + \"/\" + this.state.model\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listParameter: options });\n  };\n\n  getProductionline = async () => {\n    const array = await httpClient.get(\n      server.STACKHILINE_URL + \"/\" + this.state.model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listProductionline: options });\n  };\n\n  getMachine = async () => {\n    const array = await httpClient.get(\n      server.STACKHIMACHINE_URL + \"/\" + this.state.productionline[0].label\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Machine_no,\n      value: d.Machine_no,\n    }));\n    this.setState({ listMachine: options });\n  };\n\n  handleChange = async (event) => {\n    const Newevent = Object.keys(event).map((key) => event[key].label);\n    const json_string = JSON.stringify(Newevent);\n    this.setState({ selectMCname: json_string });\n    this.setState({ optionSelected: event });\n  };\n\n  renderTableRow = () => {\n    var tablerow = [];\n    for (let i = 0; i < this.state.datatable.length; i++) {\n      tablerow.push(\n        this.state.datatable[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerow;\n  };\n\n  renderTableRowday = () => {\n    var tablerowday = [];\n    for (let i = 0; i < this.state.datatableday.length; i++) {\n      tablerowday.push(\n        this.state.datatableday[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerowday;\n  };\n\n  render() {\n    console.log(this.state.seriesMC);\n    console.log(this.state.listMachine);\n    console.log(this.state.dataCount);\n    console.log(this.state.datatable);\n    console.log(this.state.seriesMC);\n    console.log(this.state.seriesMCSTD);\n    console.log(this.state.dataCount);\n    console.log(this.state.count);\n\n\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Static dimension SPC chart</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Static dimension SPC chart</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Select Parameter</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ model: e.label });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                                count: [],\n                                dataCount: [],\n                                countDay: [],\n                                dataCountDay: [],\n                              });\n                              await this.getParameter();\n                              await this.getProductionline();\n                              await this.setState({\n                                productionline: [\n                                  { label: \"Select Production Line\" },\n                                ],\n                              });\n                              await this.setState({\n                                parameter: [{ label: \"Select Parameter\" }],\n                              });\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listProductionline}\n                            value={this.state.productionline[0]}\n                            onChange={async (e) => {\n                              await this.setState({ productionline: [] });\n                              this.state.productionline.push({\n                                label: e.label,\n                              });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                                count: [],\n                                dataCount: [],\n                                countDay: [],\n                                dataCountDay: [],\n                              });\n                              await this.getMachine();\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production Line\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Parameter\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Parameter</label>\n                          <Select\n                            options={this.state.listParameter}\n                            value={this.state.parameter[0]}\n                            onChange={async (e) => {\n                              await this.setState({ parameter: [] });\n                              this.state.parameter.push({ label: e.label });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                                count: [],\n                                dataCount: [],\n                                countDay: [],\n                                dataCountDay: [],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Machine No.\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Tester No.</label>\n                          <Select\n                            isMulti\n                            options={this.state.listMachine}\n                            onChange={this.handleChange.bind(this)}\n                            displayValue=\"label\"\n                            selectionLimit=\"3\"\n                            allowSelectAll={true}\n                            closeMenuOnSelect={false}\n                            hideSelectedOptions={true}\n                            value={this.state.optionSelected}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Tester No.\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Hourly Select Date &nbsp;\n                            <i\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Hourly Data\",\n                                  text: \"Hourly data over the course of the selected day\",\n                                });\n                              }}\n                            ></i>\n                          </label>\n                          <input\n                            value={this.state.selectDate}\n                            onChange={(e) => {\n                              this.setState({ selectDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={(e) => {\n                            this.setState({ isDisable: true });\n                            this.doGetData();\n                            this.setState({\n                              showHourly: true, // ไม่แสดง Hourly\n                              showDaily: false,   // แสดง Daily\n                            });\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetData();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatable.length > 0) {\n                                for (\n                                  let i = 0;\n                                  i < this.state.datatable.length;\n                                  i++\n                                ) {\n                                  for (\n                                    let j = 0;\n                                    j < this.state.datatable[i].length;\n                                    j++\n                                  ) {\n                                    if (\n                                      this.state.datatable[i][j].AVG !== null\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text: \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n\n                                    if (i === this.state.datatable.length - 1) {\n                                      if (\n                                        j ===\n                                        this.state.datatable[i].length - 1\n                                      ) {\n                                        if (\n                                          this.state.datatable[i][j].AVG == null\n                                        ) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          });\n                                        } else {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title:\n                                              \"Data loading has encountered some error, please try again\",\n                                          });\n                                        }\n                                        break;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                      <div className=\"col-md-8\">\n                        <CSVLink data={this.state.Raw_Dat}>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 30 }}\n                          >\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Daily Select From &nbsp;\n                            <i\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Day-to-Day Data\",\n                                  text: \"Day-to-Day data over the course of the selected date\",\n                                });\n                              }}\n                            ></i>\n                          </label>\n                          <input\n                            value={this.state.startDate}\n                            onChange={(e) => {\n                              this.setState({ startDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Finish Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>To</label>\n                          <input\n                            value={this.state.finishDate}\n                            onChange={(e) => {\n                              this.setState({ finishDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Finish Date\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        {/* Submit button */}\n                        <div className=\"col-md-1\">\n                          <button\n                            disabled={this.state.isDisableDays}\n                            onClick={(e) => {\n                              this.setState({ isDisableDays: true });\n                              this.doGetDataDay();\n                              this.setState({\n                                showHourly: false, // ไม่แสดง Hourly\n                                showDaily: true,   // แสดง Daily\n                              });\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Loading Data\",\n                                timer: 60000,\n                                allowOutsideClick: false,\n                                didOpen: async () => {\n                                  Swal.showLoading();\n                                  await this.doGetDataDay();\n                                  Swal.close();\n                                },\n                              }).then(() => {\n                                if (this.state.datatableday.length > 0) {\n                                  for (\n                                    let i = 0;\n                                    i < this.state.datatableday.length;\n                                    i++\n                                  ) {\n                                    for (\n                                      let j = 0;\n                                      j < this.state.datatableday[i].length;\n                                      j++\n                                    ) {\n                                      if (\n                                        this.state.datatableday[i][j].AVG !==\n                                        null\n                                      ) {\n                                        Swal.fire({\n                                          icon: \"success\",\n                                          title: \"Success\",\n                                          type: \"success\",\n                                          text: \"Data has been loaded successfully\",\n                                        });\n                                        break;\n                                      }\n\n                                      if (\n                                        i ===\n                                        this.state.datatableday.length - 1\n                                      ) {\n                                        if (\n                                          j ===\n                                          this.state.datatableday[i].length - 1\n                                        ) {\n                                          if (\n                                            this.state.datatableday[i][j].AVG ==\n                                            null\n                                          ) {\n                                            Swal.fire({\n                                              icon: \"error\",\n                                              title: \"No production data\",\n                                              text: \"Please select other date\",\n                                            }).then(() => {\n                                              // รีเฟรชหน้าใหม่\n                                              window.location.reload();\n                                            });\n                                          } else {\n                                            Swal.fire({\n                                              icon: \"error\",\n                                              title:\n                                                \"Data loading has encountered some error, please try again\",\n                                              }).then(() => {\n                                                // รีเฟรชหน้าใหม่\n                                                window.location.reload();\n                                              });\n                                            \n                                          }\n                                          \n                                          break;\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              });\n                            }}\n                            type=\"submit\"\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 30 }}\n                          >\n                            Submit\n                          </button>\n            \n                        </div>\n                     \n                      </div>\n                      <div className=\"col-sm-3\">\n                        <CSVLink data={this.state.Raw_Dat1}>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 30 }}\n                          >\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Real-time data per hour */}\n        {this.state.showHourly &&(\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Hourly SPC Chart on {this.state.selectDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Chart per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n\n                    {/* Insert Xbar Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMC}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                            \n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTD}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Production quantity Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 3, 0],\n                              },\n                              stroke: {\n                                width: [2, 4, 2],\n                                dashArray: [6, 0, 6],\n                              },\n                            }}\n                            series={[\n                              {\n                                name: \"Target\",\n                                type: \"line\",\n                                data: this.state.count,\n                                color: \"#ff0000\",\n                              },\n                              {\n                                name: \"Q'ty\",\n                                type: \"line\",\n                                data: this.state.dataCount,\n                                color: \"#E73BF5\",\n                              },\n                            ]}\n                            type=\"line\"\n                            height=\"300\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Table per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Time</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRow()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n)}\n      {this.state.showDaily &&(\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Daily SPC Chart from {this.state.startDate} to{\" \"}\n                    {this.state.finishDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Chart per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\" style={{}}>\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCday}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [6, 6, 6, 0, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTDDay}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Production quantity Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 3, 0],\n                              },\n                              stroke: {\n                                width: [2, 4, 2],\n                                dashArray: [6, 0, 6],\n                              },\n                            }}\n                            series={[\n                              {\n                                name: \"Target\",\n                                type: \"line\",\n                                data: this.state.countDay,\n                                color: \"#ff0000\",\n                              },\n                              {\n                                name: \"Q'ty\",\n                                type: \"line\",\n                                data: this.state.dataCountDay,\n                                color: \"#E73BF5\",\n                              },\n                            ]}\n                            type=\"line\"\n                            height=\"300\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Insert Table per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Date</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRowday()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n  )}\n      </div>\n    );\n  }\n}\nexport default STACKHEIGHT;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nclass traceback extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rotor: [],\n      motordim: [],\n      motorEWMS: [],\n      motorhipot: [],\n      motorno: \"\",\n      listMotorno: [],\n      motorDL: [],\n\n      AutoGerman: [],\n      AutoKZW: [],\n      ManualAX: [],\n      ManualOil: [],\n      rotorno: \"\",\n      listRotorno: [],\n\n      motorRcard: \"card collapsed-card\",\n      motorDcard: \"card collapsed-card\",\n      motorEcard: \"card collapsed-card\",\n      motorFcard: \"card collapsed-card\",\n\n      autoGcard: \"card collapsed-card\",\n      autoKcard: \"card collapsed-card\",\n      manualAXcard: \"card collapsed-card\",\n      manualOFcard: \"card collapsed-card\",\n\n      isDisable: false,\n    };\n  }\n\n  // window.location.reload(); refresh page\n\n  isMotornoDuplicate = () => {\n    if (this.state.listMotorno.includes(this.state.motorno)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  isRotornoDuplicate = () => {\n    if (this.state.listRotorno.includes(this.state.rotorno)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  doGetDataMotor = async () => {\n    let result = await httpClient.get(\n      server.TRACEBACK_URL + \"/\" + this.state.motorno\n    );\n    const newRotor = result.data.resultrotor;\n    // const oldRotor = this.state.rotor;\n    // const mergeRotor = oldRotor.concat(newRotor);\n\n    const newMotordim = result.data.resultdim;\n    // const oldMotordim = this.state.motordim;\n    // const mergeMotordim = oldMotordim.concat(newMotordim);\n\n    const newMotorEWMS = result.data.resultEWMS;\n    // const oldMotorEWMS = this.state.motorEWMS;\n    // const mergeMotorEWMS = oldMotorEWMS.concat(newMotorEWMS);\n\n    const newMotorhipot = result.data.resulthipot;\n    // const oldMotorhipot = this.state.motorhipot;\n    // const mergeMotorhipot = oldMotorhipot.concat(newMotorhipot);\n\n    const newMotorDL = [\n      ...newRotor,\n      ...newMotordim,\n      ...newMotorEWMS,\n      ...newMotorhipot,\n    ];\n\n    this.setState({\n      // rotor: mergeRotor,\n      // motordim: mergeMotordim,\n      // motorEWMS: mergeMotorEWMS,\n      // motorhipot: mergeMotorhipot,\n      rotor: newRotor,\n      motordim: newMotordim,\n      motorEWMS: newMotorEWMS,\n      motorhipot: newMotorhipot,\n      isDisable: false,\n      motorDL: newMotorDL,\n    });\n\n    if (this.state.rotor != null) {\n      if (this.state.rotor.length > 0) {\n        this.setState({motorRcard: \"card\"})\n      }\n      else {\n        this.setState({motorRcard: \"card collapsed-card\"})\n      }\n    }\n    if (this.state.motordim != null) {\n      if (this.state.motordim.length > 0) {\n        this.setState({motorDcard: \"card\"})\n      }\n      else {\n        this.setState({motorDcard: \"card collapsed-card\"})\n      }\n    }\n    if (this.state.motorEWMS != null) {\n      if (this.state.motorEWMS.length > 0) {\n        this.setState({motorEcard: \"card\"})\n      }\n      else {\n        this.setState({motorEcard: \"card collapsed-card\"})\n      }\n    }\n    if (this.state.motorhipot != null) {\n      if (this.state.motorhipot.length > 0) {\n        this.setState({motorFcard: \"card\"})\n      }\n      else {\n        this.setState({motorFcard: \"card collapsed-card\"})\n      }\n    }\n    // console.log(result.data.resultrotor);\n    console.log(newMotorDL);\n    console.log(newMotordim);\n  };\n\n  doGetDataRotor = async () => {\n    let result = await httpClient.get(\n      server.TRACEBACKROTOR_URL + \"/\" + this.state.rotorno\n    );\n    const newAutoGerman = result.data.AutoGerman;\n    // const oldAutoGerman = this.state.AutoGerman;\n    // const mergeAutoGerman = oldAutoGerman.concat(newAutoGerman);\n\n    const newAutoKZW = result.data.AutoKZW;\n    // const oldAutoKZW = this.state.AutoKZW;\n    // const mergeAutoKZW = oldAutoKZW.concat(newAutoKZW);\n\n    const newManualAX = result.data.ManualAX;\n    // const oldManualAX = this.state.ManualAX;\n    // const mergeManualAX = oldManualAX.concat(newManualAX);\n\n    const newManualOil = result.data.ManualOil;\n    // const oldManualOil = this.state.ManualOil;\n    // const mergeManualOil = oldManualOil.concat(newManualOil);\n\n    this.setState({\n      // AutoGerman: mergeAutoGerman,\n      // AutoKZW: mergeAutoKZW,\n      // ManualAX: mergeManualAX,\n      // ManualOil: mergeManualOil,\n      AutoGerman: newAutoGerman,\n      AutoKZW: newAutoKZW,\n      ManualAX: newManualAX,\n      ManualOil: newManualOil,\n      isDisable: false,\n    });\n\n    if (this.state.AutoGerman != null) {\n      if (this.state.AutoGerman.length > 0) {\n        this.setState({autoGcard: \"card\"})\n      }\n      else {\n        this.setState({autoGcard: \"card collapsed-card\"})\n      }\n    }\n    if (this.state.AutoKZW != null) {\n      if (this.state.AutoKZW.length > 0) {\n        this.setState({autoKcard: \"card\"})\n      }\n      else {\n        this.setState({autoKcard: \"card collapsed-card\"})\n      }\n    }\n    if (this.state.ManualAX != null) {\n      if (this.state.ManualAX.length > 0) {\n        this.setState({manualAXcard: \"card\"})\n      }\n      else {\n        this.setState({manualAXcard: \"card collapsed-card\"})\n      }\n    }\n    if (this.state.ManualOil != null) {\n      if (this.state.ManualOil.length > 0) {\n        this.setState({manualOFcard: \"card\"})\n      }\n      else {\n        this.setState({manualOFcard: \"card collapsed-card\"})\n      }\n    }\n\n    // console.log(result.data.resultrotor);\n  };\n\n  // componentDidMount = async () => {\n  //   let result = await httpClient.get(\n  //     server.TRACEBACK_URL + \"/\" + this.state.motorno\n  //   );\n  //   this.setState({\n  //     rotor: result.data.resultrotor,\n  //     motordim: result.data.resultdim,\n  //     motorEWMS: result.data.resultEWMS,\n  //     motorhipot: result.data.resulthipot,\n  //   });\n  //   console.log(result.data.result);\n  // };\n\n  renderTableRotor = () => {\n    console.log(this.state.rotor);\n    if (this.state.rotor != null) {\n      if (this.state.rotor.length > 0) {\n        return this.state.rotor.map((item) => (\n          <tr>\n            <td>{item[\"Model_rotor\"]}</td>\n            <td>{item[\"Barcode_Rotor\"]}</td>\n            <td>{item[\"Date_rotor\"]}</td>\n            <td>{item[\"Line_rotor\"]}</td>\n            <td>{item[\"Time_axial\"]}</td>\n            <td>{item[\"Axial_Play\"]}</td>\n            <td>{item[\"MC_Axial_Play\"]}</td>\n            <td>{item[\"Time_oiltop\"]}</td>\n            <td>{item[\"Oil_Top\"]}</td>\n            <td>{item[\"MC_Oil_Top\"]}</td>\n            <td>{item[\"Time_oilbottom\"]}</td>\n            <td>{item[\"Oil_Bottom\"]}</td>\n            <td>{item[\"MC_Oil_Bottom\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  renderTableMotorDim = () => {\n    if (this.state.motordim != null) {\n      if (this.state.motordim.length > 0) {\n        return this.state.motordim.map((item) => (\n          <tr>\n            <td>{item[\"Model_dim\"]}</td>\n            <td>{item[\"Barcode_Motor\"]}</td>\n            <td>{item[\"Date_dim\"]}</td>\n            <td>{item[\"Time_dim\"]}</td>\n            <td>{item[\"Line_dim\"]}</td>\n            <td>{item[\"Set_Dim\"]}</td>\n            <td>{item[\"Pivot_Height\"]}</td>\n            <td>{item[\"Parallelism\"]}</td>\n            <td>{item[\"FlyHeight\"]}</td>\n            <td>{item[\"Projection1\"]}</td>\n            <td>{item[\"Ramp_Pivot\"]}</td>\n            <td>{item[\"Machine_no\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  renderTableMotorEWMS = () => {\n    if (this.state.motorEWMS != null) {\n      if (this.state.motorEWMS.length > 0) {\n        return this.state.motorEWMS.map((item) => (\n          <tr>\n            <td>{item[\"Time EWMS\"]}</td>\n            <td>{item[\"ke_avg\"]}</td>\n            <td>{item[\"ke_ripple\"]}</td>\n            <td>{item[\"run_current\"]}</td>\n            <td>{item[\"TIR_probe_A\"]}</td>\n            <td>{item[\"NRRO_probe_A\"]}</td>\n            <td>{item[\"TIR_probe_B\"]}</td>\n            <td>{item[\"NRRO_probe_B\"]}</td>\n            <td>{item[\"RVA\"]}</td>\n            <td>{item[\"NRRO_ax_FFT_1\"]}</td>\n            <td>{item[\"NRRO_rad_FFT_1\"]}</td>\n            <td>{item[\"brg_drag\"]}</td>\n            <td>{item[\"Bemf_balance\"]}</td>\n            <td>{item[\"Machine_no\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  renderTableMotorFuncTest = () => {\n    if (this.state.motorhipot != null) {\n      if (this.state.motorhipot.length > 0) {\n        return this.state.motorhipot.map((item) => (\n          <tr>\n            <td>{item[\"Time_Hipot\"]}</td>\n            <td>{item[\"R1_UV\"]}</td>\n            <td>{item[\"R2_UW\"]}</td>\n            <td>{item[\"R3_VW\"]}</td>\n            <td>{item[\"R_max_min\"]}</td>\n            <td>{item[\"Machine_no\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  renderTableAutoGerman = () => {\n    if (this.state.AutoGerman != null) {\n      if (this.state.AutoGerman.length > 0) {\n        return this.state.AutoGerman.map((item) => (\n          <tr>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"Mover\"]}</td>\n            <td>{item[\"Model\"]}</td>\n            <td>{item[\"Barcode\"]}</td>\n            <td>{item[\"Axial_Play_Press_Station_Number\"]}</td>\n            <td>{item[\"Axial_Play\"]}</td>\n            <td>{item[\"OilUp_1_Amount\"]}</td>\n            <td>{item[\"OilUp_2_Amount\"]}</td>\n            <td>{item[\"OilLow_1_Amount\"]}</td>\n            <td>{item[\"OilLow_2_Amount\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  renderTableAutoKZW = () => {\n    if (this.state.AutoKZW != null) {\n      if (this.state.AutoKZW.length > 0) {\n        return this.state.AutoKZW.map((item) => (\n          <tr>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"Machine\"]}</td>\n            <td>{item[\"Model\"]}</td>\n            <td>{item[\"Barcode\"]}</td>\n            <td>{item[\"Axial_Play_Press_Number\"]}</td>\n            <td>{item[\"Axial_Play\"]}</td>\n            <td>{item[\"Oil_Up_number\"]}</td>\n            <td>{item[\"Oil_Up_Amount\"]}</td>\n            <td>{item[\"Oil_Low_number\"]}</td>\n            <td>{item[\"Oil_Low_Amount\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  renderTableManualAX = () => {\n    if (this.state.ManualAX != null) {\n      if (this.state.ManualAX.length > 0) {\n        return this.state.ManualAX.map((item) => (\n          <tr>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"Machine\"]}</td>\n            <td>{item[\"Model\"]}</td>\n            <td>{item[\"Barcode\"]}</td>\n            <td>{item[\"Axial_Play\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  renderTableManualOil = () => {\n    if (this.state.ManualOil != null) {\n      if (this.state.ManualOil.length > 0) {\n        return this.state.ManualOil.map((item) => (\n          <tr>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"Machine\"]}</td>\n            <td>{item[\"Model\"]}</td>\n            <td>{item[\"Part_ID\"]}</td>\n            <td>{item[\"Oilfill\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Traceability</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Traceability</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n        </div>\n\n        <div className=\"content-header\">\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"input-group\">\n                        <input\n                          value={this.state.rotorno}\n                          onChange={async (e) => {\n                            await this.setState({\n                              rotorno: e.target.value,\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Scan Rotor Barcode Here\"\n                        />\n                        <span className=\"input-group-append\">\n                          <button\n                            disabled={this.state.isDisable}\n                            type=\"button\"\n                            className=\"btn btn-info btn-flat\"\n                            onClick={async (e) => {\n                              if (!this.isRotornoDuplicate()) {\n                                this.setState({ isDisable: true });\n                                const listRotorno = this.state.listRotorno;\n                                listRotorno.push(this.state.rotorno);\n                                this.setState({ listRotorno });\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Loading Data\",\n                                  timer: 120000,\n                                  allowOutsideClick: false,\n                                  didOpen: async () => {\n                                    Swal.showLoading();\n                                    await this.doGetDataRotor();\n                                    Swal.close();\n                                  },\n                                }).then(() => {\n                                  if (this.doGetDataRotor !== \"\") {\n                                    Swal.fire({\n                                      icon: \"success\",\n                                      title: \"Success\",\n                                      type: \"success\",\n                                      text: \"Data has been loaded successfully\",\n                                    });\n                                  }\n                                });\n                              } else {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"Barcode duplicate!!\",\n                                });\n                              }\n                            }}\n                          >\n                            Submit!\n                          </button>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className={this.state.autoGcard}>\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Auto German</h3>\n              <div className=\"card-tools\">\n                <CSVLink data={this.state.AutoGerman}>\n                  <button type=\"button\" className=\"btn btn-info btn-flat\">\n                    Download\n                  </button>\n                </CSVLink>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Time</th>\n                      <th>Line</th>\n                      <th>Mover</th>\n                      <th>Model</th>\n                      <th>Barcode</th>\n                      <th>Axial Play M/C no.</th>\n                      <th>Axial Play</th>\n                      <th>Oil Top 1</th>\n                      <th>Oil Top 2</th>\n                      <th>Oil Bottom 1</th>\n                      <th>Oil Bottom 2</th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableAutoGerman()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className={this.state.autoKcard}>\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Auto KZW</h3>\n              <div className=\"card-tools\">\n                <CSVLink data={this.state.AutoKZW}>\n                  <button type=\"button\" className=\"btn btn-info btn-flat\">\n                    Download\n                  </button>\n                </CSVLink>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Time</th>\n                      <th>Line</th>\n                      <th>Machine</th>\n                      <th>Model</th>\n                      <th>Barcode</th>\n                      <th>Axial Play M/C no.</th>\n                      <th>Axial Play</th>\n                      <th>Oil Top M/C no.</th>\n                      <th>Oil Top</th>\n                      <th>Oil Bottom M/C no.</th>\n                      <th>Oil Bottom</th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableAutoKZW()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className={this.state.manualAXcard}>\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Manual Axial Play</h3>\n              <div className=\"card-tools\">\n                <CSVLink data={this.state.ManualAX}>\n                  <button type=\"button\" className=\"btn btn-info btn-flat\">\n                    Download\n                  </button>\n                </CSVLink>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Time</th>\n                      <th>Line</th>\n                      <th>Machine</th>\n                      <th>Model</th>\n                      <th>Barcode</th>\n                      <th>Axial Play</th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableManualAX()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className={this.state.manualOFcard}>\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Manual Oil fill</h3>\n              <div className=\"card-tools\">\n                <CSVLink data={this.state.ManualOil}>\n                  <button type=\"button\" className=\"btn btn-info btn-flat\">\n                    Download\n                  </button>\n                </CSVLink>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Time</th>\n                      <th>Line</th>\n                      <th>Machine</th>\n                      <th>Model</th>\n                      <th>Barcode</th>\n                      <th>Oil Fill</th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableManualOil()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card card-primary card-outline\">\n                    <div className=\"card-body\">\n                      <div className=\"row\">\n                        <div className=\"input-group \">\n                          <input\n                            value={this.state.motorno}\n                            onChange={async (e) => {\n                              await this.setState({\n                                motorno: e.target.value,\n                              });\n                            }}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Scan Motor Barcode Here\"\n                          />\n                          <span className=\"input-group-append\">\n                            <button\n                              disabled={this.state.isDisable}\n                              type=\"button\"\n                              className=\"btn btn-info btn-flat\"\n                              onClick={async (e) => {\n                                if (!this.isMotornoDuplicate()) {\n                                  this.setState({ isDisable: true });\n                                  const listMotorno = this.state.listMotorno;\n                                  listMotorno.push(this.state.motorno);\n                                  this.setState({ listMotorno });\n                                  Swal.fire({\n                                    icon: \"info\",\n                                    title: \"Loading Data\",\n                                    timer: 120000,\n                                    allowOutsideClick: false,\n                                    didOpen: async () => {\n                                      Swal.showLoading();\n                                      await this.doGetDataMotor();\n                                      Swal.close();\n                                    },\n                                  }).then(() => {\n                                    if (this.doGetDataMotor !== \"\") {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text:\n                                          \"Data has been loaded successfully\",\n                                      });\n                                    }\n                                  });\n                                } else {\n                                  Swal.fire({\n                                    icon: \"error\",\n                                    title: \"Barcode duplicate!!\",\n                                  });\n                                }\n                              }}\n                            >\n                              Submit!\n                            </button>\n                            {/* <CSVLink data={this.state.motorDL}>\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-info btn-flat\">\n                                  Download\n                              </button>\n                            </CSVLink> */}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className={this.state.motorRcard}>\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Rotor</h3>\n              <div className=\"card-tools\">\n                <CSVLink data={this.state.rotor}>\n                  <button type=\"button\" className=\"btn btn-info btn-flat\">\n                    Download\n                  </button>\n                </CSVLink>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th width=\"100\">Model</th>\n                      <th width=\"100\">Barcode Rotor</th>\n                      <th width=\"100\">Date</th>\n                      <th width=\"100\">Line</th>\n                      <th width=\"100\">Time</th>\n                      <th width=\"100\">Axial Play</th>\n                      <th width=\"150\">MC Axial Play </th>\n                      <th width=\"100\">Time</th>\n                      <th width=\"100\">Oil Top</th>\n                      <th width=\"150\">MC Oil Top</th>\n                      <th width=\"100\">Time</th>\n                      <th width=\"120\">Oil Bottom</th>\n                      <th width=\"150\">MC Oil Bottom</th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableRotor()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className={this.state.motorDcard}>\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Motor Dimension</h3>\n              <div className=\"card-tools\">\n                <CSVLink data={this.state.motordim}>\n                  <button type=\"button\" className=\"btn btn-info btn-flat\">\n                    Download\n                  </button>\n                </CSVLink>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th width=\"80\">Model</th>\n                      <th width=\"80\">Barcode Motor</th>\n                      <th width=\"80\">Date</th>\n                      <th width=\"80\">Time</th>\n                      <th width=\"80\">Line</th>\n                      <th width=\"100\">Set Dim</th>\n                      <th width=\"100\">Pivot Height</th>\n                      <th width=\"100\">Parallelism</th>\n                      <th width=\"100\">FlyHeight</th>\n                      <th width=\"100\">Projection</th>\n                      <th width=\"100\">Ramp Pivot</th>\n                      <th width=\"120\">Machine no.</th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableMotorDim()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className={this.state.motorEcard}>\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Motor EWMS</h3>\n              <div className=\"card-tools\">\n                <CSVLink data={this.state.motorEWMS}>\n                  <button type=\"button\" className=\"btn btn-info btn-flat\">\n                    Download\n                  </button>\n                </CSVLink>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th width=\"100\">Time EWMS</th>\n                      <th width=\"100\">ke avg</th>\n                      <th width=\"100\">ke ripple</th>\n                      <th width=\"100\">Run Current</th>\n                      <th width=\"100\">TIR Probe A</th>\n                      <th width=\"100\">NRRO Probe A</th>\n                      <th width=\"100\">TIR Probe B</th>\n                      <th width=\"100\">NRRO Probe B</th>\n                      <th width=\"100\">RVA</th>\n                      <th width=\"100\">NRRO ax FFT 1</th>\n                      <th width=\"100\">NRRO rad FFT 1</th>\n                      <th width=\"100\">brg drag</th>\n                      <th width=\"100\">Bemf balance</th>\n                      <th width=\"120\">Machine no.</th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableMotorEWMS()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className={this.state.motorFcard}>\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Motor Function Test</h3>\n              <div className=\"card-tools\">\n                <CSVLink data={this.state.motorhipot}>\n                  <button type=\"button\" className=\"btn btn-info btn-flat\">\n                    Download\n                  </button>\n                </CSVLink>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Time Hi-pot</th>\n                      <th>R1 (U-V)</th>\n                      <th>R2 (U-W)</th>\n                      <th>R3 (V-W)</th>\n                      <th>R max-min</th>\n                      <th>Machine no.</th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableMotorFuncTest()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default traceback;","import React, { Component } from \"react\";\r\nimport { key, server } from \"../../constants\";\r\nimport { httpClient } from \"../../utils/HttpClient\";\r\n\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\n\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\nclass dataRotor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //set state\r\n    this.state = {\r\n      //data average per hour\r\n      dataRotor: [],\r\n\r\n      // criteria\r\n      modelRotor: [],\r\n      lineRotor: [],\r\n      processRotor: [],\r\n      machineRotor: [],\r\n\r\n      selectDate: moment().format(\"yyyy-MM-DD\"),\r\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\r\n      finishDate: moment().format(\"yyyy-MM-DD\"),\r\n\r\n      // criteria options\r\n      listmodelRotor: [],\r\n      listprocessRotor: [],\r\n      listlineRotor: [],\r\n      listmachineRotor: [],\r\n\r\n      optionSelected: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.getmodelRotor();\r\n    await this.getprocessRotor();\r\n    await this.getlineRotor();\r\n    await this.getmachineRotor();\r\n  };\r\n\r\n  doGetRotor = async () => {\r\n    let result = await httpClient.get(\r\n      server.ROTORANALYSIS_URL +\r\n        \"/\" +\r\n        this.state.selectDate +\r\n        \"/\" +\r\n        this.state.modelRotor +\r\n        \"/\" +\r\n        this.state.processRotor +\r\n        \"/\" +\r\n        this.state.lineRotor +\r\n        \"/\" +\r\n        this.state.machineRotor\r\n    );\r\n    this.setState({\r\n      dataRotor: result.data.result,\r\n    });\r\n  };\r\n\r\n  getmodelRotor = async () => {\r\n    const array = await httpClient.get(server.ROTORMODEL_URL);\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Model,\r\n    }));\r\n    this.setState({ listModel: options });\r\n  };\r\n\r\n  getprocessRotor = async () => {\r\n    const array = await httpClient.get(server.ROTORPROCESS_URL);\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Process,\r\n    }));\r\n    this.setState({ listProcess: options });\r\n  };\r\n\r\n  getlineRotor = async () => {\r\n    const array = await httpClient.get(\r\n      server.ROTORLINE_URL + \"/\" + this.state.process + \"/\" + this.state.model\r\n    );\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Line,\r\n    }));\r\n    this.setState({ listlineRotor: options });\r\n  };\r\n\r\n  getmachineRotor = async () => {\r\n    const array = await httpClient.get(\r\n      server.ROTORMC_URL + \"/\" + this.state.process + \"/\" + this.state.lineRotor\r\n    );\r\n    const options = array.data.result.map((d) => ({\r\n      label: d.Machine,\r\n    }));\r\n    this.setState({ listmachineRotor: options });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.dataRotor);\r\n\r\n    return (\r\n      <div class=\"content-wrapper\">\r\n        <div className=\"content\" style={{ paddingTop: 50 }}>\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Data Analysis</h1>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a href=\"/Home\">Home</a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">Data Analysis</li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n          <div class=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card card-primary card-outline\">\r\n                  <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">\r\n                      <label>Select Criteria for Rotor </label>\r\n                    </h3>\r\n                  </div>\r\n\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      {/* //Select Critiria \"Model\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Model</label>\r\n                          <Select\r\n                            options={this.state.listmodelRotor}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ modelRotor: e.label });\r\n                              await this.getlineRotor();\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Model\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"process\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Process</label>\r\n                          <Select\r\n                            options={this.state.listProcess}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ process: e.label });\r\n                              await this.getlineRotor();\r\n                              await this.getmachineRotor();\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select process\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Production line\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Production line</label>\r\n                          <Select\r\n                            options={this.state.listlineRotor}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ lineRotor: e.label });\r\n                              await this.getmachineRotor();\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Production line\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Critiria \"Machine No.\" */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Machine</label>\r\n                          <Select\r\n                            options={this.state.listmachineRotor}\r\n                            onChange={async (e) => {\r\n                              await this.setState({ machineRotor: e.label });\r\n                            }}\r\n                            // type=\"text\"\r\n                            // className=\"form-control\"\r\n                            placeholder=\"Select Model\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* //Select Select Date */}\r\n                      <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label>Select Date</label>\r\n                          <input\r\n                            value={this.state.selectDate}\r\n                            onChange={(e) => {\r\n                              this.setState({ selectDate: e.target.value });\r\n                            }}\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select Start Date\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Submit button */}\r\n                      <div className=\"col-md-3\">\r\n                        <button\r\n                          onClick={(e) => {\r\n                            this.doGetRotor();\r\n                          }}\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          style={{ marginTop: 30 }}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div class=\"col-3\">\r\n                        <CSVLink data={this.state.dataRotor}>\r\n                          <button\r\n                            className=\"btn btn-primary\"\r\n                            style={{ marginTop: 30 }}\r\n                          >\r\n                            Download CSV\r\n                          </button>\r\n                        </CSVLink>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Insert Logout button */}\r\n        <div className=\"card-footer\">\r\n          <button\r\n            onClick={() => {\r\n              localStorage.removeItem(key.LOGIN_PASSED);\r\n              localStorage.removeItem(key.JWT_TOKEN);\r\n              this.props.history.push(\"/login\");\r\n            }}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default dataRotor;\r\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\n\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nclass Dataanalysis extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //Motor\n      data: [],\n\n      // criteria\n      model: [],\n      line: [],\n      process: [],\n      machine: [],\n\n      selectDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n      selectDateRotor: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listProcess: [],\n      listLine: [],\n      listMachine: [],\n\n      //Rotor\n      dataRotor: [],\n\n      // criteria\n      modelRotor: [],\n      lineRotor: [],\n      processRotor: [],\n      machineRotor: [],\n\n      // criteria options\n      listmodelRotor: [],\n      listprocessRotor: [],\n      listlineRotor: [],\n      listmachineRotor: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n    // this.HandleClick = this.HandleClick.bind(this);\n  }\n\n  componentDidMount = async () => {\n    this.getModel();\n    // this.getProcess();\n    // this.getLine();\n    // this.getMachine();\n    this.getmodelRotor();\n    // this.getprocessRotor();\n    // this.getlineRotor();\n    // this.getmachineRotor();\n  };\n\n  doGetMotor = async () => {\n    const result = await httpClient.get(\n      server.MOTORANALYSIS_URL +\n        \"/\" +\n        this.state.selectDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.process[0].label +\n        \"/\" +\n        this.state.line[0].label +\n        \"/\" +\n        this.state.machine[0].label\n    );\n    this.setState({\n      data: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  doGetRotor = async () => {\n    let result = await httpClient.get(\n      server.ROTORANALYSIS_URL +\n        \"/\" +\n        this.state.selectDateRotor +\n        \"/\" +\n        this.state.modelRotor +\n        \"/\" +\n        this.state.processRotor[0].label +\n        \"/\" +\n        this.state.lineRotor[0].label +\n        \"/\" +\n        this.state.machineRotor[0].label\n    );\n    this.setState({\n      dataRotor: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MOTORMODEL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getProcess = async () => {\n    const array = await httpClient.get(\n      server.MOTORPROCESS_URL + \"/\" + this.state.model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Process,\n    }));\n    this.setState({ listProcess: options });\n  };\n\n  getLine = async () => {\n    const array = await httpClient.get(\n      server.MOTORLINE_URL + \"/\" + this.state.process[0].label + \"/\" + this.state.model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n\n  getMachine = async () => {\n    const array = await httpClient.get(\n      server.MOTORMC_URL + \"/\" + this.state.process[0].label + \"/\" + this.state.line[0].label + \"/\" + this.state.model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Machine_no,\n    }));\n    this.setState({ listMachine: options });\n  };\n\n  getmodelRotor = async () => {\n    const array = await httpClient.get(server.ROTORMODEL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listmodelRotor: options });\n  };\n\n  getprocessRotor = async () => {\n    const array = await httpClient.get(\n      server.ROTORPROCESS_URL + \"/\" + this.state.modelRotor\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Process,\n    }));\n    this.setState({ listprocessRotor: options });\n  };\n\n  getlineRotor = async () => {\n    const array = await httpClient.get(\n      server.ROTORLINE_URL +\n        \"/\" +\n        this.state.processRotor[0].label +\n        \"/\" +\n        this.state.modelRotor\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listlineRotor: options });\n  };\n\n  getmachineRotor = async () => {\n    const array = await httpClient.get(\n      server.ROTORMC_URL +\n        \"/\" +\n        this.state.processRotor[0].label +\n        \"/\" +\n        this.state.lineRotor[0].label\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Machine,\n    }));\n    this.setState({ listmachineRotor: options });\n  };\n\n  HandleClickSuccess() {\n    Swal.fire({\n      icon: \"success\",\n      title: \"Success\",\n      type: \"success\",\n      text: \"Please click CSV download to proceed.\",\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Data Analysis</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Data Analysis</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Select Criteria for Rotor </label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listmodelRotor}\n                            onChange={async (e) => {\n                              await this.setState({ modelRotor: e.label });\n                              await this.getprocessRotor();\n                              // await this.getlineRotor();\n                              await this.setState({ \n                                processRotor: [{ label: \"Select Process\" }],\n                                lineRotor: [{ label: \"Select Production line\" }],\n                                machineRotor: [{ label: \"Select Tester No.\" }],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"process\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Data Group</label>\n                          <Select\n                            options={this.state.listprocessRotor}\n                            value={this.state.processRotor[0]}\n                            onChange={async (e) => {\n                              await this.setState({ processRotor: [] });\n                              this.state.processRotor.push({\n                                label: e.label,\n                              });\n                              await this.getlineRotor();\n                              await this.getmachineRotor();\n                              await this.setState({ \n                                lineRotor: [{ label: \"Select Production line\" }],\n                                machineRotor: [{ label: \"Select Tester No.\" }],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listlineRotor}\n                            value={this.state.lineRotor[0]}\n                            onChange={async (e) => {\n                              await this.setState({ lineRotor: [] });\n                              this.state.lineRotor.push({\n                                label: e.label,\n                              });\n                              await this.getmachineRotor();\n                              await this.setState({ \n                                machineRotor: [{ label: \"Select Tester No.\" }],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production line\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Machine No.\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Tester No.</label>\n                          <Select\n                            options={this.state.listmachineRotor}\n                            value={this.state.machineRotor[0]}\n                            onChange={async (e) => {\n                              await this.setState({ machineRotor: [] });\n                              this.state.machineRotor.push({ label: e.label });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Tester No.\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Select Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Select Date</label>\n                          <input\n                            value={this.state.selectDateRotor}\n                            onChange={(e) => {\n                              this.setState({\n                                selectDateRotor: e.target.value,\n                              });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-3\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={(e) => {\n                            this.setState({ isDisable: true });\n                            //this.doGetRotor();\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetRotor();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.doGetRotor !== \"\") {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  type: \"success\",\n                                  text: \"Please click CSV download to proceed\",\n                                });\n                              } else {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title:\n                                    \"Data loading has encountered some error, please try again\",\n                                });\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>                     \n\n                      <div class=\"col-3\">\n                        <CSVLink data={this.state.dataRotor}>\n                          <button\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 30 }}\n                          >\n                            CSV Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Select Criteria for Motor </label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ model: e.label });\n                              // await this.getLine();\n                              await this.getProcess();\n                              // await this.getMachine();\n                              await this.setState({ \n                                process: [{ label: \"Select Process\" }],\n                                line: [{ label: \"Select Production line\" }],\n                                machine: [{ label: \"Select Tester No.\" }],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"process\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Process</label>\n                          <Select\n                            options={this.state.listProcess}\n                            value={this.state.process[0]}\n                            onChange={async (e) => {\n                              await this.setState({ process: [] });\n                              this.state.process.push({\n                                label: e.label,\n                              });\n                              await this.getLine();\n                              await this.getMachine();\n                              await this.setState({ \n                                line: [{ label: \"Select Production line\" }],\n                                machine: [{ label: \"Select Tester No.\" }],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listLine}\n                            value={this.state.line[0]}\n                            onChange={async (e) => {\n                              await this.setState({ line: [] });\n                              this.state.line.push({\n                                label: e.label,\n                              });\n                              await this.getMachine();\n                              await this.setState({ \n                                machine: [{ label: \"Select Tester No.\" }],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production line\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Machine No.\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Tester No.</label>\n                          <Select\n                            options={this.state.listMachine}\n                            value={this.state.machine[0]}\n                            onChange={async (e) => {\n                              await this.setState({ machine: [] });\n                              this.state.machine.push({ label: e.label });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Tester No.\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Select Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Select Date</label>\n                          <input\n                            value={this.state.selectDate}\n                            onChange={(e) => {\n                              this.setState({ selectDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-3\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={(e) => {\n                            this.setState({ isDisable: true });\n                            //this.doGetMotor();\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 180000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetMotor();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.doGetMotor !== \"\") {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  type: \"success\",\n                                  text: \"Please click CSV download to proceed\",\n                                });\n                              } else {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title:\n                                    \"Data loading has encountered some error, please try again\",\n                                });\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n\n                      {/* <div className=\"col-md-3\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={async (e) => {\n                            this.setState({ isDisable: true });\n                            await this.doGetMotor();\n                            await this.HandleClickSuccess();\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div> */}\n\n                      <div class=\"col-3\">\n                        <CSVLink data={this.state.data}>\n                          <button\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 30 }}\n                          >\n                            CSV Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dataanalysis;","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport dataanalysis from \"../dataanalysis\";\n\nclass Information extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      Fullname: [],\n      Model: [],\n      Part: [],\n      Parameter: [],\n      Machine: [],\n      USL: \"\",\n      CL: \"\",\n      LSL: \"\",\n\n      Modelcontrol: [],\n      Partcontrol: [],\n      Paracontrol: [],\n      Linecontrol: [],\n      StartCalcDate: moment().add(\"days\", -90).format(\"yyyy-MM-DD\"),\n      FinishCalcDate: moment().format(\"yyyy-MM-DD\"),\n\n      ModelEmail: [],\n      PartEmail: [],\n      ParaEmail: [],\n      LineEmail: [],\n      Email: [],\n\n      // criteria specification control options\n      listModel: [],\n      listModelName: [],\n      listParameter: [],\n      listPart: [],\n      listMachine: [],\n\n      // criteria specification control options\n      listModelforcontrollimit: [],\n      listPartforcontrollimit: [],\n      listParaforcontrollimit: [],\n      listLineforcontrollimit: [],\n\n      // email alarm\n      listModelEmail: [],\n      listPartEmail: [],\n      listParaEmail: [],\n      listLineEmail: [],\n\n      username: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    this.getModel();\n    this.getModelName();\n    this.getParameter();\n    this.getPart();\n    this.getMachine();\n    this.getModelforcontrollimit();\n    this.getPartforcontrollimit();\n    this.getParaforcontrollimit();\n    this.getModelEmail();\n    this.getPartEmail();\n    this.getParaEmail();\n    // this.getLineforcontrollimit();\n  };\n\n  doSQLupdate = async () => {\n    const data = {\n      Fullname: this.state.Fullname,\n      Model: this.state.Model,\n      Part: this.state.Part,\n      Parameter: this.state.Parameter,\n      Machine: this.state.Machine,\n      USL: this.state.USL,\n      CL: this.state.CL,\n      LSL: this.state.LSL,\n      empNumber: localStorage.getItem(key.USER_NAME),\n    };\n    console.log(data);\n\n    let SQLupdate = await axios.post(server.SPECCONTROL_URL, data);\n    console.log(SQLupdate);\n\n    this.setState({\n      data: SQLupdate.data.result,\n    });\n  };\n\n  doCalControlLimit = async () => {\n    //การประกาศตัว const ต้องเป็นชื่อตรงตามหัว column ใน table\n    const dataControl = {\n      Model: this.state.Modelcontrol,\n      Parameter: this.state.Paracontrol,\n      Line: this.state.Linecontrol,\n      StartCalcDate: this.state.StartCalcDate,\n      FinishCalcDate: this.state.FinishCalcDate,\n      empNumber: localStorage.getItem(key.USER_NAME),\n    };\n    console.log(dataControl);\n\n    let SQLupdate = await axios.post(server.CONTROLLIMIT_URL, dataControl);\n    console.log(SQLupdate);\n\n    // this.setState({\n    //   data: SQLupdate.data.result,\n    // });\n  };\n\n  doEmailAlarm = async () => {\n    //การประกาศตัว const ต้องเป็นชื่อตรงตามหัว column ใน table\n    const dataEmail = {\n      Model: this.state.ModelEmail,\n      Parameter: this.state.ParaEmail,\n      Line: this.state.LineEmail,\n      Email: this.state.Email,\n      empNumber: localStorage.getItem(key.USER_NAME),\n    };\n    console.log(dataEmail);\n\n    let SQLupdate = await axios.post(server.EMAILALARM_URL, dataEmail);\n    console.log(SQLupdate);\n\n    // this.setState({\n    //   data: SQLupdate.data.result,\n    // });\n  };\n\n  //Specification control\n  getModel = async () => {\n    const array = await httpClient.get(server.SPECMODEL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Fullname,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getModelName = async () => {\n    const array = await httpClient.get(\n      server.SPECMODELNAME_URL + \"/\" + this.state.Fullname\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModelName: options });\n  };\n\n  getPart = async () => {\n    const array = await httpClient.get(\n      server.SPECPART_URL + \"/\" + this.state.Fullname\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Part,\n    }));\n    this.setState({ listPart: options });\n  };\n\n  getParameter = async () => {\n    const array = await httpClient.get(\n      server.SPECPARA_URL + \"/\" + this.state.Part\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listParameter: options });\n  };\n\n  getMachine = async () => {\n    const array = await httpClient.get(\n      server.SPECMC_URL + \"/\" + this.state.Parameter\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Machine,\n    }));\n    this.setState({ listMachine: options });\n  };\n\n  //controllimit\n  getModelforcontrollimit = async () => {\n    const array = await httpClient.get(server.MODELCONTROL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModelforcontrollimit: options });\n  };\n\n  getPartforcontrollimit = async () => {\n    const array = await httpClient.get(\n      server.PARTCONTROL_URL + \"/\" + this.state.Modelcontrol\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Part,\n    }));\n    this.setState({ listPartforcontrollimit: options });\n  };\n\n  getParaforcontrollimit = async () => {\n    const array = await httpClient.get(\n      server.PARACONTROL_URL + \"/\" + this.state.Partcontrol\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listParaforcontrollimit: options });\n  };\n\n  getLineforcontrollimit = async () => {\n    const array = await httpClient.get(\n      server.LINECONTROL_URL +\n        \"/\" +\n        this.state.Modelcontrol +\n        \"/\" +\n        this.state.Partcontrol\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLineforcontrollimit: options });\n  };\n\n  //Email Alarm\n  getModelEmail = async () => {\n    const array = await httpClient.get(server.MODELEMAIL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModelEmail: options });\n  };\n\n  getPartEmail = async () => {\n    const array = await httpClient.get(\n      server.PARTEMAIL_URL + \"/\" + this.state.ModelEmail\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Part,\n    }));\n    this.setState({ listPartEmail: options });\n  };\n\n  getParaEmail = async () => {\n    const array = await httpClient.get(\n      server.PARAEMAIL_URL + \"/\" + this.state.PartEmail\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listParaEmail: options });\n  };\n\n  getLineEmail = async () => {\n    const array = await httpClient.get(\n      server.LINEEMAIL_URL +\n        \"/\" +\n        this.state.ModelEmail +\n        \"/\" +\n        this.state.PartEmail\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLineEmail: options });\n  };\n\n  HandleClickSuccess() {\n    Swal.fire({\n      icon: \"success\",\n      title: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  }\n\n  render() {\n    console.log(this.state.StartCalcDate);\n    console.log(this.state.FinishCalcDate);\n    console.log(this.state.Timestamp);\n\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Specification control</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ Fullname: e.label });\n                              await this.getModelName();\n                              await this.getPart();\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Model Name */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Model Name</label>\n                          <Select\n                            options={this.state.listModelName}\n                            onChange={async (e) => {\n                              await this.setState({ Model: e.label });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model Name\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Part\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Part</label>\n                          <Select\n                            options={this.state.listPart}\n                            onChange={async (e) => {\n                              await this.setState({ Part: e.label });\n                              await this.getParameter();\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Part\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Parameter\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Parameter</label>\n                          <Select\n                            options={this.state.listParameter}\n                            onChange={async (e) => {\n                              await this.setState({ Parameter: e.label });\n                              await this.getMachine();\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Machine\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Machine</label>\n                          <Select\n                            options={this.state.listMachine}\n                            onChange={async (e) => {\n                              await this.setState({ Machine: e.label });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Part\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* \"Enter LSL value\" */}\n\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>LSL </label>\n                          <input\n                            value={this.state.LSL}\n                            onChange={(e) => {\n                              this.setState({ LSL: e.target.value });\n                            }}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"Enter LSL value\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* \"Enter CL value\"*/}\n\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>CL</label>\n                          <input\n                            value={this.state.CL}\n                            onChange={(e) => {\n                              this.setState({ CL: e.target.value });\n                            }}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"Enter CL value\"\n                          />\n                        </div>\n                      </div>\n\n                      {/*\"Enter USL value\" */}\n\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>USL</label>\n                          <input\n                            value={this.state.USL}\n                            onChange={(e) => {\n                              this.setState({ USL: e.target.value });\n                            }}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"Enter USL value\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-3\">\n                        <button\n                          onClick={(e) => {\n                            this.doSQLupdate();\n                            this.HandleClickSuccess();\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Control Limit calculated period</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model Name */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModelforcontrollimit}\n                            onChange={async (e) => {\n                              await this.setState({ Modelcontrol: e.label });\n                              await this.getPartforcontrollimit();\n                              await this.getLineforcontrollimit();\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model Name\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Part\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Part</label>\n                          <Select\n                            options={this.state.listPartforcontrollimit}\n                            onChange={async (e) => {\n                              await this.setState({ Partcontrol: e.label });\n                              await this.getParaforcontrollimit();\n                              await this.getLineforcontrollimit();\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Part\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Parameter\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Parameter</label>\n                          <Select\n                            options={this.state.listParaforcontrollimit}\n                            onChange={async (e) => {\n                              await this.setState({ Paracontrol: e.label });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listLineforcontrollimit}\n                            onChange={async (e) => {\n                              await this.setState({ Linecontrol: e.label });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production line\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Select Date */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Start Date</label>\n                          <input\n                            value={this.state.StartCalcDate}\n                            onChange={(e) => {\n                              this.setState({ StartCalcDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Select Date */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Finish Date</label>\n                          <input\n                            value={this.state.FinishCalcDate}\n                            onChange={(e) => {\n                              this.setState({ FinishCalcDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Finish Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-3\">\n                        <button\n                          onClick={(e) => {\n                            this.doCalControlLimit();\n                            this.HandleClickSuccess();\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Email Alarm Receivers</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModelEmail}\n                            onChange={async (e) => {\n                              await this.setState({ ModelEmail: e.label });\n                              await this.getPartEmail();\n                              await this.getLineEmail();\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"Part\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Part</label>\n                          <Select\n                            options={this.state.listPartEmail}\n                            onChange={async (e) => {\n                              await this.setState({ PartEmail: e.label });\n                              await this.getParaEmail();\n                              await this.getLineEmail();\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"Parameter\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Parameter</label>\n                          <Select\n                            options={this.state.listParaEmail}\n                            onChange={async (e) => {\n                              await this.setState({ ParaEmail: e.label });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"Line\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>Production Line</label>\n                          <Select\n                            options={this.state.listLineEmail}\n                            onChange={async (e) => {\n                              await this.setState({ LineEmail: e.label });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-4\">\n                        <label>Receivers</label>\n                        <div className=\"input-group mb-3\">\n                          <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                              <i className=\"fas fa-envelope\" />\n                            </span>\n                          </div>\n                          <input\n                            value={this.state.Email}\n                            onChange={(e) => {\n                              this.setState({ Email: e.target.value });\n                            }}\n                            type=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Email\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-3\">\n                        <button\n                          onClick={(e) => {\n                            this.doEmailAlarm();\n                            this.HandleClickSuccess();\n                            // this.doTimestamp();\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Information;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\n\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nclass DataML extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //Motor\n      data: [],\n      MBA: [],\n      Rotor: [],\n      SHA: [],\n      allData: [],\n\n      // criteria\n      model: [],\n      productionline: [],\n      KPOV_Table: [],\n      KPOV: [],\n      \n      //MBA\n      KPIV1_Table: \"blank\",\n      KPIV2_Table: \"blank\",\n      KPIV3_Table: \"blank\",\n      KPIV4_Table: \"blank\",\n      KPIV5_Table: \"blank\",\n      KPIV1: \"blank\",\n      KPIV2: \"blank\",\n      KPIV3: \"blank\",\n      KPIV4: \"blank\",\n      KPIV5: \"blank\",\n      //Rotor\n      KPIV6_Table: \"blank\",\n      KPIV7_Table: \"blank\",\n      KPIV8_Table: \"blank\",\n      KPIV9_Table: \"blank\",\n      KPIV10_Table: \"blank\",\n      KPIV6: \"blank\",\n      KPIV7: \"blank\",\n      KPIV8: \"blank\",\n      KPIV9: \"blank\",\n      KPIV10: \"blank\",\n      //Base\n      KPIV11_Table: \"blank\",\n      KPIV12_Table: \"blank\",\n      KPIV13_Table: \"blank\",\n      KPIV14_Table: \"blank\",\n      KPIV15_Table: \"blank\",\n      KPIV11: \"blank\",\n      KPIV12: \"blank\",\n      KPIV13: \"blank\",\n      KPIV14: \"blank\",\n      KPIV15: \"blank\",\n\n      selectDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n      startDate: moment().add(\"days\", -89).format(\"yyyy-MM-DD\"),\n      finishDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n\n      Days7: moment().add(\"days\", -8).format(\"yyyy-MM-DD\"),\n      Days15: moment().add(\"days\", -16).format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listProductionline: [],\n      listDataSourceKPOV: [],\n      listDataSourceMBA: [],\n      listDataSourceRotor: [],\n      listDataSourceBase: [],\n      listKPOV: [],\n      listKPIV1: [],\n      listKPIV2: [],\n      listKPIV3: [],\n      listKPIV4: [],\n      listKPIV5: [],\n      listKPIV6: [],\n      listKPIV7: [],\n      listKPIV8: [],\n      listKPIV9: [],\n      listKPIV10: [],\n      listKPIV11: [],\n      listKPIV12: [],\n      listKPIV13: [],\n      listKPIV14: [],\n      listKPIV15: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n    // this.HandleClick = this.HandleClick.bind(this);\n  }\n\n  componentDidMount = async () => {\n    this.getModel();\n    this.getDataSourceKPOV();\n    this.getDataSourceMBA();\n    this.getDataSourceRotor();\n    this.getDataSourceBase();    \n  };\n\n  doGetDataML = async () => {\n    let result = await httpClient.get(\n      server.MOTORML_URL +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.KPOV +\n        \"/\" +\n        this.state.KPOV_Table +\n        \"/\" +\n        this.state.KPIV1 +\n        \"/\" +\n        this.state.KPIV1_Table +\n        \"/\" +\n        this.state.KPIV2 +\n        \"/\" +\n        this.state.KPIV2_Table +\n        \"/\" +\n        this.state.KPIV3 +\n        \"/\" +\n        this.state.KPIV3_Table +\n        \"/\" +\n        this.state.KPIV4 +\n        \"/\" +\n        this.state.KPIV4_Table +\n        \"/\" +\n        this.state.KPIV5 +\n        \"/\" +\n        this.state.KPIV5_Table +\n        \"/\" +\n        this.state.KPIV6 +\n        \"/\" +\n        this.state.KPIV6_Table +\n        \"/\" +\n        this.state.KPIV7 +\n        \"/\" +\n        this.state.KPIV7_Table +\n        \"/\" +\n        this.state.KPIV8 +\n        \"/\" +\n        this.state.KPIV8_Table +\n        \"/\" +\n        this.state.KPIV9 +\n        \"/\" +\n        this.state.KPIV9_Table +\n        \"/\" +\n        this.state.KPIV10 +\n        \"/\" +\n        this.state.KPIV10_Table +\n        \"/\" +\n        this.state.KPIV11 +\n        \"/\" +\n        this.state.KPIV11_Table +\n        \"/\" +\n        this.state.KPIV12 +\n        \"/\" +\n        this.state.KPIV12_Table +\n        \"/\" +\n        this.state.KPIV13 +\n        \"/\" +\n        this.state.KPIV13_Table +\n        \"/\" +\n        this.state.KPIV14 +\n        \"/\" +\n        this.state.KPIV14_Table +\n        \"/\" +\n        this.state.KPIV15 +\n        \"/\" +\n        this.state.KPIV15_Table \n    );\n    const allMBA = result.data.result1;\n    const allRotor = result.data.result2;\n    const allSHA = result.data.result3;\n\n    var allDataMotor = [\n      ...allMBA,\n      ...allRotor,\n      ...allSHA,\n    ];\n\n    // console.log(allDataMotor[0])\n\n    var keyAmounts = 0;\n    var maxkeys = 0;\n    // var keys = [];    \n\n    for (let i = 0; i < allDataMotor.length - 1; i++) {\n      for (let j = i+1; j < allDataMotor.length; j++) {\n        if (allDataMotor[i].Barcode == allDataMotor[j].Barcode) {\n          Object.assign(allDataMotor[i], allDataMotor[j])\n        }        \n      }\n      keyAmounts = Object.keys(allDataMotor[i]).length //จำนวน column ทั้งหมดของแต่ละแถว\n      if (keyAmounts > maxkeys) {\n        maxkeys = keyAmounts        \n      }\n          \n    }\n    // keys.push(keyAmounts)  \n    // maxkeys = Math.max(...keys)\n    // console.log(allDataMotor)\n    // console.log(maxkeys)\n\n    for (let k = 0; k < allDataMotor.length; k++) {\n      if (Object.keys(allDataMotor[k]).length !== maxkeys) {\n        delete allDataMotor[k];\n      }\n    }\n    // console.log(allDataMotor)\n\n    this.setState({\n      MBA: allMBA,\n      Rotor: allRotor,\n      SHA: allSHA,\n      allData: allDataMotor,\n      isDisable: false,\n    });\n  };\n \n\n  getModel = async () => {\n    const array = await httpClient.get(server.MODELML_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getProductionline = async () => {\n    const array = await httpClient.get(\n      server.LINEML_URL + \"/\" + this.state.model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listProductionline: options });\n  };\n\n  getDataSourceKPOV = async () => {\n    const array = await httpClient.get(server.DATASOURCEKPOV_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Process,\n    }));\n    this.setState({ listDataSourceKPOV: options });\n  };\n\n  getDataSourceMBA = async () => {\n    const array = await httpClient.get(server.DATASOURCEMBA_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Process,\n    }));\n    this.setState({ listDataSourceMBA: options });\n  };\n\n  getDataSourceRotor = async () => {\n    const array = await httpClient.get(server.DATASOURCEROTOR_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Process,\n    }));\n    this.setState({ listDataSourceRotor: options });\n  };\n\n  getDataSourceBase = async () => {\n    const array = await httpClient.get(server.DATASOURCEBASE_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Process,\n    }));\n    this.setState({ listDataSourceBase: options });\n  };\n\n  getKPOV = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPOV_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPOV: options });\n  };\n\n  getKPIV1 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV1_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV1: options });\n  };\n\n  getKPIV2 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV2_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV2: options });\n  };\n\n  getKPIV3 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV3_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV3: options });\n  };\n\n  getKPIV4 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV4_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV4: options });\n  };\n\n  getKPIV5 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV5_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV5: options });\n  };\n\n  getKPIV6 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV6_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV6: options });\n  };\n\n  getKPIV7 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV7_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV7: options });\n  };\n\n  getKPIV8 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV8_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV8: options });\n  };\n\n  getKPIV9 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV9_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV9: options });\n  };\n\n  getKPIV10 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV10_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV10: options });\n  };\n\n  getKPIV11 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV11_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV11: options });\n  };\n\n  getKPIV12 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV12_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV12: options });\n  };\n\n  getKPIV13 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV13_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV13: options });\n  };\n\n  getKPIV14 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV14_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV14: options });\n  };\n\n  getKPIV15 = async () => {\n    const array = await httpClient.get(\n      server.PARAMML_URL + \"/\" + this.state.KPIV15_Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV15: options });\n  };\n\n\n  HandleClickSuccess() {\n    Swal.fire({\n      icon: \"success\",\n      title: \"Success\",\n      type: \"success\",\n      text: \"Please click CSV download to proceed.\",\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Analysis Dataset Dashboard</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      Analysis Dataset Dashboard\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n        </div>\n\n        <div className=\"content\" style={{ paddingTop: 10 }}>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Predict Motor Model</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ model: e.label });\n                              await this.getProductionline();\n                            }}\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"No. of KPIV\" */}\n                      {/* <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>No. of KPIV</label>\n                          <Select placeholder=\"No. of KPIV\" />\n                        </div>\n                      </div> */}\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listProductionline}\n                            value={this.state.productionline[0]}\n                            onChange={async (e) => {\n                              await this.setState({ productionline: [] });\n                              this.state.productionline.push({\n                                label: e.label,\n                              });                              \n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production Line\"\n                          />\n                        </div>\n                      </div>\n\n                       {/* //Select Select Date */}\n                       <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Start Date</label>\n                          <input\n                            value={this.state.startDate}\n                            onChange={(e) => {\n                              this.setState({ startDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-3\"></div>\n\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>KPOV Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceKPOV}\n                            onChange={async (e) => {\n                              await this.setState({ KPOV_Table: e.label });\n                              await this.getKPOV();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>                  \n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>KPOV</label>\n                          <Select\n                            options={this.state.listKPOV}\n                            onChange={async (e) => {\n                              await this.setState({ KPOV: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>                     \n\n                      {/* //Select Select Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Finish Date</label>\n                          <input\n                            value={this.state.finishDate}\n                            onChange={(e) => {\n                              this.setState({ finishDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-3\"></div>\n\n                      <div className=\"col-md-4\">\n                        <h2>MBA KPIV</h2>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <h2>Rotor KPIV</h2>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <h2>SHA KPIV</h2>\n                      </div>\n\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 1 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceMBA}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV1_Table: e.label });\n                              await this.getKPIV1();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>                  \n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 1</label>\n                          <Select\n                            options={this.state.listKPIV1}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV1: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 6 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceRotor}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV6_Table: e.label });\n                              await this.getKPIV6();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>                  \n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 6</label>\n                          <Select\n                            options={this.state.listKPIV6}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV6: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 11 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceBase}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV11_Table: e.label });\n                              await this.getKPIV11();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>                  \n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 11</label>\n                          <Select\n                            options={this.state.listKPIV11}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV11: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 2 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceMBA}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV2_Table: e.label });\n                              await this.getKPIV2();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 2</label>\n                          <Select\n                            options={this.state.listKPIV2}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV2: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 7 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceRotor}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV7_Table: e.label });\n                              await this.getKPIV7();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 7</label>\n                          <Select\n                            options={this.state.listKPIV7}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV7: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 12 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceBase}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV12_Table: e.label });\n                              await this.getKPIV12();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 12</label>\n                          <Select\n                            options={this.state.listKPIV12}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV12: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 3 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceMBA}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV3_Table: e.label });\n                              await this.getKPIV3();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 3</label>\n                          <Select\n                            options={this.state.listKPIV3}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV3: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 8 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceRotor}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV8_Table: e.label });\n                              await this.getKPIV8();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 8</label>\n                          <Select\n                            options={this.state.listKPIV8}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV8: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 13 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceBase}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV13_Table: e.label });\n                              await this.getKPIV13();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 13</label>\n                          <Select\n                            options={this.state.listKPIV13}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV13: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 4 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceMBA}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV4_Table: e.label });\n                              await this.getKPIV4();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 4</label>\n                          <Select\n                            options={this.state.listKPIV4}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV4: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 9 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceRotor}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV9_Table: e.label });\n                              await this.getKPIV9();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 9</label>\n                          <Select\n                            options={this.state.listKPIV9}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV9: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 14 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceBase}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV14_Table: e.label });\n                              await this.getKPIV14();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 14</label>\n                          <Select\n                            options={this.state.listKPIV14}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV14: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 5 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceMBA}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV5_Table: e.label });\n                              await this.getKPIV5();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 5</label>\n                          <Select\n                            options={this.state.listKPIV5}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV5: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 10 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceRotor}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV10_Table: e.label });\n                              await this.getKPIV10();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 10</label>\n                          <Select\n                            options={this.state.listKPIV10}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV10: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"table in database\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 15 Data Source</label>\n                          <Select\n                            options={this.state.listDataSourceBase}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV15_Table: e.label });\n                              await this.getKPIV15();\n                            }}\n                            placeholder=\"Select Process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-2\">\n                        <div className=\"form-group\">\n                          <label>KPIV 15</label>\n                          <Select\n                            options={this.state.listKPIV15}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV15: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={(e) => {\n                            this.setState({ isDisable: true });\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 1800000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetDataML();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.doGetDataML !== \"\") {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  type: \"success\",\n                                  text: \"Please click CSV download to proceed\",\n                                });\n                              } else {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title:\n                                    \"Data loading has encountered some error, please try again\",\n                                });\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Create\n                        </button>\n                      </div>                      \n\n                      <div class=\"col-4\">\n                        <CSVLink data={this.state.allData}>\n                          <button\n                            className=\"btn btn-success\"\n                            style={{ marginTop: 30 }}\n                          >\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n\n                      {/* <div class=\"col-3\">\n                        <CSVLink data={this.state.data}>\n                          <button\n                            className=\"btn btn-danger\"\n                            style={{ marginTop: 30 }}\n                          >\n                            Cancel\n                          </button>\n                        </CSVLink>\n                      </div> */}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataML;","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\n\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nclass DataML2 extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //Motor\n      data: [],\n\n      // criteria\n      model: [],\n      productionline: [],\n      KPOV: [],\n\n      KPIV1: \"blank\",\n      KPIV2: \"blank\",\n      KPIV3: \"blank\",\n      KPIV4: \"blank\",\n      KPIV5: \"blank\",\n      KPIV6: \"blank\",\n      KPIV7: \"blank\",\n      KPIV8: \"blank\",\n      KPIV9: \"blank\",\n      KPIV10: \"blank\",\n      KPIV11: \"blank\",\n      KPIV12: \"blank\",\n      KPIV13: \"blank\",\n      KPIV14: \"blank\",\n      KPIV15: \"blank\",\n\n      selectDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n      startDate: moment().add(\"days\", -89).format(\"yyyy-MM-DD\"),\n      finishDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listKPOV: [],\n      listKPIV1: [],\n      listKPIV2: [],\n      listKPIV3: [],\n      listKPIV4: [],\n      listKPIV5: [],\n      listKPIV6: [],\n      listKPIV7: [],\n      listKPIV8: [],\n      listKPIV9: [],\n      listKPIV10: [],\n      listKPIV11: [],\n      listKPIV12: [],\n      listKPIV13: [],\n      listKPIV14: [],\n      listKPIV15: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n    // this.HandleClick = this.HandleClick.bind(this);\n  }\n\n  componentDidMount = async () => {\n    this.getModel();\n    this.getKPOV();\n    this.getKPIV1();\n    this.getKPIV2();\n    this.getKPIV3();\n    this.getKPIV4();\n    this.getKPIV5();\n    this.getKPIV6();\n    this.getKPIV7();\n    this.getKPIV8();\n    this.getKPIV9();\n    this.getKPIV10();\n    this.getKPIV11();\n    this.getKPIV12();\n    this.getKPIV13();\n    this.getKPIV14();\n    this.getKPIV15();\n  };\n\n  doGetDataML = async () => {\n    let result = await httpClient.get(\n      server.MOTORML2_URL +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.KPOV +\n        \"/\" +\n        this.state.KPIV1 +\n        \"/\" +\n        this.state.KPIV2 +\n        \"/\" +\n        this.state.KPIV3 +\n        \"/\" +\n        this.state.KPIV4 +\n        \"/\" +\n        this.state.KPIV5 +\n        \"/\" +\n        this.state.KPIV6 +\n        \"/\" +\n        this.state.KPIV7 +\n        \"/\" +\n        this.state.KPIV8 +\n        \"/\" +\n        this.state.KPIV9 +\n        \"/\" +\n        this.state.KPIV10 +\n        \"/\" +\n        this.state.KPIV11 +\n        \"/\" +\n        this.state.KPIV12 +\n        \"/\" +\n        this.state.KPIV13 +\n        \"/\" +\n        this.state.KPIV14 +\n        \"/\" +\n        this.state.KPIV15\n    );\n\n    this.setState({\n      data: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MODELML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getProductionline = async () => {\n    const array = await httpClient.get(\n      server.LINEML2_URL + \"/\" + this.state.model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listProductionline: options });\n  };\n\n  getKPOV = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPOV: options });\n  };\n\n  getKPIV1 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV1: options });\n  };\n\n  getKPIV2 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV2: options });\n  };\n\n  getKPIV3 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV3: options });\n  };\n\n  getKPIV4 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV4: options });\n  };\n\n  getKPIV5 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV5: options });\n  };\n\n  getKPIV6 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV6: options });\n  };\n\n  getKPIV7 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV7: options });\n  };\n\n  getKPIV8 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV8: options });\n  };\n\n  getKPIV9 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV9: options });\n  };\n\n  getKPIV10 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV10: options });\n  };\n\n  getKPIV11 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV11: options });\n  };\n\n  getKPIV12 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV12: options });\n  };\n\n  getKPIV13 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV13: options });\n  };\n\n  getKPIV14 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV14: options });\n  };\n\n  getKPIV15 = async () => {\n    const array = await httpClient.get(server.PARAMML2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Parameter,\n    }));\n    this.setState({ listKPIV15: options });\n  };\n\n  HandleClickSuccess() {\n    Swal.fire({\n      icon: \"success\",\n      title: \"Success\",\n      type: \"success\",\n      text: \"Please click CSV download to proceed.\",\n    });\n  }\n\n  handleReset = () => {\n    this.setState({\n      itemvalues: [{}],\n    });\n  };\n\n  render() {\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Analysis Dataset Dashboard</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      Analysis Dataset Dashboard\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n        </div>\n\n        <div className=\"content\" style={{ paddingTop: 10 }}>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Predict Motor Model</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ model: e.label });\n                              await this.getProductionline();\n                              await this.setState({\n                                productionline: [\n                                  { label: \"Select Production Line\" },\n                                ],\n                              });\n                            }}\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"No. of KPIV\" */}\n                      {/* <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>No. of KPIV</label>\n                          <Select placeholder=\"No. of KPIV\" />\n                        </div>\n                      </div> */}\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listProductionline}\n                            value={this.state.productionline[0]}\n                            onChange={async (e) => {\n                              await this.setState({ productionline: [] });\n                              this.state.productionline.push({\n                                label: e.label,\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production Line\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Select Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Start Date</label>\n                          <input\n                            value={this.state.startDate}\n                            onChange={(e) => {\n                              this.setState({ startDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-3\"></div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>KPOV</label>\n                          <Select\n                            options={this.state.listKPOV}\n                            onChange={async (e) => {\n                              await this.setState({ KPOV: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-3\"></div>\n\n                      {/* //Select Select Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Finish Date</label>\n                          <input\n                            value={this.state.finishDate}\n                            onChange={(e) => {\n                              this.setState({ finishDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-3\"></div>\n\n                      {/* <div className=\"col-md-4\">\n                        <h2>MBA KPIV</h2>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <h2>Rotor KPIV</h2>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <h2>SHA KPIV</h2>\n                      </div> */}\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 1</label>\n                          <Select\n                            options={this.state.listKPIV1}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV1: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 6</label>\n                          <Select\n                            options={this.state.listKPIV6}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV6: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 11</label>\n                          <Select\n                            options={this.state.listKPIV11}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV11: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 2</label>\n                          <Select\n                            options={this.state.listKPIV2}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV2: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 7</label>\n                          <Select\n                            options={this.state.listKPIV7}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV7: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 12</label>\n                          <Select\n                            options={this.state.listKPIV12}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV12: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 3</label>\n                          <Select\n                            options={this.state.listKPIV3}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV3: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 8</label>\n                          <Select\n                            options={this.state.listKPIV8}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV8: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 13</label>\n                          <Select\n                            options={this.state.listKPIV13}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV13: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 4</label>\n                          <Select\n                            options={this.state.listKPIV4}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV4: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 9</label>\n                          <Select\n                            options={this.state.listKPIV9}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV9: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 14</label>\n                          <Select\n                            options={this.state.listKPIV14}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV14: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 5</label>\n                          <Select\n                            options={this.state.listKPIV5}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV5: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 10</label>\n                          <Select\n                            options={this.state.listKPIV10}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV10: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>KPIV 15</label>\n                          <Select\n                            options={this.state.listKPIV15}\n                            onChange={async (e) => {\n                              await this.setState({ KPIV15: e.label });\n                            }}\n                            placeholder=\"Select Parameter\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={(e) => {\n                            this.setState({ isDisable: true });\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 6000000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetDataML();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.doGetDataML !== \"\") {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  type: \"success\",\n                                  text: \"Please click CSV download to proceed\",\n                                });\n                              } else {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title:\n                                    \"Data loading has encountered some error, please try again\",\n                                });\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Create\n                        </button>\n                      </div>\n\n                      <div class=\"col-4\">\n                        <CSVLink data={this.state.data}>\n                          <button\n                            className=\"btn btn-success\"\n                            style={{ marginTop: 30 }}\n                          >\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataML2;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass QAInspection extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      model: { label: \"**ALL**\" },\n      insType: [{ label: \"**ALL**\" }],\n      report: [],\n      QANumber: \"\",\n      report2: [],\n\n      Raw_Dat2: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listModel: [],\n      listInsType: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getInsType();\n  };\n\n  // report with select model,date,type\n  doGetDataReport = async () => {\n    const modelLabel =\n      this.state.model.label === \"**ALL**\" ? \"**ALL**\" : this.state.model.label;\n    const result = await httpClient.get(\n      server.REPORT_URL +\n        \"/\" +\n        modelLabel +\n        \"/\" +\n        this.state.insType[0].label +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n  doGetDataReport2 = async () => {\n    const result = await httpClient.get(\n      server.REPORT2_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData2;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat2: rawData[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  renderReport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Shift\"]}</td>\n            <td>{item[\"Model_NO\"]}</td>\n            <td>{item[\"Model_group\"]}</td>\n            <td>{item[\"Model_Name\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"QA_Number\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QA_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"MO_Number\"]}</td>\n            <td>{item[\"Date_Code\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"MO_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"Inspection_Type\"]}</td>\n            <td>{item[\"Inspection_Round\"]}</td>\n            <td>{item[\"Inspection_Result\"]}</td>\n            <td>{item[\"Sampling_Level\"]}</td>\n            <td>{item[\"Sampling_QTY\"]}</td>\n            <td>{item[\"Base\"]}</td>\n            <td>{item[\"Ramp\"]}</td>\n            <td>{item[\"Hub\"]}</td>\n            <td>{item[\"Magnet\"]}</td>\n            <td>{item[\"FPC\"]}</td>\n            <td>{item[\"Diverter\"]}</td>\n            <td>{item[\"Crash_Stop\"]}</td>\n            <td>{item[\"Supporter_Name\"]}</td>\n            <td>{item[\"Record_By\"]}</td>\n            <td>{item[\"Visual_Name\"]}</td>\n            <td>{item[\"Visual_Time\"]}</td>\n            <td>{item[\"MC_CO2\"]}</td>\n            <td>{item[\"Emp_CO2\"]}</td>\n            <td>{item[\"SpecialControl1\"]}</td>\n            <td>{item[\"SpecialControl2\"]}</td>\n            <td>{item[\"SpecialControl3\"]}</td>\n            <td>{item[\"SpecialControl4\"]}</td>\n            <td>{item[\"SpecialControl5\"]}</td>\n            <td>{item[\"Inspection_Number\"]}</td>\n            <td>{item[\"Location\"]}</td>\n            <td>{item[\"Defect_NG\"]}</td>\n            <td>{item[\"Detail\"]}</td>\n            <td>{item[\"QTY\"]}</td>\n            <td>{item[\"Step\"]}</td>\n            <td>{item[\"Reject_level\"]}</td>\n            <td>{item[\"Major_Category\"]}</td>\n            <td>{item[\"Sorting_criteria\"]}</td>\n            <td>{item[\"Time_VMI\"]}</td>\n            <td>{item[\"Remark_VMI\"]}</td>\n            <td>{item[\"REV\"]}</td>\n            <td>{item[\"Remark\"]}</td>\n            <td>{item[\"Remark2_QA\"]}</td>\n    \n          </tr>\n        ));\n      }\n    }\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MODELQA_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model_group,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getInsType = async () => {\n    const modelLabel =\n    this.state.model.label === \"**ALL**\"\n      ? \"**ALL**\"\n      : this.state.model.label;\n    const array = await httpClient.get(\n      server.INSTYPE_URL + \"/\" + modelLabel\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.InspectionType,\n    }));\n    this.setState({ listInsType: options });\n  };\n\n  renderReport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Shift\"]}</td>\n            <td>{item[\"Model_NO\"]}</td>\n            <td>{item[\"Model_group\"]}</td>\n            <td>{item[\"Model_Name\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"QA_Number\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QA_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"MO_Number\"]}</td>\n            <td>{item[\"Date_Code\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"MO_QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"Inspection_Type\"]}</td>\n            <td>{item[\"Inspection_Round\"]}</td>\n            <td>{item[\"Inspection_Result\"]}</td>\n            <td>{item[\"Sampling_Level\"]}</td>\n            <td>{item[\"Sampling_QTY\"]}</td>\n            <td>{item[\"Base\"]}</td>\n            <td>{item[\"Ramp\"]}</td>\n            <td>{item[\"Hub\"]}</td>\n            <td>{item[\"Magnet\"]}</td>\n            <td>{item[\"FPC\"]}</td>\n            <td>{item[\"Diverter\"]}</td>\n            <td>{item[\"Crash_Stop\"]}</td>\n            <td>{item[\"Supporter_Name\"]}</td>\n            <td>{item[\"Record_By\"]}</td>\n            <td>{item[\"Visual_Name\"]}</td>\n            <td>{item[\"Visual_Time\"]}</td>\n            <td>{item[\"MC_CO2\"]}</td>\n            <td>{item[\"Emp_CO2\"]}</td>\n            <td>{item[\"SpecialControl1\"]}</td>\n            <td>{item[\"SpecialControl2\"]}</td>\n            <td>{item[\"SpecialControl3\"]}</td>\n            <td>{item[\"SpecialControl4\"]}</td>\n            <td>{item[\"SpecialControl5\"]}</td>\n            <td>{item[\"Inspection_Number\"]}</td>\n            <td>{item[\"Location\"]}</td>\n            <td>{item[\"Defect_NG\"]}</td>\n            <td>{item[\"Detail\"]}</td>\n            <td>{item[\"QTY\"]}</td>\n            <td>{item[\"Step\"]}</td>\n            <td>{item[\"Reject_level\"]}</td>\n            <td>{item[\"Major_Category\"]}</td>\n            <td>{item[\"Sorting_criteria\"]}</td>\n            <td>{item[\"Time_VMI\"]}</td>\n            <td>{item[\"Remark_VMI\"]}</td>\n            <td>{item[\"REV\"]}</td>\n            <td>{item[\"Remark\"]}</td>\n            <td>{item[\"Remark2_QA\"]}</td>\n    \n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>QA by Model & Number </h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">QA By Model </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <div></div>\n                        <label>Model group</label>\n                        <Select\n                          options={this.state.listModel}\n                          value={this.state.model}\n                          onChange={async (e) => {\n                            await this.setState({ model: e });\n                            await this.getInsType();\n                            await this.setState({\n                              insType: [{ label: \"Select Type\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                         \n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Type</label>\n                        <Select\n                          options={this.state.listInsType}\n                          value={this.state.insType[0]}\n                          onChange={async (e) => {\n                            await this.setState({ insType: [] });\n                            this.state.insType.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Type\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>\n                          By Daily Select From &nbsp;\n                 \n                        </label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Finish Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ QANumber: \"\" });\n                          this.setState({ report2: \"\" });\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Model_group.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Model.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n\n                    <div className=\"col-md-3\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"QA_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download by Model\n                        </button>\n                      </CSVLink>\n                    </div>\n\n\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Scan QA Number</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-3\">\n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.QANumber}\n                          onChange={async (e) => {\n                            await this.setState({\n                              QANumber: e.target.value,\n                            });\n\n                            await this.setState({\n                              insType: [{ label: \"Select Type\" }],\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Scan QANumber here\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ report: \"\" });\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport2();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report2.length > 0) {\n                              if (\n                                this.state.report2[0].Model_group.length > 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report2[0].Model_group.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                }).then(() => {\n                                  // รีเฟรชหน้าใหม่\n                                window.location.reload();\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              }).then(() => {\n                                // รีเฟรชหน้าใหม่\n                                window.location.reload();\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        // style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-3\">\n                      <CSVLink\n                        data={this.state.Raw_Dat2}\n                        filename={\"QA_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          // style={{ marginTop: 30 }}\n                        >\n                          Download by Lot QA\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 500 ,\n                            zIndex: \"3\",\n                            position: \"relative\",\n                            zIndex: \"0\",}}\n                     \n                        >\n                          <table className=\" table  text-nowrap table-hover table-head-fixed\">\n                            <thead>\n                              <tr Align=\"Center\">\n                                <th width=\"175\">Date</th>\n                                <th width=\"175\">Shift</th>\n                                <th width=\"175\">Model NO.</th>\n                                <th width=\"175\">Model group</th>\n                                <th width=\"175\">Model Name</th>\n                                <th width=\"175\">Line</th>\n                                <th width=\"175\">QA Number</th>\n                                <th width=\"175\">QA QTY</th>\n                                <th width=\"175\">MO Number</th>\n                                <th width=\"175\">Date Code</th>\n                                <th width=\"175\">MO QTY</th>\n                                <th width=\"175\">Inspection Type</th>\n                                <th width=\"175\">Inspection Round</th>\n                                <th width=\"175\">Inspection Result</th>\n                                <th width=\"175\">Sampling Level</th>\n                                <th width=\"175\">Sampling QTY</th>\n                                <th width=\"175\">Base</th>\n                                <th width=\"175\">Ramp</th>\n                                <th width=\"175\">Hub</th>\n                                <th width=\"175\">Magnet</th>\n                                <th width=\"175\">FPC</th>\n                                <th width=\"175\">Diverter</th>\n                                <th width=\"175\">Crash Stop</th>\n                                <th width=\"175\">Supporter Name</th>\n                                <th width=\"175\">Record By</th>\n                                <th width=\"175\">Visual Name</th>\n                                <th width=\"175\">Visual Time</th>\n                                <th width=\"175\">MC CO2</th>\n                                <th width=\"175\">Emp CO2</th>\n                                <th width=\"175\">SpecialControl1</th>\n                                <th width=\"175\">SpecialControl2</th>\n                                <th width=\"175\">SpecialControl3</th>\n                                <th width=\"175\">SpecialControl4</th>\n                                <th width=\"175\">SpecialControl5</th>\n                                <th width=\"175\">Inspection Number</th>\n                                <th width=\"175\">Location </th>\n                                <th width=\"175\">Defect NG </th>\n                                <th width=\"175\">Detail </th>\n                                <th width=\"175\">QTY </th>\n                                <th width=\"175\">Step </th>\n                                <th width=\"175\">Reject level </th>\n                                <th width=\"175\">Major Category </th>\n                                <th width=\"175\">Sorting criteria</th>\n                                <th width=\"175\">Time VMI</th>\n                                <th width=\"175\">Remark VMI</th>\n                                <th width=\"175\">REV</th>\n                                <th width=\"175\">QA Remark 1</th>\n                                <th width=\"175\">QA Remark 2</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport()}</tbody>\n                            <tbody>{this.renderReport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QAInspection;\n","import React, { Component } from \"react\";\r\nimport { server } from \"../../constants\";\r\nimport { httpClient } from \"../../utils/HttpClient\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass Result extends Component { \r\n  constructor(props) { \r\n    super(props); \r\n\r\n    this.state = { \r\n      data: null, \r\n    }; \r\n  } \r\n\r\n  componentDidMount() { \r\n    this.getData(); \r\n  } \r\n\r\n  getData = async () => { \r\n    let result = await httpClient.get(server.queryuser_URL); \r\n    console.log(result.data.result); \r\n    this.setState({ data: result.data.result }); \r\n  }; \r\n\r\n  renderTableData() { \r\n    if (this.state.data !== null) \r\n      return this.state.data.map((item) => ( \r\n        <tr> \r\n          <td>{item.username}</td> \r\n          <td>{item.empNumber}</td> \r\n          <td>{item.position}</td> \r\n          <td>{item.email}</td> \r\n          \r\n          <td> \r\n            <button \r\n              onClick={async (e) => { \r\n                e.preventDefault(); \r\n                Swal \r\n                  .fire({ \r\n                    title: \"Are you sure?\", \r\n                    text: \"You want to delete this!\", \r\n                    icon: \"warning\", \r\n                    showCancelButton: true, \r\n                    confirmButtonColor: \"#3085d6\", \r\n                    cancelButtonColor: \"#d33\", \r\n                    confirmButtonText: \"Yes, delete it!\", \r\n                  }) \r\n                  .then(async (result) => { \r\n                    if (result.isConfirmed) { \r\n                      await httpClient.delete(server.queryuser_URL, { \r\n                        data: { username: item.username }, \r\n                      }); \r\n                      this.getData(); \r\n                      \r\n                      Swal.fire( \r\n                        \"Deleted!\", \r\n                        \"Your file has been deleted.\", \r\n                        \"success\" \r\n                      ); \r\n                    } \r\n                  }); \r\n                \r\n              }} \r\n            > \r\n              Delete{\" \"} \r\n            </button> \r\n          </td> \r\n        </tr> \r\n      )); \r\n  } \r\n\r\n  render() { \r\n    return ( \r\n\r\n      <div class=\"content-wrapper\">\r\n      <div className=\"content\" style={{ paddingTop: 70 }}>\r\n      <div className=\"content-wrapper\"> \r\n        Result \r\n        <div> \r\n          <table> \r\n            <thead> \r\n              <tr> \r\n                <th>username</th> \r\n                <th>Employee No.</th> \r\n                <th>Position</th>  \r\n                <th>Email</th> \r\n           \r\n              </tr> \r\n            </thead> \r\n\r\n            <tbody>{this.renderTableData()}</tbody> \r\n          </table> \r\n        </div> \r\n      </div> \r\n      </div> \r\n      </div> \r\n    ); \r\n  } \r\n} \r\n\r\nexport default Result;","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass QAInspectionByQANo extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      QANumber: \"\",\n      report2: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listModel: [],\n      listInsType: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  doGetDataReport2 = async () => {\n    const result = await httpClient.get(\n      server.REPORT2_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  renderReport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr>\n          <td>{item[\"Date\"]}</td>\n          <td>{item[\"Shift\"]}</td>\n          <td>{item[\"Model_NO\"]}</td>\n          <td>{item[\"Model_group\"]}</td>\n          <td>{item[\"Model_Name\"]}</td>\n          <td>{item[\"Line\"]}</td>\n          <td>{item[\"QA_Number\"]}</td>\n          <td align=\"RIGHT\">{Number(item[\"QA_QTY\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n          <td>{item[\"MO_Number\"]}</td>\n          <td>{item[\"Date_Code\"]}</td>\n          <td align=\"RIGHT\">{Number(item[\"MO_QTY\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n          <td>{item[\"Inspection_Type\"]}</td>\n          <td>{item[\"Inspection_Round\"]}</td>\n          <td>{item[\"Inspection_Result\"]}</td>\n          <td>{item[\"Sampling_Level\"]}</td>\n          <td>{item[\"Sampling_QTY\"]}</td>\n          <td>{item[\"Base\"]}</td>\n          <td>{item[\"Ramp\"]}</td>\n          <td>{item[\"Hub\"]}</td>\n          <td>{item[\"Magnet\"]}</td>\n          <td>{item[\"FPC\"]}</td>\n          <td>{item[\"Diverter\"]}</td>\n          <td>{item[\"Crash_Stop\"]}</td>\n          <td>{item[\"Supporter_Name\"]}</td>\n          <td>{item[\"Record_By\"]}</td>\n          <td>{item[\"Visual_Name\"]}</td>\n          <td>{item[\"Visual_Time\"]}</td>\n          <td>{item[\"MC_CO2\"]}</td>\n          <td>{item[\"Emp_CO2\"]}</td>\n          <td>{item[\"SpecialControl1\"]}</td>\n          <td>{item[\"SpecialControl2\"]}</td>\n          <td>{item[\"SpecialControl3\"]}</td>\n          <td>{item[\"SpecialControl4\"]}</td>\n          <td>{item[\"SpecialControl5\"]}</td>\n          <td>{item[\"Inspection_Number\"]}</td>\n          <td>{item[\"Location\"]}</td>\n          <td>{item[\"Defect_NG\"]}</td>\n          <td>{item[\"Detail\"]}</td>\n          <td>{item[\"QTY\"]}</td>\n          <td>{item[\"Step\"]}</td>\n          <td>{item[\"Reject_level\"]}</td>\n          <td>{item[\"Major_Category\"]}</td>\n          <td>{item[\"Sorting_criteria\"]}</td>\n          <td>{item[\"Time_VMI\"]}</td>\n          <td>{item[\"Remark_VMI\"]}</td>\n          <td>{item[\"REV\"]}</td>\n          <td>{item[\"Remark\"]}</td>\n        </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>QA By QA Number</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">QA By QA Number</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Scan QA Number</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-3\">\n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.QANumber}\n                          onChange={async (e) => {\n                            await this.setState({\n                              QANumber: e.target.value,\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Scan QANumber here\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport2();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report2.length > 0) {\n                              if (this.state.report2[0].Model_group.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report2[0].Model_group.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        // style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink data={this.state.Raw_Dat}\n                      filename={'QA_report.csv'}>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          // style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                            <tr Align=\"Center\" >\n                              <th width=\"175\">Date</th>\n                                <th width=\"175\">Shift</th>\n                                <th width=\"175\">Model NO.</th>\n                                <th width=\"175\">Model group</th>\n                                <th width=\"175\">Model Name</th>\n                                <th width=\"175\">Line</th>\n                                <th width=\"175\">QA Number</th>\n                                <th width=\"175\">QA QTY</th>\n                                <th width=\"175\">MO Number</th>\n                                <th width=\"175\">Date Code</th>\n                                <th width=\"175\">MO_QTY</th>\n                                <th width=\"175\">Inspection Type</th>\n                                <th width=\"175\">Inspection Round</th>\n                                <th width=\"175\">Inspection Result</th>                                \n                                <th width=\"175\">Sampling Level</th>\n                                <th width=\"175\">Sampling QTY</th>\n                                <th width=\"175\">Base</th>\n                                <th width=\"175\">Ramp</th>\n                                <th width=\"175\">Hub</th>\n                                <th width=\"175\">Magnet</th>\n                                <th width=\"175\">FPC</th>\n                                <th width=\"175\">Diverter</th>\n                                <th width=\"175\">Crash Stop</th>\n                                <th width=\"175\">Supporter Name</th>\n                                <th width=\"175\">Record By</th>\n                                <th width=\"175\">Visual Name</th>\n                                <th width=\"175\">Visual Time</th>\n                                <th width=\"175\">MC CO2</th>\n                                <th width=\"175\">Emp CO2</th>\n                                <th width=\"175\">SpecialControl1</th>\n                                <th width=\"175\">SpecialControl2</th>\n                                <th width=\"175\">SpecialControl3</th>\n                                <th width=\"175\">SpecialControl4</th>\n                                <th width=\"175\">SpecialControl5</th>\n                                <th width=\"175\">Inspection Number</th>\n                                <th width=\"175\">Location </th>\n                                <th width=\"175\">Defect NG </th>\n                                <th width=\"175\">Detail </th>\n                                <th width=\"175\">QTY </th>\n                                <th width=\"175\">Step </th>\n                                <th width=\"175\">Reject level </th>\n                                <th width=\"175\">Major Category </th>\n                                <th width=\"175\">Sorting criteria</th>\n                                <th width=\"175\">Time VMI</th>\n                                <th width=\"175\">Remark VMI</th>\n                                <th width=\"175\">REV</th>\n                                <th width=\"175\">Remark</th>\n                                \n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QAInspectionByQANo;\n","import React, { Component } from \"react\";\nimport { key } from \"../../constants\";\nimport { Link } from \"react-router-dom\";\n\n\nclass sidemenu extends Component {\n  render() {\n    return (\n<aside\n  className=\"main-sidebar sidebar-dark-primary elevation-4 open\"\n  style={{ top: 69 }}\n>\n        <a href=\"../index3.html\" className=\"brand-link\">\n          <span className=\"brand-text font-weight-light\">I-Spindle 4.0</span>\n        </a>\n        <div className=\"sidebar os-host os-theme-light os-host-resize-disabled os-host-scrollbar-horizontal-hidden os-host-scrollbar-vertical-hidden os-host-transition\">\n          <div className=\"os-resize-observer-host observed\">\n            <div\n              className=\"os-resize-observer\"\n              style={{ left: 0, right: \"auto\" }}\n            />\n          </div>\n          <div\n            className=\"os-size-auto-observer observed\"\n            style={{ height: \"calc(100% + 1px)\", float: \"left\" }}\n          >\n            <div className=\"os-resize-observer\" />\n          </div>\n          <div className=\"os-content-glue\" style={{ margin: \"0px -8px\" }} />\n          <div className=\"os-padding\">\n            <div className=\"os-viewport os-viewport-native-scrollbars-invisible\">\n              <div\n                className=\"os-content\"\n                style={{\n                  padding: \"0px 8px\",\n                  height: \"100%\",\n                  width: \"100%\",\n                  top: 20,\n                }}\n              >\n                <div className=\"form-inline\">\n                  <div className=\"input-group\" data-widget=\"sidebar-search\">\n                    <input\n                      className=\"form-control form-control-sidebar\"\n                      type=\"search\"\n                      placeholder=\"Search\"\n                      aria-label=\"Search\"\n                    />\n                    <div className=\"input-group-append\">\n                      <button className=\"btn btn-sidebar\">\n                        <i className=\"fas fa-search fa-fw\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"sidebar-search-results\">\n                    <div className=\"list-group\">\n                      <a href=\"#Search1\" className=\"list-group-item\">\n                        <div className=\"search-title\">\n                          <strong className=\"text-light\" />N\n                          <strong className=\"text-light\" />o\n                          <strong className=\"text-light\" />{\" \"}\n                          <strong className=\"text-light\" />e\n                          <strong className=\"text-light\" />l\n                          <strong className=\"text-light\" />e\n                          <strong className=\"text-light\" />m\n                          <strong className=\"text-light\" />e\n                          <strong className=\"text-light\" />n\n                          <strong className=\"text-light\" />t\n                          <strong className=\"text-light\" />{\" \"}\n                          <strong className=\"text-light\" />f\n                          <strong className=\"text-light\" />o\n                          <strong className=\"text-light\" />u\n                          <strong className=\"text-light\" />n\n                          <strong className=\"text-light\" />d\n                          <strong className=\"text-light\" />!\n                          <strong className=\"text-light\" />\n                        </div>\n                        <div className=\"search-path\" />\n                      </a>\n                      <a href=\"#Search2\" className=\"list-group-item\">\n                        <div className=\"search-title\">\n                          <strong className=\"text-light\" />N\n                          <strong className=\"text-light\" />o\n                          <strong className=\"text-light\" />{\" \"}\n                          <strong className=\"text-light\" />e\n                          <strong className=\"text-light\" />l\n                          <strong className=\"text-light\" />e\n                          <strong className=\"text-light\" />m\n                          <strong className=\"text-light\" />e\n                          <strong className=\"text-light\" />n\n                          <strong className=\"text-light\" />t\n                          <strong className=\"text-light\" />{\" \"}\n                          <strong className=\"text-light\" />f\n                          <strong className=\"text-light\" />o\n                          <strong className=\"text-light\" />u\n                          <strong className=\"text-light\" />n\n                          <strong className=\"text-light\" />d\n                          <strong className=\"text-light\" />!\n                          <strong className=\"text-light\" />\n                        </div>\n                        <div className=\"search-path\" />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <nav className=\"mt-2\">\n                  <ul\n                    className=\"nav nav-pills nav-sidebar flex-column\"\n                    data-widget=\"treeview\"\n                    role=\"menu\"\n                    data-accordion=\"false\"\n                  >\n                        <li className=\"nav-item\">\n                          <Link to=\"/Engineer\" className=\"nav-link\">\n                     \n                            Engineer\n                          </Link>\n                        </li> \n                        <li className=\"nav-item\">\n                          <Link to=\"/Quality\" className=\"nav-link\">\n                          \n                           Quality\n                          </Link>\n                        </li> \n                        <li className=\"nav-item\">\n                          <Link to=\"/Production\" className=\"nav-link\">\n                          \n                           Production\n                          </Link>\n                        </li> \n                        <li className=\"nav-item\">\n                          <Link to=\"/PCMC\" className=\"nav-link\">\n                         \n                          PCMC\n                          </Link>\n                        </li> \n                        <li className=\"nav-item\">\n                          <Link to=\"/PE_MM\" className=\"nav-link\">\n                         \n                           PE&MM\n                          </Link>\n                        </li> \n                        <li className=\"nav-item\">\n                          <Link to=\"/Data_Analysis\" className=\"nav-link\">\n                         \n                          Data Analysis\n                          </Link>\n                        </li> \n                 \n\n                    {/* admin */}\n                    <li className=\"nav-item\">\n                      <Link to=\"/information\" className=\"nav-link\">\n                        <i className=\"nav-icon fas fa-user-cog\" />\n                        Specification Control (Admin)\n                      </Link>\n                    </li>\n                  </ul>\n\n\n                  {/* Insert Logout button */}\n                  <div className=\"card-footer\">\n                    <a href=\"/login\" className=\"nav-link \">\n                      <button\n                        onClick={() => {\n                          localStorage.removeItem(key.LOGIN_PASSED);\n                          localStorage.removeItem(key.JWT_TOKEN);\n                          localStorage.removeItem(key.USER_LV);\n                          localStorage.removeItem(key.USER_NAME);\n                        }}\n                        className=\"btn btn-danger\"\n                      >\n                        Logout\n                      </button>\n                    </a>\n                  </div>\n                </nav>\n              </div>\n            </div>\n          </div>\n          <div className=\"os-scrollbar os-scrollbar-horizontal os-scrollbar-unusable os-scrollbar-auto-hidden\">\n            <div className=\"os-scrollbar-track\">\n              <div\n                className=\"os-scrollbar-handle\"\n                style={{ width: \"100%\", transform: \"translate(0px, 0px)\" }}\n              />\n            </div>\n          </div>\n          <div className=\"os-scrollbar os-scrollbar-vertical os-scrollbar-unusable os-scrollbar-auto-hidden\">\n            <div className=\"os-scrollbar-track\">\n              <div\n                className=\"os-scrollbar-handle\"\n                style={{ height: \"100%\", transform: \"translate(0px, 0px)\" }}\n              />\n            </div>\n          </div>\n          <div className=\"os-scrollbar-corner\" />\n        </div>\n      </aside>\n    );\n  }\n}\n\nexport default sidemenu;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"main-footer\">\n        CopyRight @ 2017-2018 NMB-MINEBEA THAI LTD.\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Swal from \"sweetalert2\";\nimport moment from 'moment';\nimport ReactApexChart from \"react-apexcharts\";\nvar ss = require('simple-statistics')\n\nclass GRotorLine extends Component {\n\n  format = (num, decimals) => num.toLocaleString('en-US', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n });\n\n  componentDidMount() {\n    Swal.fire({\n      icon: \"info\",\n      title: \"Hello!\",\n      html: \"\",\n      text: \"Please ask me how I'm feeling today\",\n      confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Okay!',\n    }).then(() => {\n      let timerInterval;\n      Swal.fire({\n        title: \"Let me think for a bit\",\n        timer: 60000,\n        // timerProgressBar: true,\n        didOpen: async () => {\n          Swal.showLoading();\n          await this.doGetData();\n          Swal.close();\n        },\n        willClose: () => {\n          clearInterval(timerInterval);\n        },\n      }).then(() => {\n        //Header names\n        this.setState({ header: \"This is how I'm feeling today!\" });\n        this.setState({ AxialPlay: \"Axial Play: \" });\n        this.setState({ OilFill: \"Oil Fill:  \" });\n        this.setState({ Endcap: \"Endcap:  \" });\n        this.setState({ INT: \"INT: \" });\n\n        //Set status & color conditioning\n        this.setState({ OF_Status: \"Placeholder\" });\n        this.setState({ EC_Status: \"Placeholder\"});\n        this.setState({ INT_Status: \"Placeholder\" });\n\n        Swal.fire({\n          title: \"Thank you for waiting!\",\n          text: \"please check out finer details below\"\n        })\n      });\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n      dateSelect: moment().add(\"days\", -1).format(\"DD-MM-yyyy\"),\n\n      // Header for each stations\n      header: \"\",\n      header_ask: \"\",\n      button: \"Click Here!\",\n      Axialplay: \"\",\n      OilFill: \"\",\n      Endcap: \"\",\n      INT: \"\",\n\n      // Status of each stations\n      AP1_Status: \"\",\n      AP2_Status: \"\",\n      AP3_Status: \"\",\n      OF_Status: \"\",\n      EC_Status: \"\",\n      INT_Status: \"\",\n\n      // Color of status\n      AP1_Color: \"\",\n      AP2_Color: \"\",\n      AP3_Color: \"\",\n      OF_Color: \"\",\n      EC_Color: \"\",\n      INT_Color: \"\",\n\n      //BoxPlot\n      series: [\n        {\n          type: 'boxPlot', \n          data: [\n            {\n              x: 'Press 1',\n              y: []\n            },\n            {\n              x: 'Press 2',\n              y: []\n            },\n            {\n              x: 'Press 3',\n              y: []\n            }\n          ]}\n      ],\n      options: {\n        chart: {\n          type: 'boxPlot',\n          height: 350\n        },\n        title: {\n          text: 'Basic BoxPlot Chart',\n          align: 'left'\n        },\n        plotOptions: {\n          boxPlot: {\n            colors: {\n              upper: '#f66e76',\n              lower: '#f88e96'\n            }\n          }\n        }\n      },\n\n\n      // Data of each stations\n      // AP1\n      AP1_Data: [],\n      AP1_DataAVG: [],\n      AP1_Production: 0,\n      AP1_Axial_Play: [],\n      AP1_Bad_Cycle_Time: [],\n      AP1_Bad_Judge: [],\n      AP1_Bad_AP_Over: [],\n      AP1_Bad_AP_Under: [],\n      AP1_Bad_Pre_AP_Over: [],\n      AP1_Bad_Pre_AP_Under: [],\n      AP1_Bad_AP_Before_Over: [],\n      AP1_Bad_AP_Before_Under: [],\n      AP1_Bad_AP_After_Over: [],\n      AP1_Bad_AP_After_Under: [],\n      AP1_Bad_Adjustments: [],\n      AP1_Bad_Cycle_Time_P: null,\n      AP1_Bad_Judge_P: null,\n      AP1_Bad_AP_Over_P: null,\n      AP1_Bad_AP_Under_P: null,\n      AP1_Bad_Pre_AP_Over_P: null,\n      AP1_Bad_Pre_AP_Under_P: null,\n      AP1_Bad_AP_Before_Over_P: null,\n      AP1_Bad_AP_Before_Under_P: null,\n      AP1_Bad_AP_After_Over_P: null,\n      AP1_Bad_AP_After_Under_P: null,\n      AP1_Bad_Adjustments_P: null,\n\n      // AP2\n      AP2_Data: [],\n      AP2_DataAVG: [],\n      AP2_Production: 0,\n      AP2_Axial_Play: [],\n      AP2_Bad_Cycle_Time: [],\n      AP2_Bad_Judge: [],\n      AP2_Bad_AP_Over: [],\n      AP2_Bad_AP_Under: [],\n      AP2_Bad_Pre_AP_Over: [],\n      AP2_Bad_Pre_AP_Under: [],\n      AP2_Bad_AP_Before_Over: [],\n      AP2_Bad_AP_Before_Under: [],\n      AP2_Bad_AP_After_Over: [],\n      AP2_Bad_AP_After_Under: [],\n      AP2_Bad_Adjustments: [],\n      AP2_Bad_Cycle_Time_P: null,\n      AP2_Bad_Judge_P: null,\n      AP2_Bad_AP_Over_P: null,\n      AP2_Bad_AP_Under_P: null,\n      AP2_Bad_Pre_AP_Over_P: null,\n      AP2_Bad_Pre_AP_Under_P: null,\n      AP2_Bad_AP_Before_Over_P: null,\n      AP2_Bad_AP_Before_Under_P: null,\n      AP2_Bad_AP_After_Over_P: null,\n      AP2_Bad_AP_After_Under_P: null,\n      AP2_Bad_Adjustments_P: null,\n\n      // AP3\n      AP3_Data: [],\n      AP3_DataAVG: [],\n      AP3_Production: 0,\n      AP3_Axial_Play: [],\n      AP3_Bad_Cycle_Time: [],\n      AP3_Bad_Judge: [],\n      AP3_Bad_AP_Over: [],\n      AP3_Bad_AP_Under: [],\n      AP3_Bad_Pre_AP_Over: [],\n      AP3_Bad_Pre_AP_Under: [],\n      AP3_Bad_AP_Before_Over: [],\n      AP3_Bad_AP_Before_Under: [],\n      AP3_Bad_AP_After_Over: [],\n      AP3_Bad_AP_After_Under: [],\n      AP3_Bad_Adjustments: [],\n      AP3_Bad_Cycle_Time_P: null,\n      AP3_Bad_Judge_P: null,\n      AP3_Bad_AP_Over_P: null,\n      AP3_Bad_AP_Under_P: null,\n      AP3_Bad_Pre_AP_Over_P: null,\n      AP3_Bad_Pre_AP_Under_P: null,\n      AP3_Bad_AP_Before_Over_P: null,\n      AP3_Bad_AP_Before_Under_P: null,\n      AP3_Bad_AP_After_Over_P: null,\n      AP3_Bad_AP_After_Under_P: null,\n      AP3_Bad_Adjustments_P: null,\n\n\n      // Boxplot AP\n\n      AP1_Max: null,\n      AP1_Q3: null,\n      AP1_Med: null,\n      AP1_Q1: null,\n      AP1_Min: null,\n\n      AP2_Max: null,\n      AP2_Q3: null,\n      AP2_Med: null,\n      AP2_Q1: null,\n      AP2_Min: null,\n\n      AP3_Max: null,\n      AP3_Q3: null,\n      AP3_Med: null,\n      AP3_Q1: null,\n      AP3_Min: null,\n\n\n      OFT1_Data: [],\n      OFT2_Data: [],\n      OFB1_Data: [],\n      OFB2_Data: [],\n      ECT_Data: [],\n      ECB_Data: [],\n      INT1_Data: [],\n      INT2_Data: [],\n    };\n  }\n  \n\n  doAskDate = () => {\n    if (this.state.header !== \"\") {\n      return (\n        <div>\n          <h5 className= \"float-right\">Ask me about the other day!\n            <div>\n              <input\n                value={this.state.selectDate}\n                onChange={(e) => {\n                  this.setState({ \n                    selectDate: e.target.value,\n                    dateSelect: moment(e.target.value).format(\"DD-MM-yyyy\")\n                  });\n                }}\n                type=\"date\"\n                className=\"form-control\"\n                placeholder=\"When is it?\"\n                style={{ marginTop: 10 }}\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              style={{ marginTop: 10 }}\n              onClick={(e) => {\n                Swal.fire({\n                  title: \"Let me think for a bit\",\n                  timer: 60000,\n                  // timerProgressBar: true,\n                  didOpen: async () => {\n                    Swal.showLoading();\n                    await this.doGetData();\n                    Swal.close();\n                  },\n                }).then(() => {\n                  this.setState({ header: \"This is how I'm feeling on \" + this.state.dateSelect });\n                  Swal.fire({\n                    title: \"Thank you for waiting!\",\n                    text: \"please check out finer details below\"\n                  })\n                });\n              }}\n            >\n              Submit\n            </button>\n          </h5>\n        </div>\n      );\n    }\n  };\n\n  doGetData = async () => {\n    // Get data from backend\n    let result = await httpClient.post(\n      server.GRLINE_URL +\n      \"/\" +\n      this.state.selectDate\n    );\n    const result_AP1 = result.data.resultAP1[0]\n    const resultAVG_AP1 = result.data.resultAP1AVG[0]\n    const result_AP2 = result.data.resultAP2[0]\n    const resultAVG_AP2 = result.data.resultAP2AVG[0]\n    const result_AP3 = result.data.resultAP3[0]\n    const resultAVG_AP3 = result.data.resultAP3AVG[0]\n\n    await this.setState({\n      AP1_Data: result_AP1, AP1_DataAVG: resultAVG_AP1, AP1_Production: result.data.resultAP1[0].length,\n      AP2_Data: result_AP2, AP2_DataAVG: resultAVG_AP2, AP2_Production: result.data.resultAP2[0].length,\n      AP3_Data: result_AP3, AP3_DataAVG: resultAVG_AP3, AP3_Production: result.data.resultAP3[0].length,\n    })\n    console.log(result)\n    console.log(this.state.series[0].data[0]);\n    console.log(this.state.AP1_Production);\n\n\n\n\n\n    // clear old data\n    await this.setState({\n      AP1_Axial_Play: [],\n      AP1_Bad_Cycle_Time: [],\n      AP1_Bad_Judge: [],\n      AP1_Bad_AP_Over: [],\n      AP1_Bad_AP_Under: [],\n      AP1_Bad_Pre_AP_Over: [],\n      AP1_Bad_Pre_AP_Under: [],\n      AP1_Bad_AP_Before_Over: [],\n      AP1_Bad_AP_Before_Under: [],\n      AP1_Bad_AP_After_Over: [],\n      AP1_Bad_AP_After_Under: [],\n      AP1_Bad_Adjustments: [],\n      AP1_Bad_Cycle_Time_P: null,\n      AP1_Bad_Judge_P: null,\n      AP1_Bad_AP_Over_P: null,\n      AP1_Bad_AP_Under_P: null,\n      AP1_Bad_Pre_AP_Over_P: null,\n      AP1_Bad_Pre_AP_Under_P: null,\n      AP1_Bad_AP_Before_Over_P: null,\n      AP1_Bad_AP_Before_Under_P: null,\n      AP1_Bad_AP_After_Over_P: null,\n      AP1_Bad_AP_After_Under_P: null,\n      AP1_Bad_Adjustments_P: null,\n      AP2_Axial_Play: [],\n      AP2_Bad_Cycle_Time: [],\n      AP2_Bad_Judge: [],\n      AP2_Bad_AP_Over: [],\n      AP2_Bad_AP_Under: [],\n      AP2_Bad_Pre_AP_Over: [],\n      AP2_Bad_Pre_AP_Under: [],\n      AP2_Bad_AP_Before_Over: [],\n      AP2_Bad_AP_Before_Under: [],\n      AP2_Bad_AP_After_Over: [],\n      AP2_Bad_AP_After_Under: [],\n      AP2_Bad_Adjustments: [],\n      AP2_Bad_Cycle_Time_P: null,\n      AP2_Bad_Judge_P: null,\n      AP2_Bad_AP_Over_P: null,\n      AP2_Bad_AP_Under_P: null,\n      AP2_Bad_Pre_AP_Over_P: null,\n      AP2_Bad_Pre_AP_Under_P: null,\n      AP2_Bad_AP_Before_Over_P: null,\n      AP2_Bad_AP_Before_Under_P: null,\n      AP2_Bad_AP_After_Over_P: null,\n      AP2_Bad_AP_After_Under_P: null,\n      AP2_Bad_Adjustments_P: null,\n      AP3_Axial_Play: [],\n      AP3_Bad_Cycle_Time: [],\n      AP3_Bad_Judge: [],\n      AP3_Bad_AP_Over: [],\n      AP3_Bad_AP_Under: [],\n      AP3_Bad_Pre_AP_Over: [],\n      AP3_Bad_Pre_AP_Under: [],\n      AP3_Bad_AP_Before_Over: [],\n      AP3_Bad_AP_Before_Under: [],\n      AP3_Bad_AP_After_Over: [],\n      AP3_Bad_AP_After_Under: [],\n      AP3_Bad_Adjustments: [],\n      AP3_Bad_Cycle_Time_P: null,\n      AP3_Bad_Judge_P: null,\n      AP3_Bad_AP_Over_P: null,\n      AP3_Bad_AP_Under_P: null,\n      AP3_Bad_Pre_AP_Over_P: null,\n      AP3_Bad_Pre_AP_Under_P: null,\n      AP3_Bad_AP_Before_Over_P: null,\n      AP3_Bad_AP_Before_Under_P: null,\n      AP3_Bad_AP_After_Over_P: null,\n      AP3_Bad_AP_After_Under_P: null,\n      AP3_Bad_Adjustments_P: null,\n\n      series: [\n        {\n          type: 'boxPlot', \n          data: [\n            {\n              x: 'Press 1',\n              y: []\n            },\n            {\n              x: 'Press 2',\n              y: []\n            },\n            {\n              x: 'Press 3',\n              y: []\n            }\n          ]}\n      ],\n    })\n    \n    // collect bad data AP1\n    for (let i = 0; i < this.state.AP1_Data.length; i++) {\n\n      this.state.AP1_Axial_Play.push(this.state.AP1_Data[i].Axial_Play)\n\n      if (this.state.AP1_Data[i].Cycle_Time > 12) {\n        this.state.AP1_Bad_Cycle_Time.push(this.state.AP1_Data[i].Cycle_Time)\n      }\n      if (this.state.AP1_Data[i].Judge === \"NG\") {\n        this.state.AP1_Bad_Judge.push(this.state.AP1_Data[i].Judge)\n      }\n      if (this.state.AP1_Data[i].Axial_Play > 16) {\n        this.state.AP1_Bad_AP_Over.push(this.state.AP1_Data[i].Axial_Play)\n      }\n      if (this.state.AP1_Data[i].Axial_Play < 12) {\n        this.state.AP1_Bad_AP_Under.push(this.state.AP1_Data[i].Axial_Play)\n      }\n      if (this.state.AP1_Data[i].Pre_Axial_Play > 190) {\n        this.state.AP1_Bad_Pre_AP_Over.push(this.state.AP1_Data[i].Pre_Axial_Play)\n      }\n      if (this.state.AP1_Data[i].Pre_Axial_Play < 150) {\n        this.state.AP1_Bad_Pre_AP_Under.push(this.state.AP1_Data[i].Pre_Axial_Play)\n      }\n      if (this.state.AP1_Data[i].Axial_Play_Before > 16.5) {\n        this.state.AP1_Bad_AP_Before_Over.push(this.state.AP1_Data[i].Axial_Play_Before)\n      }\n      if (this.state.AP1_Data[i].Axial_Play_Before < 13.5) {\n        this.state.AP1_Bad_AP_Before_Under.push(this.state.AP1_Data[i].Axial_Play_Before)\n      }\n      if (this.state.AP1_Data[i].Axial_Play_1 > 15) {\n        this.state.AP1_Bad_AP_After_Over.push(this.state.AP1_Data[i].Axial_Play_1)\n      }\n      if (this.state.AP1_Data[i].Axial_Play_1 < 12 && this.state.AP1_Data[i].Axial_Play_1 !== 0) {\n        this.state.AP1_Bad_AP_After_Under.push(this.state.AP1_Data[i].Axial_Play_1)\n      }\n      if (this.state.AP1_Data[i].Adjustments > 1) {\n        this.state.AP1_Bad_Adjustments.push(this.state.AP1_Data[i].Adjustments)\n      }      \n    }\n\n    // collect bad data AP2\n    for (let i = 0; i < this.state.AP2_Data.length; i++) {\n\n      this.state.AP2_Axial_Play.push(this.state.AP2_Data[i].Axial_Play)\n    \n      if (this.state.AP2_Data[i].Cycle_Time > 12) {\n        this.state.AP2_Bad_Cycle_Time.push(this.state.AP2_Data[i].Cycle_Time)\n      }\n      if (this.state.AP2_Data[i].Judge === \"NG\") {\n        this.state.AP2_Bad_Judge.push(this.state.AP2_Data[i].Judge)\n      }\n      if (this.state.AP2_Data[i].Axial_Play > 16) {\n        this.state.AP2_Bad_AP_Over.push(this.state.AP2_Data[i].Axial_Play)\n          }\n      if (this.state.AP2_Data[i].Axial_Play < 12) {\n        this.state.AP2_Bad_AP_Under.push(this.state.AP2_Data[i].Axial_Play)\n      }\n      if (this.state.AP2_Data[i].Pre_Axial_Play > 190) {\n        this.state.AP2_Bad_Pre_AP_Over.push(this.state.AP2_Data[i].Pre_Axial_Play)\n      }\n      if (this.state.AP2_Data[i].Pre_Axial_Play < 150) {\n        this.state.AP2_Bad_Pre_AP_Under.push(this.state.AP2_Data[i].Pre_Axial_Play)\n      }\n      if (this.state.AP2_Data[i].Axial_Play_Before > 16.5) {\n        this.state.AP2_Bad_AP_Before_Over.push(this.state.AP2_Data[i].Axial_Play_Before)\n      }\n      if (this.state.AP2_Data[i].Axial_Play_Before < 13.5) {\n        this.state.AP2_Bad_AP_Before_Under.push(this.state.AP2_Data[i].Axial_Play_Before)\n      }\n      if (this.state.AP2_Data[i].Axial_Play_1 > 15) {\n        this.state.AP2_Bad_AP_After_Over.push(this.state.AP2_Data[i].Axial_Play_1)\n      }\n      if (this.state.AP2_Data[i].Axial_Play_1 < 12 && this.state.AP2_Data[i].Axial_Play_1 !== 0) {\n        this.state.AP2_Bad_AP_After_Under.push(this.state.AP2_Data[i].Axial_Play_1)\n      }\n      if (this.state.AP2_Data[i].Adjustments > 1) {\n        this.state.AP2_Bad_Adjustments.push(this.state.AP2_Data[i].Adjustments)\n      }      \n    }\n\n    // collect bad data AP3\n    for (let i = 0; i < this.state.AP3_Data.length; i++) {\n\n      this.state.AP3_Axial_Play.push(this.state.AP3_Data[i].Axial_Play)\n\n      if (this.state.AP3_Data[i].Cycle_Time > 12) {\n        this.state.AP3_Bad_Cycle_Time.push(this.state.AP3_Data[i].Cycle_Time)\n      }\n      if (this.state.AP3_Data[i].Judge === \"NG\") {\n        this.state.AP3_Bad_Judge.push(this.state.AP3_Data[i].Judge)\n      }\n      if (this.state.AP3_Data[i].Axial_Play > 16) {\n        this.state.AP3_Bad_AP_Over.push(this.state.AP3_Data[i].Axial_Play)\n      }\n      if (this.state.AP3_Data[i].Axial_Play < 12) {\n        this.state.AP3_Bad_AP_Under.push(this.state.AP3_Data[i].Axial_Play)\n      }\n      if (this.state.AP3_Data[i].Pre_Axial_Play > 190) {\n        this.state.AP3_Bad_Pre_AP_Over.push(this.state.AP3_Data[i].Pre_Axial_Play)\n      }\n      if (this.state.AP3_Data[i].Pre_Axial_Play < 150) {\n        this.state.AP3_Bad_Pre_AP_Under.push(this.state.AP3_Data[i].Pre_Axial_Play)\n      }\n      if (this.state.AP3_Data[i].Axial_Play_Before > 16.5) {\n        this.state.AP3_Bad_AP_Before_Over.push(this.state.AP3_Data[i].Axial_Play_Before)\n      }\n      if (this.state.AP3_Data[i].Axial_Play_Before < 13.5) {\n        this.state.AP3_Bad_AP_Before_Under.push(this.state.AP3_Data[i].Axial_Play_Before)\n      }\n      if (this.state.AP3_Data[i].Axial_Play_1 > 15) {\n        this.state.AP3_Bad_AP_After_Over.push(this.state.AP3_Data[i].Axial_Play_1)\n      }\n      if (this.state.AP3_Data[i].Axial_Play_1 < 12 && this.state.AP3_Data[i].Axial_Play_1 !== 0) {\n        this.state.AP3_Bad_AP_After_Under.push(this.state.AP3_Data[i].Axial_Play_1)\n      }\n      if (this.state.AP3_Data[i].Adjustments > 1) {\n        this.state.AP3_Bad_Adjustments.push(this.state.AP3_Data[i].Adjustments)\n      }      \n    }\n\n\n\n\n    // AP1 boxplot max/min\n    for (let i = 0; i < this.state.AP1_Axial_Play.length; i++) {\n      if (this.state.AP1_Max === null) {\n        this.setState({AP1_Max: this.state.AP1_Axial_Play[i]})\n      }\n      if (this.state.AP1_Min === null) {\n        this.setState({AP1_Min: this.state.AP1_Axial_Play[i]})\n      }\n      if (this.state.AP1_Max < this.state.AP1_Axial_Play[i]) {\n        this.setState({AP1_Max: this.state.AP1_Axial_Play[i]})\n      }\n      if (this.state.AP1_Min > this.state.AP1_Axial_Play[i]) {\n        this.setState({AP1_Min: this.state.AP1_Axial_Play[i]})\n      }\n    }\n\n    // AP2 boxplot max/min\n    for (let i = 0; i < this.state.AP2_Axial_Play.length; i++) {\n      if (this.state.AP2_Max === null) {\n        this.setState({AP2_Max: this.state.AP2_Axial_Play[i]})\n      }\n      if (this.state.AP2_Min === null) {\n        this.setState({AP2_Min: this.state.AP2_Axial_Play[i]})\n      }\n      if (this.state.AP2_Max > this.state.AP2_Axial_Play[i]) {\n        this.setState({AP2_Max: this.state.AP2_Axial_Play[i]})\n      }\n      if (this.state.AP2_Min < this.state.AP2_Axial_Play[i]) {\n        this.setState({AP2_Min: this.state.AP2_Axial_Play[i]})\n      }\n    }\n\n    // AP3 boxplot max/min\n    for (let i = 0; i < this.state.AP3_Axial_Play.length; i++) {\n      if (this.state.AP3_Max === null) {\n        this.setState({AP3_Max: this.state.AP3_Axial_Play[i]})\n      }\n      if (this.state.AP3_Min === null) {\n        this.setState({AP3_Min: this.state.AP3_Axial_Play[i]})\n      }\n      if (this.state.AP3_Max > this.state.AP3_Axial_Play[i]) {\n        this.setState({AP3_Max: this.state.AP3_Axial_Play[i]})\n      }\n      if (this.state.AP3_Min < this.state.AP3_Axial_Play[i]) {\n        this.setState({AP3_Min: this.state.AP3_Axial_Play[i]})\n      }\n    }\n\n    // Calculate Data for boxplot\n    if (this.state.AP1_Axial_Play.length !== 0) {\n      let AP1Q1 = ss.quantile(this.state.AP1_Axial_Play, 0.25)\n      this.setState({AP1_Q1: AP1Q1})\n      let AP1Q3 = ss.quantile(this.state.AP1_Axial_Play, 0.75)\n      this.setState({AP1_Q3: AP1Q3})\n      let AP1Med = ss.median(this.state.AP1_Axial_Play)\n      this.setState({AP1_Med: AP1Med})\n\n      this.state.series[0].data[0].y.push(this.state.AP1_Min, this.state.AP1_Q1, this.state.AP1_Med, this.state.AP1_Q3, this.state.AP1_Max)\n\n      this.setState({test: 1})\n\n      console.log(this.state.series[0].data[0].y);\n    }\n\n    if (this.state.AP2_Axial_Play.length !== 0) {\n      let AP2Q1 = ss.quantile(this.state.AP2_Axial_Play, 0.25)\n      this.setState({AP2_Q1: AP2Q1})\n      let AP2Q3 = ss.quantile(this.state.AP2_Axial_Play, 0.75)\n      this.setState({AP2_Q3: AP2Q3})\n      let AP2Med = ss.median(this.state.AP2_Axial_Play)\n      this.setState({AP2_Med: AP2Med})\n\n      this.state.series[0].data[1].y.push(this.state.AP2_Min, this.state.AP2_Q1, this.state.AP2_Med, this.state.AP2_Q3, this.state.AP2_Max)\n\n\n      console.log(this.state.series[0].data[1].y);\n    }\n\n    if (this.state.AP3_Axial_Play.length !== 0) {\n      let AP3Q1 = ss.quantile(this.state.AP3_Axial_Play, 0.25)\n      this.setState({AP3_Q1: AP3Q1})\n      let AP3Q3 = ss.quantile(this.state.AP3_Axial_Play, 0.75)\n      this.setState({AP3_Q3: AP3Q3})\n      let AP3Med = ss.median(this.state.AP3_Axial_Play)\n      this.setState({AP3_Med: AP3Med})\n\n      this.state.series[0].data[2].y.push(this.state.AP3_Min, this.state.AP3_Q1, this.state.AP3_Med, this.state.AP3_Q3, this.state.AP3_Max)\n\n      console.log(this.state.series[0].data[2].y);\n    }\n\n    // Calculate NG% AP1\n    await this.setState({\n      // AP1\n      AP1_Bad_Cycle_Time_P: this.format((this.state.AP1_Bad_Cycle_Time.length/this.state.AP1_Data.length)*100),\n      AP1_Bad_Judge_P: this.format((this.state.AP1_Bad_Judge.length/this.state.AP1_Data.length)*100),\n      AP1_Bad_AP_Over_P: this.format((this.state.AP1_Bad_AP_Over.length/this.state.AP1_Data.length)*100),\n      AP1_Bad_AP_Under_P: this.format((this.state.AP1_Bad_AP_Under.length/this.state.AP1_Data.length)*100),\n      AP1_Bad_Pre_AP_Over_P: this.format((this.state.AP1_Bad_Pre_AP_Over.length/this.state.AP1_Data.length)*100),\n      AP1_Bad_Pre_AP_Under_P: this.format((this.state.AP1_Bad_Pre_AP_Under.length/this.state.AP1_Data.length)*100),\n      AP1_Bad_AP_Before_Over_P: this.format((this.state.AP1_Bad_AP_Before_Over.length/this.state.AP1_Data.length)*100),\n      AP1_Bad_AP_Before_Under_P: this.format((this.state.AP1_Bad_AP_Before_Under.length/this.state.AP1_Data.length)*100),\n      AP1_Bad_AP_After_Over_P: this.format((this.state.AP1_Bad_AP_After_Over.length/this.state.AP1_Data.length)*100),\n      AP1_Bad_AP_After_Under_P: this.format((this.state.AP1_Bad_AP_After_Under.length/this.state.AP1_Data.length)*100),\n      AP1_Bad_Adjustments_P: this.format((this.state.AP1_Bad_Adjustments.length/this.state.AP1_Data.length)*100),  \n    })\n    \n    // Calculate NG% AP2\n    await this.setState({\n      // AP2\n      AP2_Bad_Cycle_Time_P: this.format((this.state.AP2_Bad_Cycle_Time.length/this.state.AP2_Data.length)*100),\n      AP2_Bad_Judge_P: this.format((this.state.AP2_Bad_Judge.length/this.state.AP2_Data.length)*100),\n      AP2_Bad_AP_Over_P: this.format((this.state.AP2_Bad_AP_Over.length/this.state.AP2_Data.length)*100),\n      AP2_Bad_AP_Under_P: this.format((this.state.AP2_Bad_AP_Under.length/this.state.AP2_Data.length)*100),\n      AP2_Bad_Pre_AP_Over_P: this.format((this.state.AP2_Bad_Pre_AP_Over.length/this.state.AP2_Data.length)*100),\n      AP2_Bad_Pre_AP_Under_P: this.format((this.state.AP2_Bad_Pre_AP_Under.length/this.state.AP2_Data.length)*100),\n      AP2_Bad_AP_Before_Over_P: this.format((this.state.AP2_Bad_AP_Before_Over.length/this.state.AP2_Data.length)*100),\n      AP2_Bad_AP_Before_Under_P: this.format((this.state.AP2_Bad_AP_Before_Under.length/this.state.AP2_Data.length)*100),\n      AP2_Bad_AP_After_Over_P: this.format((this.state.AP2_Bad_AP_After_Over.length/this.state.AP2_Data.length)*100),\n      AP2_Bad_AP_After_Under_P: this.format((this.state.AP2_Bad_AP_After_Under.length/this.state.AP2_Data.length)*100),\n      AP2_Bad_Adjustments_P: this.format((this.state.AP2_Bad_Adjustments.length/this.state.AP2_Data.length)*100),  \n    })\n  \n    // Calculate NG% AP3\n    await this.setState({\n      // AP3\n      AP3_Bad_Cycle_Time_P: this.format((this.state.AP3_Bad_Cycle_Time.length/this.state.AP3_Data.length)*100),\n      AP3_Bad_Judge_P: this.format((this.state.AP3_Bad_Judge.length/this.state.AP3_Data.length)*100),\n      AP3_Bad_AP_Over_P: this.format((this.state.AP3_Bad_AP_Over.length/this.state.AP3_Data.length)*100),\n      AP3_Bad_AP_Under_P: this.format((this.state.AP3_Bad_AP_Under.length/this.state.AP3_Data.length)*100),\n      AP3_Bad_Pre_AP_Over_P: this.format((this.state.AP3_Bad_Pre_AP_Over.length/this.state.AP3_Data.length)*100),\n      AP3_Bad_Pre_AP_Under_P: this.format((this.state.AP3_Bad_Pre_AP_Under.length/this.state.AP3_Data.length)*100),\n      AP3_Bad_AP_Before_Over_P: this.format((this.state.AP3_Bad_AP_Before_Over.length/this.state.AP3_Data.length)*100),\n      AP3_Bad_AP_Before_Under_P: this.format((this.state.AP3_Bad_AP_Before_Under.length/this.state.AP3_Data.length)*100),\n      AP3_Bad_AP_After_Over_P: this.format((this.state.AP3_Bad_AP_After_Over.length/this.state.AP3_Data.length)*100),\n      AP3_Bad_AP_After_Under_P: this.format((this.state.AP3_Bad_AP_After_Under.length/this.state.AP3_Data.length)*100),\n      AP3_Bad_Adjustments_P: this.format((this.state.AP3_Bad_Adjustments.length/this.state.AP3_Data.length)*100),  \n    })\n  \n    // AP1 Status\n    // No Production\n    if (this.state.AP1_Production <= 100) {\n      this.setState({\n        AP1_Color: \"gray\",\n        AP1_Status: \"Press 1 has no production\",\n      })\n    }\n    // Red NGs\n    else if (this.state.AP1_Bad_Judge_P >= 1.5) {\n      this.setState({\n        AP1_Color: \"red\",\n        AP1_Status: \"Press 1 has high amount NGs\",\n      })\n    }\n    // Orange Cycle Time\n    else if (this.state.AP1_Bad_Cycle_Time_P >= 10 && this.state.AP1_Bad_AP_After_Over_P >= 10) {\n      this.setState({\n        AP1_Color: \"orange\",\n        AP1_Status: \"Press 1's cycle time is very high due to adjustments\",\n      })\n    }\n    // Yellow\n    else if (this.state.AP1_Bad_Pre_AP_Over_P >= 50) {\n      this.setState({\n        AP1_Color: \"yellow\",\n        AP1_Status: \"Press 1: Pre Axial Play data is very high\",\n      })\n    }\n    // Green\n    else {\n      this.setState({\n        AP1_Color: \"green\",\n        AP1_Status: \"Press 1 is doing well!\",\n      })\n    }  \n\n    // AP2 Status\n    // No Production\n    if (this.state.AP2_Production <= 100) {\n      this.setState({\n        AP2_Color: \"gray\",\n        AP2_Status: \"Press 2 has no production\",\n      })\n    }\n    // Red NGs\n    else if (this.state.AP2_Bad_Judge_P >= 1.5) {\n      this.setState({\n        AP2_Color: \"red\",\n        AP2_Status: \"Press 2 has high amount NGs\",\n      })\n    }\n    // Orange Cycle Time\n    else if (this.state.AP2_Bad_Cycle_Time_P >= 10 && this.state.AP2_Bad_AP_After_Over_P >= 10) {\n      this.setState({\n        AP2_Color: \"orange\",\n        AP2_Status: \"Press 2's cycle time is very high due to adjustments\",\n      })\n    }\n    // Yellow\n    else if (this.state.AP2_Bad_Pre_AP_Over_P >= 50) {\n      this.setState({\n        AP2_Color: \"yellow\",\n        AP2_Status: \"Press 2: Pre Axial Play data is very high\",\n      })\n    }\n    // Green\n    else {\n      this.setState({\n        AP2_Color: \"green\",\n        AP2_Status: \"Press 2 is doing well!\",\n      })\n    }  \n\n    // AP3 Status\n    // No Production\n    if (this.state.AP3_Production <= 100) {\n      this.setState({\n        AP3_Color: \"gray\",\n        AP3_Status: \"Press 3 has no production\",\n      })\n    }\n    // Red NGs\n    else if (this.state.AP3_Bad_Judge_P >= 1.5) {\n      this.setState({\n        AP3_Color: \"red\",\n        AP3_Status: \"Press 3 has high amount NGs\",\n      })\n    }\n    // Orange Cycle Time\n    else if (this.state.AP3_Bad_Cycle_Time_P >= 10 && this.state.AP3_Bad_AP_After_Over_P >= 10) {\n      this.setState({\n        AP3_Color: \"orange\",\n        AP3_Status: \"Press 3's cycle time is very high due to adjustments\",\n      })\n    }\n    // Yellow\n    else if (this.state.AP3_Bad_Pre_AP_Over_P >= 50) {\n      this.setState({\n        AP3_Color: \"yellow\",\n        AP3_Status: \"Press 3: Pre Axial Play data is very high\",\n      })\n    }\n    // Green\n    else {\n      this.setState({\n        AP3_Color: \"green\",\n        AP3_Status: \"Press 3 is doing well!\",\n      })\n    }\n  };\n\n  renderTableAP1 = () => {\n    console.log(this.state.AP1_DataAVG);\n    // console.log(this.state.AP1_Bad_Cycle_Time);\n    // console.log(this.state.AP1_Bad_Judge);\n    // console.log(this.state.AP1_Bad_AP_Over);\n    // console.log(this.state.AP1_Bad_AP_Under_P);\n    // console.log(this.state.AP1_Bad_AP_Under);\n    // console.log(this.state.AP1_Bad_Pre_AP_Over);\n    // console.log(this.state.AP1_Bad_Pre_AP_Under);\n    // console.log(this.state.AP1_Bad_AP_Before_Over);\n    // console.log(this.state.AP1_Bad_AP_Before_Under);\n    // console.log(this.state.AP1_Bad_AP_After_Over);\n    // console.log(this.state.AP1_Bad_AP_After_Under);\n    // console.log(this.state.AP1_Bad_Adjustments);\n    return this.state.AP1_DataAVG.map((item) => (\n      <tr>\n        <td>{item[\"Time\"]}</td>\n        <td style = {{ color: item[\"Prod\"] > 170  ? 'green' : item[\"Prod\"] < 130  ? 'red' : 'black'}}>{item[\"Prod\"]}</td>\n        <td style = {{ color: item[\"Cycle_Time\"] > 12  ? 'red' : 'black'}}>{item[\"Cycle_Time\"]}</td>\n        <td style = {{ color: item[\"Judge\"] > 5  ? 'red' : 'black'}}>{item[\"Judge\"]}</td>\n        <td style = {{ color: item[\"Axial_Play\"] > 16  ? 'red' : item[\"Axial_Play\"] < 12  ? 'red' : 'black'}}>{item[\"Axial_Play\"]}</td>\n        <td style = {{ color: item[\"Pre_Axial_Play\"] > 190  ? 'red' : item[\"Pre_Axial_Play\"] < 150  ? 'red' : 'black'}}>{item[\"Pre_Axial_Play\"]}</td>     \n        <td style = {{ color: item[\"Axial_Play_Before\"] > 16.5  ? 'red' : item[\"Axial_Play_Before\"] < 13.5  ? 'red' : 'black'}}>{item[\"Axial_Play_Before\"]}</td>\n        <td style = {{ color: item[\"Axial_Play_1\"] > 15  ? 'red' : item[\"Axial_Play_1\"] < 12  ? item[\"Axial_Play_1\"] !== 0  ? 'red' : 'black' : 'black'}}>{item[\"Axial_Play_1\"]}</td>\n        <td style = {{ color: item[\"Adjustments\"] > 1  ? 'red' : 'black'}}>{item[\"Adjustments\"]}</td>\n      </tr>\n    ));\n  };\n\n  renderTableAP2 = () => {\n    console.log(this.state.AP2_DataAVG);\n    // console.log(this.state.AP2_Bad_Cycle_Time);\n    // console.log(this.state.AP2_Bad_Judge);\n    // console.log(this.state.AP2_Bad_AP_Over);\n    // console.log(this.state.AP2_Bad_AP_Under_P);\n    // console.log(this.state.AP2_Bad_AP_Under);\n    // console.log(this.state.AP2_Bad_Pre_AP_Over);\n    // console.log(this.state.AP2_Bad_Pre_AP_Under);\n    // console.log(this.state.AP2_Bad_AP_Before_Over);\n    // console.log(this.state.AP2_Bad_AP_Before_Under);\n    // console.log(this.state.AP2_Bad_AP_After_Over);\n    // console.log(this.state.AP2_Bad_AP_After_Under);\n    // console.log(this.state.AP2_Bad_Adjustments);\n    return this.state.AP2_DataAVG.map((item) => (\n      <tr>\n        <td>{item[\"Time\"]}</td>\n        <td style = {{ color: item[\"Prod\"] > 170  ? 'green' : item[\"Prod\"] < 130  ? 'red' : 'black'}}>{item[\"Prod\"]}</td>\n        <td style = {{ color: item[\"Cycle_Time\"] > 12  ? 'red' : 'black'}}>{item[\"Cycle_Time\"]}</td>\n        <td style = {{ color: item[\"Judge\"] > 5  ? 'red' : 'black'}}>{item[\"Judge\"]}</td>\n        <td style = {{ color: item[\"Axial_Play\"] > 16  ? 'red' : item[\"Axial_Play\"] < 12  ? 'red' : 'black'}}>{item[\"Axial_Play\"]}</td>\n        <td style = {{ color: item[\"Pre_Axial_Play\"] > 190  ? 'red' : item[\"Pre_Axial_Play\"] < 150  ? 'red' : 'black'}}>{item[\"Pre_Axial_Play\"]}</td>     \n        <td style = {{ color: item[\"Axial_Play_Before\"] > 16.5  ? 'red' : item[\"Axial_Play_Before\"] < 13.5  ? 'red' : 'black'}}>{item[\"Axial_Play_Before\"]}</td>\n        <td style = {{ color: item[\"Axial_Play_1\"] > 15  ? 'red' : item[\"Axial_Play_1\"] < 12  ? item[\"Axial_Play_1\"] !== 0  ? 'red' : 'black' : 'black'}}>{item[\"Axial_Play_1\"]}</td>\n        <td style = {{ color: item[\"Adjustments\"] > 1  ? 'red' : 'black'}}>{item[\"Adjustments\"]}</td>\n      </tr>\n    ));\n  };\n\n  renderTableAP3 = () => {\n    console.log(this.state.AP3_DataAVG);\n    // console.log(this.state.AP3_Bad_Cycle_Time);\n    // console.log(this.state.AP3_Bad_Judge);\n    // console.log(this.state.AP3_Bad_AP_Over);\n    // console.log(this.state.AP3_Bad_AP_Under_P);\n    // console.log(this.state.AP3_Bad_AP_Under);\n    // console.log(this.state.AP3_Bad_Pre_AP_Over);\n    // console.log(this.state.AP3_Bad_Pre_AP_Under);\n    // console.log(this.state.AP3_Bad_AP_Before_Over);\n    // console.log(this.state.AP3_Bad_AP_Before_Under);\n    // console.log(this.state.AP3_Bad_AP_After_Over);\n    // console.log(this.state.AP3_Bad_AP_After_Under);\n    // console.log(this.state.AP3_Bad_Adjustments);\n    return this.state.AP3_DataAVG.map((item) => (\n      <tr>\n        <td>{item[\"Time\"]}</td>\n        <td style = {{ color: item[\"Prod\"] > 170  ? 'green' : item[\"Prod\"] < 130  ? 'red' : 'black'}}>{item[\"Prod\"]}</td>\n        <td style = {{ color: item[\"Cycle_Time\"] > 12  ? 'red' : 'black'}}>{item[\"Cycle_Time\"]}</td>\n        <td style = {{ color: item[\"Judge\"] > 5  ? 'red' : 'black'}}>{item[\"Judge\"]}</td>\n        <td style = {{ color: item[\"Axial_Play\"] > 16  ? 'red' : item[\"Axial_Play\"] < 12  ? 'red' : 'black'}}>{item[\"Axial_Play\"]}</td>\n        <td style = {{ color: item[\"Pre_Axial_Play\"] > 190  ? 'red' : item[\"Pre_Axial_Play\"] < 150  ? 'red' : 'black'}}>{item[\"Pre_Axial_Play\"]}</td>     \n        <td style = {{ color: item[\"Axial_Play_Before\"] > 16.5  ? 'red' : item[\"Axial_Play_Before\"] < 13.5  ? 'red' : 'black'}}>{item[\"Axial_Play_Before\"]}</td>\n        <td style = {{ color: item[\"Axial_Play_1\"] > 15  ? 'red' : item[\"Axial_Play_1\"] < 12  ? item[\"Axial_Play_1\"] !== 0  ? 'red' : 'black' : 'black'}}>{item[\"Axial_Play_1\"]}</td>\n        <td style = {{ color: item[\"Adjustments\"] > 1  ? 'red' : 'black'}}>{item[\"Adjustments\"]}</td>\n      </tr>\n    ));\n  };\n\n  renderStatusAP = () => {\n\n    if (this.state.AP1_Status !== \"\") {\n    return (\n      <div className=\"row\">\n        <h3>{this.state.AxialPlay} &nbsp; <br/>\n          <h3 style={{ color: this.state.AP1_Color }}>&nbsp; &nbsp; &nbsp; &nbsp; {this.state.AP1_Status}</h3>\n          <h3 style={{ color: this.state.AP2_Color }}>&nbsp; &nbsp; &nbsp; &nbsp; {this.state.AP2_Status}</h3>\n          <h3 style={{ color: this.state.AP3_Color }}>&nbsp; &nbsp; &nbsp; &nbsp; {this.state.AP3_Status}</h3>\n        </h3>\n\n      </div>\n    );\n    }\n  };\n\n  renderStatusOF = () => {\n    if (this.state.OF_Status !== \"\") {\n    return (\n      <div className=\"row\">\n        <h3>{this.state.OilFill} &nbsp;</h3>\n        <h3 style={{ color: this.state.OF_Color }}>{this.state.OF_Status}</h3>\n      </div>\n    );\n    }\n  };\n\n  renderStatusEC = () => {\n    if (this.state.EC_Status !== \"\") {\n      return (\n      <div className=\"row\">\n        <h3>{this.state.Endcap} &nbsp;</h3>\n        <h3 style={{ color: this.state.EC_Color }}>{this.state.EC_Status}</h3>\n      </div>\n      );\n    }\n  };\n\n  renderStatusINT = () => {\n    if (this.state.INT_Status !== \"\") {\n      return (\n        <div className=\"row\">\n          <h3>{this.state.INT} &nbsp;</h3>\n          <h3 style={{ color: this.state.INT_Color }}>{this.state.INT_Status}</h3>\n        </div>\n      );\n    }\n  };\n\n  renderBoxPlotAP = () => {\n      console.log(this.state.AP1_Axial_Play);\n    if (this.state.test === 0) {\n      return (\n          <div id=\"chart\">\n            <ReactApexChart \n              options={this.state.options} \n              series={this.state.series} \n              type=\"boxPlot\" \n              height={350} />\n          </div>\n      )\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>German Rotor Autoline</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      German Rotor Autoline\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n\n          </section>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card card-primary card-outline\">\n                    <div className=\"card-body\">\n                      <div className=\"row\">\n                        <h1>{this.state.header} &nbsp; &nbsp; &nbsp;</h1>\n                      </div>\n                      {this.doAskDate()}\n                      {this.renderStatusAP()}\n                      {this.renderStatusOF()}\n                      {this.renderStatusEC()}\n                      {this.renderStatusINT()}\n                    </div>\n                    {this.renderBoxPlotAP()}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className=\"card collapsed-card\">\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Axial Play Press 1</h3>\n              <div className=\"card-tools\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Time </th>\n                      <th>Production</th>\n                      <th>Cycle Time <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 1\",\n                            html:\n                              this.state.AP1_Bad_Cycle_Time_P +\" % of Cycle Time data are over 12 seconds <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>NGs <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 1\",\n                            html:\n                              this.state.AP1_Bad_Judge_P +\" % of Axial Play data are NGs <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>Axial Play <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 1\",\n                            html:\n                              this.state.AP1_Bad_AP_Over_P +\" % of Axial Play data are over 16.00 <br>\" +\n                              this.state.AP1_Bad_AP_Under_P +\" % of Axial Play data are under 12.00 <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>Pre Axial Play <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 1\",\n                            html:\n                              this.state.AP1_Bad_Pre_AP_Over_P +\" % of Pre Axial Play data are over 190.00 <br>\" +\n                              this.state.AP1_Bad_Pre_AP_Under_P +\" % of Axial Play data are under 150.00 <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>Before Adjustment <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 1\",\n                            html:\n                              this.state.AP1_Bad_AP_Before_Over_P +\" % of Before Adjustments data are over 16.50 <br>\" +\n                              this.state.AP1_Bad_Pre_AP_Under_P +\" % of Before Adjustments data are under 13.50 <br>\"  \n                          });\n                        }}\n                      ></i></th>\n                      <th>After 1st Adjustment <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 1\",\n                            html:\n                              this.state.AP1_Bad_AP_After_Over_P +\" % of After Adjustments data are over 15.00 <br>\" +\n                              this.state.AP1_Bad_AP_After_Under_P +\" % of After Adjustments data are under 12.00 <br>\"\n                          });\n                        }}\n                      ></i></th>\n                      <th>No. of Adjustments <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 1\",\n                            html:\n                              this.state.AP1_Bad_AP_After_Over_P +\" % of Adjustments data are over 1 <br>\"\n                          });\n                        }}\n                      ></i></th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableAP1()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className=\"card collapsed-card\">\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Axial Play Press 2</h3>\n              <div className=\"card-tools\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Time </th>\n                      <th>Production</th>\n                      <th>Cycle Time <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 2\",\n                            html:\n                              this.state.AP2_Bad_Cycle_Time_P +\" % of Cycle Time data are over 12 seconds <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>NGs <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 2\",\n                            html:\n                              this.state.AP2_Bad_Judge_P +\" % of Axial Play data are NGs <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>Axial Play <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 2\",\n                            html:\n                              this.state.AP2_Bad_AP_Over_P +\" % of Axial Play data are over 16.00 <br>\" +\n                              this.state.AP2_Bad_AP_Under_P +\" % of Axial Play data are under 12.00 <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>Pre Axial Play <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 2\",\n                            html:\n                              this.state.AP2_Bad_Pre_AP_Over_P +\" % of Pre Axial Play data are over 190.00 <br>\" +\n                              this.state.AP2_Bad_Pre_AP_Under_P +\" % of Axial Play data are under 150.00 <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>Before Adjustment <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 2\",\n                            html:\n                              this.state.AP2_Bad_AP_Before_Over_P +\" % of Before Adjustments data are over 16.50 <br>\" +\n                              this.state.AP2_Bad_Pre_AP_Under_P +\" % of Before Adjustments data are under 13.50 <br>\"  \n                          });\n                        }}\n                      ></i></th>\n                      <th>After 1st Adjustment <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 2\",\n                            html:\n                              this.state.AP2_Bad_AP_After_Over_P +\" % of After Adjustments data are over 15.00 <br>\" +\n                              this.state.AP2_Bad_AP_After_Under_P +\" % of After Adjustments data are under 12.00 <br>\"\n                          });\n                        }}\n                      ></i></th>\n                      <th>No. of Adjustments <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 2\",\n                            html:\n                              this.state.AP2_Bad_AP_After_Over_P +\" % of Adjustments data are over 1 <br>\"\n                          });\n                        }}\n                      ></i></th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableAP2()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className=\"card collapsed-card\">\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Axial Play Press 3</h3>\n              <div className=\"card-tools\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Time </th>\n                      <th>Production</th>\n                      <th>Cycle Time <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 3\",\n                            html:\n                              this.state.AP3_Bad_Cycle_Time_P +\" % of Cycle Time data are over 12 seconds <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>NGs <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 3\",\n                            html:\n                              this.state.AP3_Bad_Judge_P +\" % of Axial Play data are NGs <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>Axial Play <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 3\",\n                            html:\n                              this.state.AP3_Bad_AP_Over_P +\" % of Axial Play data are over 16.00 <br>\" +\n                              this.state.AP3_Bad_AP_Under_P +\" % of Axial Play data are under 12.00 <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>Pre Axial Play <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 3\",\n                            html:\n                              this.state.AP3_Bad_Pre_AP_Over_P +\" % of Pre Axial Play data are over 190.00 <br>\" +\n                              this.state.AP3_Bad_Pre_AP_Under_P +\" % of Axial Play data are under 150.00 <br>\" \n                          });\n                        }}\n                      ></i></th>\n                      <th>Before Adjustment <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 3\",\n                            html:\n                              this.state.AP3_Bad_AP_Before_Over_P +\" % of Before Adjustments data are over 16.50 <br>\" +\n                              this.state.AP3_Bad_Pre_AP_Under_P +\" % of Before Adjustments data are under 13.50 <br>\"  \n                          });\n                        }}\n                      ></i></th>\n                      <th>After 1st Adjustment <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 3\",\n                            html:\n                              this.state.AP3_Bad_AP_After_Over_P +\" % of After Adjustments data are over 15.00 <br>\" +\n                              this.state.AP3_Bad_AP_After_Under_P +\" % of After Adjustments data are under 12.00 <br>\"\n                          });\n                        }}\n                      ></i></th>\n                      <th>No. of Adjustments <i\n                        class=\"fas fa-question-circle\"\n                        style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                        onClick={() => {\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Axial Play Press 3\",\n                            html:\n                              this.state.AP3_Bad_AP_After_Over_P +\" % of Adjustments data are over 1 <br>\"\n                          });\n                        }}\n                      ></i></th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.renderTableAP3()}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className=\"card collapsed-card\">\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Oil Fill</h3>\n              <div className=\"card-tools\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Time</th>\n                      <th>Oil Top 1 Fill Time</th>\n                      <th>Oil Top 1 Process Time</th>\n                      <th>Oil Top 2 Fill Time</th>\n                      <th>Oil Top 2 Process Time</th>\n                      <th>Oil Bottom 1 Fill Time</th>\n                      <th>Oil Bottom 1 Process Time</th>\n                      <th>Oil Bottom 2 Fill Time</th>\n                      <th>Oil Bottom 2 Process Time</th>\n                    </tr>\n                  </thead>\n                  <tbody></tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className=\"card collapsed-card\">\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">Endcap</h3>\n              <div className=\"card-tools\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Time</th>\n                      <th>Endcap Top Pressing Distance</th>\n                      <th>Endcap Top Pressing Force</th>\n                      <th>Endcap Top Process Time</th>\n                      <th>Endcap Bottom Pressing Distance</th>\n                      <th>Endcap Bottom Pressing Force</th>\n                      <th>Endcap Bottom Process Time</th>\n                    </tr>\n                  </thead>\n                  <tbody></tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-body\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <div className=\"card collapsed-card\">\n            <div className=\"card-header border-transparent\">\n              <h3 className=\"card-title\">INT</h3>\n              <div className=\"card-tools\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-plus\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table m-0\">\n                  <thead>\n                    <tr>\n                      <th>Time</th>\n                      <th>INT 1 Dispensing Time</th>\n                      <th>INT 1 Process Time</th>\n                      <th>INT 2 Dispensing Time</th>\n                      <th>INT 2 Process Time</th>\n                    </tr>\n                  </thead>\n                  <tbody></tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GRotorLine;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nexport default class QCAlert extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      startDate: moment().add(\"days\", -7).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n    };\n  }\n\n  render() {\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>QC Alert Email</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">QCAlert</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Select Parameter</label>\n                    </h3>\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production Line</label>\n                          <Select />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Tester</label>\n                          <Select />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Tester No.</label>\n                          <Select />\n                        </div>\n                      </div>\n\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Starting from &nbsp;</label>\n                          <input\n                            value={this.state.startDate}\n                            onChange={(e) => {\n                              this.setState({ startDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Finish Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>To</label>\n                          <input\n                            value={this.state.finishDate}\n                            onChange={(e) => {\n                              this.setState({ finishDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Finish Date\"\n                          />\n                        </div>\n                      </div>\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisableDays}\n                          onClick={(e) => {}}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <table className=\"table table-head-fixed text-nowrap\">\n                    <thead>\n                      <tr>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>Date</th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>Time</th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>Model</th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>Line</th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>Machine</th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>\n                          Parameter\n                        </th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>Average</th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>LCL</th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>UCL</th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>Comment1</th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>Comment2</th>\n                        <th style={{ backgroundColor: \"#C1C1C1\" }}>Comment3</th>\n                      </tr>\n                    </thead>\n                    <tbody></tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\n\nimport { CSVLink } from \"react-csv\";\n\nclass VMI extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //data average per hour\n      title: [],\n      data: [],\n      seriesMC: [],\n      seriesMCSTD: [],\n\n      xAxis: [],\n      yAxis: [],\n      yAxisUSL: [],\n      yAxisLSL: [],\n      yAxisUCL: [],\n      yAxisLCL: [],\n      yAxisCL: [],\n      dataCount: [],\n      count: [],\n\n      //raw data per hour\n      Raw_Dat: [],\n\n      //standard deviation per hour\n      yAxisUCLSD: [],\n      yAxisLCLSD: [],\n      yAxisSD: [],\n\n      // Table per hour\n      datatable: [],\n      tablerow: [],\n\n      //data average per day\n      titleday: [],\n      dataday: [],\n      seriesMCday: [],\n      seriesMCSTDDay: [],\n\n      xAxisday: [],\n      yAxisday: [],\n      yAxisUSLday: [],\n      yAxisLSLday: [],\n      yAxisUCLday: [],\n      yAxisLCLday: [],\n      yAxisCLday: [],\n      dataCountDay: [],\n      countDay: [],\n\n      //standard deviation per hour\n      yAxisdaySD: [],\n      yAxisUCLdaySD: [],\n      yAxisLCLdaySD: [],\n\n      // Table per hour\n      datatableday: [],\n      tablerowday: [],\n\n      // criteria\n      model: [],\n      productionline: [],\n      process: [],\n\n      selectDate: moment().format(\"yyyy-MM-DD\"),\n      startDate: moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listProcess: [],\n      listProductionline: [],\n\n      optionSelected: null,\n      isDisable: false,\n      isDisableDays: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getProcess();\n    await this.getProductionline();\n  };\n\n  doGetData = async () => {\n    let result = await httpClient.get(\n      server.VMI_URL +\n        \"/\" +\n        this.state.selectDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.process[0].label +\n        \"/\" +\n        this.state.productionline[0].label\n    );\n\n    let title = result.data.seriesY.title;\n    let xAxis = [];\n    let count = [];\n\n\n    //Raw_Data\n    let rawData = result.data.listRawData\n    this.setState({Raw_Dat: rawData[0]});\n    console.log(this.state.Raw_Dat)\n\n    //AVG\n    let yAxis = result.data.seriesY;\n    let yAxisUSL = result.data.seriesUSL;\n    let yAxisLSL = result.data.seriesLSL;\n    let yAxisCL = result.data.seriesCL;\n    let yAxisUCL = result.data.seriesUCL;\n    let yAxisLCL = result.data.seriesLCL;\n\n    //STD\n    let yAxisSD = result.data.seriesSTD;\n    let yAxisLCLSD = result.data.seriesLCL_STD;\n    let yAxisUCLSD = result.data.seriesUCL_STD;\n\n    //dataCount\n    let dataCount = result.data.seriesMCCount[0].data;\n\n    var datatable = [];\n\n    for (let i = 0; i < result.data.listResult.length; i++) {\n      datatable.push(result.data.listResult[i]);\n    }\n\n    this.setState({\n      title,\n      data: result.data.resultAVG,\n      datatable,\n\n      xAxis,\n      dataCount,\n      count,\n\n      isDisable: false,\n    });\n  };\n\n  // doGetDataperday\n  doGetDataDay = async () => {\n    let resultday = await httpClient.get(\n      server.VMIDAY_URL +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.process[0].label +\n        \"/\" +\n        this.state.productionline[0].label\n    );\n\n    let titleday = resultday.data.seriesYday.titleday;\n    let xAxisday = [];\n    let countDay = [];\n    for (let index = 0; index < resultday.data.resultAVGday.length; index++) {\n      const item = resultday.data.resultAVGday[index];\n      await xAxisday.push(item.Date);\n      await countDay.push(12000);\n    }\n\n    //AVG\n    let yAxisday = resultday.data.seriesYday;\n    let yAxisUSLday = resultday.data.seriesUSL;\n    let yAxisLSLday = resultday.data.seriesLSL;\n    let yAxisUCLday = resultday.data.seriesUCL;\n    let yAxisLCLday = resultday.data.seriesLCL;\n    let yAxisCLday = resultday.data.seriesCL;\n\n    //STD\n    let yAxisdaySD = resultday.data.seriesSTDDay;\n    let yAxisUCLdaySD = resultday.data.seriesUCL_STD;\n    let yAxisLCLdaySD = resultday.data.seriesLCL_STD;\n\n    //dataCount\n    let dataCountDay = resultday.data.seriesMCCountDay[0].data;\n\n    var datatableday = [];\n\n    for (let i = 0; i < resultday.data.listResultday.length; i++) {\n      datatableday.push(resultday.data.listResultday[i]);\n    }\n\n    this.setState({\n      titleday,\n      dataday: resultday.data.resultAVGday,\n      datatableday,\n\n      xAxisday,\n      dataCountDay,\n      countDay,\n\n      isDisableDays: false,\n    });\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.VMIMODEL_URL);\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getProcess = async () => {\n    const array = await httpClient.get(\n      server.VMIPROCESS_URL + \"/\" + this.state.model\n    );\n    // console.log(array.data.result);\n    const options = array.data.result.map((d) => ({\n      label: d.Process,\n    }));\n    this.setState({ listProcess: options });\n  };\n\n  getProductionline = async () => {\n    const array = await httpClient.get(\n      server.VMILINE_URL + \"/\" + this.state.model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listProductionline: options });\n  };\n\n  handleChange = async (event) => {\n    const Newevent = Object.keys(event).map((key) => event[key].label);\n    const json_string = JSON.stringify(Newevent);\n    this.setState({ selectMCname: json_string });\n    this.setState({ optionSelected: event });\n  };\n\n  renderTableRow = () => {\n    var tablerow = [];\n    for (let i = 0; i < this.state.datatable.length; i++) {\n      tablerow.push(\n        this.state.datatable[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerow;\n  };\n\n  renderTableRowday = () => {\n    var tablerowday = [];\n    for (let i = 0; i < this.state.datatableday.length; i++) {\n      tablerowday.push(\n        this.state.datatableday[i].map((item) => (\n          <tr>\n            <td>{item.Machine}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"%Yield\"]}</td>\n            <td>{item[\"AVG\"]}</td>\n            <td>{item[\"STD\"]}</td>\n            <td>{item[\"CPK\"]}</td>\n            <td>{item[\"Cycle_time (sec)\"]}</td>\n            <td>{item[\"Down time (min)\"]}</td>\n          </tr>\n        ))\n      );\n    }\n    return tablerowday;\n  };\n\n  render() {\n    console.log(this.state.title);\n    console.log(this.state.seriesMC);\n    console.log(this.state.listMachine);\n    console.log(this.state.dataCount);\n\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>SPC Chart Static Dimension</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Static Dimension</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Select Process</label>\n                    </h3>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ model: e.label });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                                count: [],\n                                dataCount: [],\n                                countDay: [],\n                                dataCountDay: [],\n                              });\n                              await this.getProcess();\n                              await this.getProductionline();\n                              await this.setState({\n                                productionline: [\n                                  { label: \"Select Production Line\" },\n                                ],\n                              });\n                              await this.setState({\n                                process: [{ label: \"Select Process\" }],\n                              });\n                              await this.setState({\n                                optionSelected: \"Selected Tester No.\",\n                              });\n                            }}\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Production line\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listProductionline}\n                            value={this.state.productionline[0]}\n                            onChange={async (e) => {\n                              await this.setState({ productionline: [] });\n                              this.state.productionline.push({\n                                label: e.label,\n                              });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                                count: [],\n                                dataCount: [],\n                                countDay: [],\n                                dataCountDay: [],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production Line\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Critiria \"Process\" */}\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>Process</label>\n                          <Select\n                            options={this.state.listProcess}\n                            value={this.state.process[0]}\n                            onChange={async (e) => {\n                              await this.setState({ process: [] });\n                              this.state.process.push({ label: e.label });\n                              await this.setState({\n                                seriesMC: [],\n                                seriesMCSTD: [],\n                                seriesMCday: [],\n                                seriesMCSTDDay: [],\n                                count: [],\n                                dataCount: [],\n                                countDay: [],\n                                dataCountDay: [],\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select process\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Hourly Select Date &nbsp;\n                            <i\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Hourly Data\",\n                                  text:\n                                    \"Hourly data over the course of the selected day\",\n                                });\n                              }}\n                            ></i>\n                          </label>\n                          <input\n                            value={this.state.selectDate}\n                            onChange={(e) => {\n                              this.setState({ selectDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisable}\n                          onClick={(e) => {\n                            this.setState({ isDisable: true });\n                            this.doGetData();\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetData();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatable.length > 0) {\n                                for (\n                                  let i = 0;\n                                  i < this.state.datatable.length;\n                                  i++\n                                ) {\n                                  for (\n                                    let j = 0;\n                                    j < this.state.datatable[i].length;\n                                    j++\n                                  ) {\n                                    if (\n                                      this.state.datatable[i][j].AVG !== null\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text:\n                                          \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n\n                                    if (i === this.state.datatable.length - 1) {\n                                      if (\n                                        j ===\n                                        this.state.datatable[i].length - 1\n                                      ) {\n                                        if (\n                                          this.state.datatable[i][j].AVG == null\n                                        ) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          });\n                                        } else {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title:\n                                              \"Data loading has encountered some error, please try again\",\n                                          });\n                                        }\n                                        break;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n\n                      </div>\n                      <div className=\"col-md-8\">\n                        <CSVLink data={this.state.Raw_Dat}>\n                          <button type=\"button\" className=\"btn btn-primary\" style={{ marginTop: 30 }}>\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n\n                      {/* //Select Start Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>\n                            By Daily Select From &nbsp;\n                            <i\n                              class=\"fas fa-question-circle\"\n                              style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                              onClick={() => {\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Day-to-Day Data\",\n                                  text:\n                                    \"Day-to-Day data over the course of the selected date\",\n                                });\n                              }}\n                            ></i>\n                          </label>\n                          <input\n                            value={this.state.startDate}\n                            onChange={(e) => {\n                              this.setState({ startDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* //Select Finish Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>To</label>\n                          <input\n                            value={this.state.finishDate}\n                            onChange={(e) => {\n                              this.setState({ finishDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Finish Date\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Submit button */}\n                      <div className=\"col-md-1\">\n                        <button\n                          disabled={this.state.isDisableDays}\n                          onClick={(e) => {\n                            this.setState({ isDisableDays: true });\n                            this.doGetDataDay();\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 60000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetDataDay();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.datatableday.length > 0) {\n                                for (\n                                  let i = 0;\n                                  i < this.state.datatableday.length;\n                                  i++\n                                ) {\n                                  for (\n                                    let j = 0;\n                                    j < this.state.datatableday[i].length;\n                                    j++\n                                  ) {\n                                    if (\n                                      this.state.datatableday[i][j].AVG !== null\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        type: \"success\",\n                                        text:\n                                          \"Data has been loaded successfully\",\n                                      });\n                                      break;\n                                    }\n\n                                    if (\n                                      i ===\n                                      this.state.datatableday.length - 1\n                                    ) {\n                                      if (\n                                        j ===\n                                        this.state.datatableday[i].length - 1\n                                      ) {\n                                        if (\n                                          this.state.datatableday[i][j].AVG ==\n                                          null\n                                        ) {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title: \"No production data\",\n                                            text: \"Please select other date\",\n                                          });\n                                        } else {\n                                          Swal.fire({\n                                            icon: \"error\",\n                                            title:\n                                              \"Data loading has encountered some error, please try again\",\n                                          });\n                                        }\n                                        break;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Real-time data per hour */}\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Hourly SPC Chart on {this.state.selectDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Chart per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n\n                    {/* Insert Xbar Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                // \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMC}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 4, 4, 2],\n                                dashArray: [6, 6, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                // \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTD}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Production quantity Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxis,\n                              },\n\n                              title: {\n                                text: this.state.title,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 3, 0],\n                              },\n                              stroke: {\n                                width: [2, 4, 2],\n                                dashArray: [6, 0, 6],\n                              },\n                            }}\n                            series={[\n                              {\n                                name: \"Target\",\n                                type: \"line\",\n                                data: this.state.count,\n                                color: \"#ff0000\",\n                              },\n                              {\n                                name: \"Q'ty\",\n                                type: \"line\",\n                                data: this.state.dataCount,\n                                color: \"#E73BF5\",\n                              },\n                            ]}\n                            type=\"line\"\n                            height=\"300\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Table per hour*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Time</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRow()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Real-time data per day */}\n        <div className=\"content\" style={{ paddingTop: 20 }}>\n          <div className=\"content-header\">\n            <div class=\"container-fluid\">\n              <div class=\"row mb-2\">\n                <div class=\"col-sm-\">\n                  <h1 className=\"brand-text font-weight-light\">\n                    Daily SPC Chart from {this.state.startDate} to{\" \"}\n                    {this.state.finishDate}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Chart per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Xbar Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\" style={{}}>\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              markers: {\n                                size: [0, 0, 0, 0, 0, 5, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 2, 2, 2, 4, 4, 4, 2],\n                                dashArray: [0, 0, 6, 6, 6, 0, 0, 0, 0],\n                              },\n\n                              colors: [\n                                \"#C62828\",\n                                \"#C62828\",\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                \"#78909C\",\n                                // \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCday}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Standard Deviation Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 0, 5, 5, 6],\n                              },\n                              stroke: {\n                                width: [2, 2, 4, 4, 2],\n                                dashArray: [6, 6, 0, 0, 0],\n                              },\n                              colors: [\n                                \"#FF5722\",\n                                \"#FF5722\",\n                                // \"#FF8A65\",\n                                \"#4DD0E1\",\n                                \"#9CCC65\",\n                                \"#1976D2\",\n                              ],\n                            }}\n                            series={this.state.seriesMCSTDDay}\n                            type=\"line\"\n                            height=\"350\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Production quantity Chart</label>\n                      </h3>\n                    </div>\n                    {/* Insert R Chart */}\n                    <div className=\"card-body\" style={{ height: 415 }}>\n                      <div className=\"chart\">\n                        <div id=\"areaChart\">\n                          <Chart\n                            options={{\n                              chart: {\n                                id: \"basic-bar\",\n                              },\n                              xaxis: {\n                                categories: this.state.xAxisday,\n                              },\n\n                              title: {\n                                text: this.state.titleday,\n                                align: \"bottom\",\n\n                                style: {\n                                  fontSize: \"14px\",\n                                  fontWeight: \"bold\",\n                                  fontFamily: undefined,\n                                  color: \"#263238\",\n                                },\n                              },\n                              legend: {\n                                showForSingleSeries: false,\n                                showForNullSeries: false,\n                                showForZeroSeries: false,\n                                position: \"right\",\n                              },\n                              markers: {\n                                size: [0, 3, 0],\n                              },\n                              stroke: {\n                                width: [2, 4, 2],\n                                dashArray: [6, 0, 6],\n                              },\n                            }}\n                            series={[\n                              {\n                                name: \"Target\",\n                                type: \"line\",\n                                data: this.state.countDay,\n                                color: \"#ff0000\",\n                              },\n                              {\n                                name: \"Q'ty\",\n                                type: \"line\",\n                                data: this.state.dataCountDay,\n                                color: \"#E73BF5\",\n                              },\n                            ]}\n                            type=\"line\"\n                            height=\"300\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Insert Table per day*/}\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {/* /.card-header */}\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 500 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr>\n                            <th width=\"150\">Machine</th>\n                            <th width=\"175\">Date</th>\n                            <th width=\"175\">%Yield</th>\n                            <th width=\"175\">Average</th>\n                            <th width=\"175\">STD</th>\n                            <th width=\"175\">Cpk</th>\n                            <th width=\"175\">AVG Cycle Time (sec)</th>\n                            <th width=\"175\">Down time (min)</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderTableRowday()}</tbody>\n                      </table>\n                    </div>\n                    {/* /.card-body */}\n                  </div>\n                  {/* /.card */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default VMI;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass RejectByModel extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      model: { label: \"**ALL**\" },\n      insType: [{ label: \"**ALL**\" }],\n      report: [],\n      QANumber: \"\",\n      report2: [],\n\n      Raw_Dat2: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listModel: [],\n      listInsType: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getInsType();\n  };\n\n  // report with select model,date,type\n  doGetDataReport = async () => {\n    const modelLabel =\n    this.state.model.label === \"**ALL**\" ? \"**ALL**\" : this.state.model.label;\n    const result = await httpClient.get(\n      server.REJECTBYMODEL_URL +\n        \"/\" +\n        modelLabel +\n        \"/\" +\n        this.state.insType[0].label +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n  doGetDataReport2 = async () => {\n    const result = await httpClient.get(\n      server.REJECTBYQA_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n  getModel = async () => {\n    const array = await httpClient.get(server.REJECTMODEL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model_group,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getInsType = async () => {\n    const modelLabel =\n    this.state.model.label === \"**ALL**\"\n      ? \"**ALL**\"\n      : this.state.model.label;\n    const array = await httpClient.get(\n      server.REJECTTYPE_URL + \"/\" + modelLabel\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.InspectionType,\n    }));\n    this.setState({ listInsType: options });\n  };\n\n  renderReport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr>\n            <td>{item[\"Type\"]}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Shift\"]}</td>\n            <td>{item[\"Model_NO\"]}</td>\n            <td>{item[\"Model_group\"]}</td>\n            <td>{item[\"Model_Name\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"QA_No\"]}</td>\n            <td>{item[\"Vis_Round\"]}</td>\n            <td>{item[\"Level\"]}</td>\n            <td>{item[\"Result\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"SamplingQTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"NG\"]}</td>\n            <td>{item[\"Detail\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"Location\"]}</td>\n            <td>{item[\"CO2\"]}</td>\n            <td>{item[\"Emp_CO2\"]}</td>\n            <td>{item[\"RecordBy\"]}</td>\n            <td>{item[\"VisualTime\"]}</td>\n            <td>{item[\"VisualName\"]}</td>\n            <td>{item[\"InsNumber\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderReport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr>\n            <td>{item[\"Type\"]}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Shift\"]}</td>\n            <td>{item[\"Model_NO\"]}</td>\n            <td>{item[\"Model_group\"]}</td>\n            <td>{item[\"Model_Name\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"QA_No\"]}</td>\n            <td>{item[\"Vis_Round\"]}</td>\n            <td>{item[\"Level\"]}</td>\n            <td>{item[\"Result\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"SamplingQTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"NG\"]}</td>\n            <td>{item[\"Detail\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"Location\"]}</td>\n            <td>{item[\"CO2\"]}</td>\n            <td>{item[\"Emp_CO2\"]}</td>\n            <td>{item[\"RecordBy\"]}</td>\n            <td>{item[\"VisualTime\"]}</td>\n            <td>{item[\"VisualName\"]}</td>\n            <td>{item[\"InsNumber\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Reject by Model & QA Number</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Reject by Model</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model group</label>\n                        <Select\n                          // options={this.state.listModel}\n                     \n                          // onChange={async (e) => {\n                           \n                          //   await this.setState({ model: e.label });\n                          //   await this.getInsType();\n                          //   await this.setState({\n                          //     insType: [{ label: \"Select Type\" }],\n                          //   });\n                   \n                        \n                          // }}\n                          options={this.state.listModel}\n                        value={this.state.model}\n                          onChange={async (e) => {\n                            await this.setState({ model: e });\n                            await this.getInsType();\n                            await this.setState({\n                              insType: [{ label: \"Select Type\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Type</label>\n                        <Select\n                          options={this.state.listInsType}\n                          value={this.state.insType[0]}\n                          onChange={async (e) => {\n                            await this.setState({ insType: [] });\n                            this.state.insType.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Type\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>\n                          By Daily Select From &nbsp;\n                          {/* <a\n                            class=\"fas fa-question-circle\"\n                            style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                            onClick={() => {\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Day-to-Day Data\",\n                                text:\n                                  \"Day-to-Day data over the course of the selected date\",\n                              });\n                            }}\n                          ></a> */}\n                        </label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Finish Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ QANumber: ('') });\n                          this.setState({ report2: ('') });\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Model_Name.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Model_Name.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                }).then(() => {\n                                  // รีเฟรชหน้าใหม่\n                                window.location.reload();\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              }).then(() => {\n                                // รีเฟรชหน้าใหม่\n                                window.location.reload();\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-3\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"QA_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download by Model\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Scan QA Number</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body \">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-3\">\n                      <div className=\"input-group \">\n                        <input\n                          value={[this.state.QANumber]}\n                         \n                          onChange={async (e) => {\n                            \n                            \n                         \n                            await this.setState({\n                              QANumber: e.target.value,\n                            });\n                                      \n                            await this.setState({\n                              model: [{ label: \"Select Model\" }],\n                            });\n                          \n                             await this.setState({\n                              insType: [{ label: \"Select Type\" }],\n                            });\n                            \n                            \n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Scan QANumber here\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                        \n                          this.setState({ report: ('') });\n                          this.setState({ isDisable: true });\n                   \n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport2();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report2.length > 0) {\n                              if (\n                                this.state.report2[0].Model_group.length > 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report2[0].Model_group.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        // style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-3\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"QA_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          // style={{ marginTop: 30 }}\n                        >\n                          Download by QA Number\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 500 ,\n                            zIndex: \"3\",\n                            position: \"relative\",\n                            zIndex: \"0\"}}\n                        >\n                          <table className=\" table  text-nowrap table-hover table-head-fixed\">\n                            <thead>\n                              <tr>\n                                <th width=\"150\">Type</th>\n                                <th width=\"175\">Date</th>\n                                <th width=\"175\">Shift</th>\n                                <th width=\"175\">Model NO</th>\n                                <th width=\"175\">Model group</th>\n                                <th width=\"175\">Model Name</th>\n                                <th width=\"175\">Line</th>\n                                <th width=\"175\">QA No</th>\n                                <th width=\"175\">Vis Round</th>\n                                <th width=\"175\">Level</th>\n                                <th width=\"175\">Result</th>\n                                <th width=\"175\">SamplingQTY</th>\n                                <th width=\"175\">NG</th>\n                                <th width=\"175\">Detail</th>\n                                <th width=\"175\">QTY</th>\n                                <th width=\"175\">Location</th>\n                                <th width=\"175\">CO2</th>\n                                <th width=\"175\">Emp CO2</th>\n                                <th width=\"175\">RecordBy</th>\n                                <th width=\"175\">VisualTime</th>\n                                <th width=\"175\">VisualName</th>\n                                <th width=\"175\">InsNumber</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport()}</tbody>\n                            <tbody>{this.renderReport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RejectByModel;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass RejectByModel extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n     \n      ItemNos: [],\n      Datecodes1: 'blank',\n      Datecodes2: 'blank',\n      Datecodes3: 'blank',\n      Datecodes4: 'blank',\n      Datecodes5: 'blank',\n      report: [],\n\n      Raw_Dat: [],\n\n      listItemNos: [],\n      listDatecodes1: [],\n      listDatecodes2: [],\n      listDatecodes3: [],\n      listDatecodes4: [],\n      listDatecodes5: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getItemNos();\n    await this.getDatecodes1();\n    await this.getDatecodes2();\n    await this.getDatecodes3();\n    await this.getDatecodes4();\n    await this.getDatecodes5();\n  };\n\n  // report with select ItemNos,date,type\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.DATECODEALL_URL +\n      \"/\" +\n      this.state.ItemNos +\n      \"/\" +\n      this.state.Datecodes1[0].label +\n      \"/\" +\n      this.state.Datecodes2[0].label +\n      \"/\" +\n      this.state.Datecodes3[0].label +\n      \"/\" +\n      this.state.Datecodes4[0].label +\n      \"/\" +\n      this.state.Datecodes5[0].label\n    );\n\n    let rawData = result.data.listRawData\n    console.log(rawData)\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i])\n    }\n    this.setState({Raw_Dat: rawData[0]})\n    console.log(this.state.Raw_Dat)\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  getItemNos = async () => {\n    const array = await httpClient.get(server.ITEMNOS_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model_No,\n    }));\n    this.setState({ listItemNos: options });\n  };\n\n  getDatecodes1 = async () => {\n    const array = await httpClient.get(\n      server.DATECODE_URL + \"/\" + this.state.ItemNos\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Datecode,\n    }));\n    this.setState({ listDatecodes1: options });\n  };\n\n  getDatecodes2 = async () => {\n    const array = await httpClient.get(\n      server.DATECODE_URL + \"/\" + this.state.ItemNos\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Datecode,\n    }));\n    this.setState({ listDatecodes2: options });\n  };\n  getDatecodes3 = async () => {\n    const array = await httpClient.get(\n      server.DATECODE_URL + \"/\" + this.state.ItemNos\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Datecode,\n    }));\n    this.setState({ listDatecodes3: options });\n  };\n  getDatecodes4 = async () => {\n    const array = await httpClient.get(\n      server.DATECODE_URL + \"/\" + this.state.ItemNos\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Datecode,\n    }));\n    this.setState({ listDatecodes4: options });\n  };\n  getDatecodes5 = async () => {\n    const array = await httpClient.get(\n      server.DATECODE_URL + \"/\" + this.state.ItemNos\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Datecode,\n    }));\n    this.setState({ listDatecodes5: options });\n  };\n  renderReport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr>\n            <td>{item[\"Model_No\"]}</td>\n            <td>{item[\"Model_Name\"]}</td>\n            <td>{item[\"Datecode\"]}</td>\n            <td>{item[\"Lot_QA\"]}</td>\n            <td>{item[\"Mo_number\"]}</td>\n            <td align=\"RIGHT\">{Number(item[\"MO_QTY\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td>{item[\"line\"]}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Baseplate\"]}</td>\n            <td>{item[\"Ramp\"]}</td>\n            <td>{item[\"Crashstop\"]}</td>\n            <td>{item[\"Hub\"]}</td>\n            <td>{item[\"Diverter\"]}</td>\n            <td>{item[\"FPC\"]}</td>\n            <td>{item[\"Magnet\"]}</td>\n            <td>{item[\"Supporter\"]}</td>\n            <td>{item[\"Special_control\"]}</td>\n            <td>{item[\"SP1\"]}</td>\n            <td>{item[\"SP2\"]}</td>\n            <td>{item[\"SP3\"]}</td>\n            <td>{item[\"SP4\"]}</td>\n            <td>{item[\"SP5\"]}</td>\n            <td>{item[\"Revision\"]}</td>\n            <td>{item[\"Machine_no\"]}</td>\n            <td>{item[\"CO2_EMP\"]}</td>\n            <td>{item[\"CO2_DATE\"]}</td>\n            <td>{item[\"CO2_SP1\"]}</td>\n            <td>{item[\"CO2_SP2\"]}</td>\n\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n\n    console.log(this.state.ItemNos);\n    console.log(this.state.rawData);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 80 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h2> Trace back component based on production data </h2>\n            \n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\"> Trace back component based on production data</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Item No and Date code </label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-4\">\n                      <div className=\"form-group\">\n                        <label>ItemNO</label>\n                        <Select\n                          options={this.state.listItemNos}\n                          onChange={async (e) => {\n                            await this.setState({ ItemNos: e.label });\n                            await this.getDatecodes1();\n                            await this.setState({\n                              Datecodes1: [{ label: \"Select Datecode\" }],\n                            });\n                            await this.getDatecodes2();\n                            await this.setState({\n                              Datecodes2: [{ label: \"Select Datecode\" }],\n                            });\n                            await this.getDatecodes3();\n                            await this.setState({\n                              Datecodes3: [{ label: \"Select Datecode\" }],\n                            });\n                            await this.getDatecodes4();\n                            await this.setState({\n                              Datecodes4: [{ label: \"Select Datecode\" }],\n                            });\n                            await this.getDatecodes5();\n                            await this.setState({\n                              Datecodes5: [{ label: \"Select Datecode\" }],\n                            });                   \n\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select ItemNo\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-md-1\"></div>\n                        {/* Submit button */}\n                        <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Model_No.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Model_No.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink data={this.state.Raw_Dat}\n                        filename={'QA_report.csv'}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-4\"></div>\n                    {/* //Select Critiria \"Datecode 1\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Datecode(1)</label>\n                        <Select\n                          options={this.state.listDatecodes1}\n                          value={this.state.Datecodes1[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Datecodes1: [] });\n                            await this.getDatecodes2();\n                            this.state.Datecodes1.push({ label: e.label });\n                            await this.getDatecodes5();\n                            await this.setState({\n                              Datecodes5: [{ label: \"Select Datecode\" }],\n                            }); \n                            \n                         \n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Datecode\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Datecode2\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                      <label>Datecode(2)</label>\n                        <Select\n                          options={this.state.listDatecodes2}\n                          value={this.state.Datecodes2[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Datecodes2: [] });\n                            await this.getDatecodes3();\n                        \n                            this.state.Datecodes2.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Datecode\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Datecode3\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                      <label>Datecode(3)</label>\n                        <Select\n                          options={this.state.listDatecodes3}\n                          value={this.state.Datecodes3[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Datecodes3: [] });\n                            await this.getDatecodes4();\n                      \n                            this.state.Datecodes3.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Datecode\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Datecode4\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                      <label>Datecode(4)</label>\n                        <Select\n                          options={this.state.listDatecodes4}\n                          value={this.state.Datecodes4[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Datecodes4: [] });\n                            await this.getDatecodes5();\n                            this.state.Datecodes4.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Datecode\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Datecode5\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                      <label>Datecode(5)</label>\n                        <Select\n                          options={this.state.listDatecodes5}\n                          value={this.state.Datecodes5[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Datecodes5: [] });\n                            this.state.Datecodes5.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Datecode\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-md-2\"></div>\n                \n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head text-nowrap table-hover\">\n                            <thead>\n                              <tr Align=\"Center\" >\n                                <th width=\"175\">Model_No</th>\n                                <th width=\"175\">Model_Name</th>\n                                <th width=\"175\">W/W</th>\n                                <th width=\"175\">Lot_QA</th>\n                                <th width=\"175\">Mo_number</th>\n                                <th width=\"175\">MO_QTY</th>\n                                <th width=\"175\">line</th>\n                                <th width=\"175\">Date</th>\n                                <th width=\"175\">Baseplate</th>\n                                <th width=\"175\">Ramp</th>\n                                <th width=\"175\">Crashstop</th>\n                                <th width=\"175\">Hub</th>\n                                <th width=\"175\">Diverter</th>\n                                <th width=\"175\">FPC</th>\n                                <th width=\"175\">Magnet</th>\n                                <th width=\"175\">Supporter</th>\n                                <th width=\"175\">Special_control</th>\n                                <th width=\"175\">SP1</th>\n                                <th width=\"175\">SP2</th>\n                                <th width=\"175\">SP3</th>\n                                <th width=\"175\">SP4</th>\n                                <th width=\"175\">SP5</th>\n                                <th width=\"175\">Revision</th>\n                                <th width=\"175\">Machine_no</th>\n                                <th width=\"175\">CO2_EMP</th>\n                                <th width=\"175\">CO2_DATE</th>\n                                <th width=\"175\">CO2_SP1</th>\n                                <th width=\"175\">CO2_SP2</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RejectByModel;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass REJECTBYQANO extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      QANumber: \"\",\n      report2: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listModel: [],\n      listInsType: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  doGetDataReport2 = async () => {\n    const result = await httpClient.get(\n      server.REJECTBYQA_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]); \n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  renderReport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr>\n             <td>{item[\"Type\"]}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Shift\"]}</td>\n            <td>{item[\"Model_NO\"]}</td>\n            <td>{item[\"Model_group\"]}</td>\n            <td>{item[\"Model_Name\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"QA_No\"]}</td>\n            <td>{item[\"Vis_Round\"]}</td>\n            <td>{item[\"Level\"]}</td>\n            <td>{item[\"Result\"]}</td>\n            <td align=\"RIGHT\">{Number(item[\"SamplingQTY\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td>{item[\"NG\"]}</td>\n            <td>{item[\"Detail\"]}</td>\n            <td align=\"RIGHT\">{Number(item[\"QTY\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td>{item[\"Location\"]}</td>\n            <td>{item[\"CO2\"]}</td>\n            <td>{item[\"Emp_CO2\"]}</td>\n            <td>{item[\"RecordBy\"]}</td>\n            <td>{item[\"VisualTime\"]}</td>\n            <td>{item[\"VisualName\"]}</td>\n            <td>{item[\"InsNumber\"]}</td>\n            \n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Reject by QA Number</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Reject by QA Number</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Scan QA Number</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-3\">\n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.QANumber}\n                          onChange={async (e) => {\n                            await this.setState({\n                              QANumber: e.target.value,\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Scan QANumber here\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport2();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report2.length > 0) {\n                              if (this.state.report2[0].Model_group.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report2[0].Model_group.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        // style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink data={this.state.Raw_Dat}\n                      filename={'QA_report.csv'}>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          // style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr>\n                              <th width=\"150\">Type</th>\n                                <th width=\"175\">Date</th>\n                                <th width=\"175\">Shift</th>\n                                <th width=\"175\">Model_NO</th>\n                                <th width=\"175\">Model_group</th>\n                                <th width=\"175\">Model_Name</th>\n                                <th width=\"175\">Line</th>\n                                <th width=\"175\">QA_No</th>\n                                <th width=\"175\">Vis_Round</th>\n                                <th width=\"175\">Level</th>\n                                <th width=\"175\">Result</th>\n                                <th width=\"175\">SamplingQTY</th>\n                                <th width=\"175\">NG</th>\n                                <th width=\"175\">Detail</th>\n                                <th width=\"175\">QTY</th>\n                                <th width=\"175\">Location</th>\n                                <th width=\"175\">CO2</th>\n                                <th width=\"175\">Emp_CO2</th>\n                                <th width=\"175\">RecordBy</th>\n                                <th width=\"175\">VisualTime</th>\n                                <th width=\"175\">VisualName</th>\n                                <th width=\"175\">InsNumber</th>\n                           \n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default REJECTBYQANO;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass report_per_producion_team extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      EMP: [],\n      report: [],\n      reportGraph: [],\n      xAxis: [],\n      yAxis1: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listyear: [],\n      listMonth: [],\n      listModel: [],\n      listCode: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getyear();\n    await this.getMonth();\n\n\n  };\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.MQT_URL +\n      \"/\" +\n      this.state.year +\n      \"/\" +\n      this.state.Month[0].label\n\n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultGraph.length; index++) {\n      const item = result.data.resultGraph[index];\n      await xAxis.push(item.SupporterName);\n    }\n\n    let yAxis6 = result.data.LAR;\n    let yInput = result.data.Input;\n    let yReject = result.data.Reject;\n    let yRejectPP = result.data.Reject_Percent;\n\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      reportGraph: result.data.resultGraph,\n      xAxis,\n      yAxis6,\n      yReject,\n      yInput,\n      yRejectPP,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n\n      seriesY: [\n\n        {\n          name: \"Input\",\n          type: \"column\",\n          data: yInput,\n        },\n        {\n          name: \"Reject(lot)\",\n          type: \"column\",\n          data: yReject,\n        },\n\n        {\n          name: \"Reject %\",\n          type: \"line\",\n          data: yRejectPP,\n        },\n\n\n      ],\n      options: {\n        chart: {\n          height: 350,\n          type: 'line',\n          stacked: true\n        },\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          width: [1, 1, 4]\n        },\n        title: {\n          text: 'Most Quality Team',\n          align: 'Conter',\n         \n        },\n        xaxis: {\n          categories: xAxis,\n        },\n        yaxis: [\n          {\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: '#00E396'\n            },\n            labels: {\n              style: {\n                colors: '#00E396',\n              }\n            },\n            title: {\n              text: \"INPUT(LOT)\",\n              style: {\n                color: '#00E396',\n              }\n            },\n            tooltip: {\n              enabled: true\n            }\n          },\n          {\n            seriesName: 'Income',\n            opposite: true,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: '#ff0000'\n            },\n            labels: {\n              style: {\n                colors: '#ff0000',\n              }\n            },\n            title: {\n              text: \"Reject (LOT)\",\n              style: {\n                color: '#ff0000',\n              }\n            },\n          },\n          {\n            seriesName: 'Revenue',\n            opposite: true,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: '#FEB019'\n            },\n            labels: {\n              style: {\n                colors: '#FEB019',\n              },\n            },\n            title: {\n              text: \"Reject (%)\",\n              style: {\n                color: '#FEB019',\n              }\n            }\n          },\n        ],\n        colors: [\n          \"#00E396\",\n          \"#ff0000\",\n          '#FEB019',\n\n\n        ],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          },\n        },\n        legend: {\n          horizontalAlign: 'center',\n          offsetX: 40\n        }\n   \n      },\n    });\n  };\n\n  //     server.LAR_URL +\n  //       \"/\" +\n  //       this.state.Month +\n  //       \"/\" +\n  //       this.state.year\n  //   );\n\n  //     let xAxis = [];\n\n  //     for (let index = 0; index < result.data.resultGraph.length; index++) {\n  //       const item = result.data.resultGraph[index];\n  //       await xAxis.push(item.Date);\n  //     }\n\n\n  //     let yAxis6 = result.data.LAR;\n\n  //     let rawData = result.data.listRawData;\n  //     console.log(rawData);\n  //     console.log(rawData.length);\n  //     for (let i = 1; i < rawData.length; i++) {\n  //       rawData[0].push(...rawData[i]);\n  //     }\n  //     this.setState({ Raw_Dat: rawData[0] });\n  //     console.log(this.state.Raw_Dat);\n\n  //     this.setState({\n  //       report: result.data.result,\n  //       xAxis,\n  //       yAxis6,\n\n\n  //       // series,\n\n  //       isDisable: false,\n  //     });\n\n  //   await this.setState({\n\n  //     seriesY: [\n  //       {\n  //         name: \"Cleanroom Rej%\",\n  //         type: \"line\",\n  //         data: yAxis6,\n  //       },\n\n  //     ],\n  //     options: {\n  //       chart: {\n  //         type: \"line\",\n  //         height: 300,\n  //         stacked: true,\n\n  //       },\n\n  //       responsive: [\n  //         {\n  //           breakpoint: 480,\n  //           options: {\n  //             legend: {\n  //               position: \"bottom\",\n  //               offsetX: -10,\n  //               offsetY: 0,\n  //             },\n  //           },\n  //         },\n  //       ],\n  //       title: {\n  //         text: \"Daily VMI LAR Trend \",\n  //         align: \"center\",\n  //       },\n  //       dataLabels: {\n  //         enabled: true,\n  //         enabledOnSeries: [0],\n  //       },\n  //       xAxis: {\n  //         type: \"date\",\n  //         categories: xAxis,\n  //       },\n  //       yaxis: [{\n  //         title: {\n  //           text: 'Reject QTY by Location(%)',\n  //         },\n\n  //       }],\n  //       colors: [\n  //         // Cleanroom Rej\n  //         \"#AFADDE\",\n  //         // FDB Rej%\n  //         \"#C0EEE4\",\n  //         // Loose_part Rej%\n  //         \"#F595B2\",\n  //         // Washing Rej%\n  //         \"#FFF1BA\",\n  //         // Whiteroom Rej%\n  //         \"#BEE3ED\",\n\n  //         \"#ff9900\",\n  //         // LAR %\n  //         \"#39F10F\",\n  //       ],\n  //       // legend: {\n  //       //   position: 'right',\n  //       //   offsetY: 40\n  //       // },\n  //       fill: {\n  //         opacity: 1,\n  //       },\n  //     },\n  //   });\n  // };\n\n  getyear = async () => {\n    const array = await httpClient.get(server.MQTYEAR_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.year,\n    }));\n    this.setState({ listyear: options });\n  };\n\n  getMonth = async () => {\n    const array = await httpClient.get(server.MQTMONTH_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Month,\n    }));\n    this.setState({ listMonth: options });\n  };\n\n\n  renderreport = () => {\n\n    if (this.state.reportGraph != null) {\n      if (this.state.reportGraph.length > 0) {\n        return this.state.reportGraph.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"SupporterName\"]}</td>\n            <td align=\"Left\">{item[\"ENEmpName\"]}</td>\n            <td align=\"RIGHT\">{Number(item[\"Input\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td align=\"RIGHT\">{Number(item[\"Output\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td align=\"RIGHT\">{Number(item[\"Reject\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td>{item[\"LAR\"]}</td>\n            <td>{item[\"Reject_Percent\"]}</td>\n\n\n          </tr>\n        ));\n      }\n    }\n  };\n\n  renderreport1 = () => {\n\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"center\">\n            <td align=\"left\">{item[\"ModelName\"]}</td>\n            <td >{item[\"Line_No\"]}</td>\n            <td >{item[\"SupporterName\"]}</td>\n            <td align=\"Left\">{item[\"ENEmpName\"]}</td>\n            <td align=\"RIGHT\">{Number(item[\"Input\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td align=\"RIGHT\">{Number(item[\"Output\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td align=\"RIGHT\">{Number(item[\"Reject\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td>{item[\"LAR\"]}</td>\n            <td>{item[\"Reject_Percent\"]}</td>\n\n\n          </tr>\n        ));\n      }\n    }\n  };\n\n\n  render() {\n    console.log(this.state.yAxis6)\n    console.log(this.state.xAxis)\n    console.log(this.state.yInput)\n    console.log(this.state.yReject)\n    console.log(this.state.Code)\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>LAR report per Production team</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                    LAR report per Production team\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Year\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Year</label>\n                        <Select\n                          options={this.state.listyear}\n                          onChange={async (e) => {\n                            await this.setState({ year: e.label });\n                            await this.getMonth();\n\n                            await this.setState({\n                              Month: [{ label: \"Select Month\" }],\n                            });\n                            ;\n                          }}\n\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select year\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Month\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Month</label>\n                        <Select\n                          options={this.state.listMonth}\n                          value={this.state.Month[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Month: [] });\n                            this.state.Month.push({ label: e.label });\n\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Month\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Code\"\n                         <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Code</label>\n                        <Select\n                          options={this.state.listCode}\n                          value={this.state.Code[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Code: [] });\n                            this.state.Code.push({ label: e.label });\n                     \n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Code\"\n                        />\n                      </div>\n                    </div> */}\n\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].SupporterName.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].SupporterName.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"Reject_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <a style={{ marginTop: 30 }} href=\"/MQTByModel\" class=\"btn btn-primary\" role=\"button\" aria-pressed=\"true\">Reject(%)By Supporter</a>\n                    </div>\n                 \n                    {/* <nav aria-label=\"Page navigation example\">\n                      <ul class=\"pagination\">\n                        <li class=\"page-item\">\n                          <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\n                            <span aria-hidden=\"true\">&laquo;</span>\n                            <span class=\"sr-only\">Previous</span>\n                          </a>\n                        </li>\n                        <li class=\"page-item\"><a class=\"page-link\" href=\"/defectNG\">1</a></li>\n                        <li class=\"page-item\"><a class=\"page-link\" href=\"/LAR\">2</a></li>\n                        <li class=\"page-item\">\n                          <a class=\"page-link\" href=\"/LAR\" aria-label=\"Next\">\n                            <span aria-hidden=\"true\">&raquo;</span>\n                            <span class=\"sr-only\">Next</span>\n                          </a>\n                        </li>\n                      </ul>\n                    </nav> */}\n\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"card card-primary card-outline\">\n                        {/* Chart Title */}\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <i className=\"far fa-chart-bar\" />\n                            \n                          </h3>\n                        </div>\n\n                        {/* Insert Xbar Chart */}\n                        <div className=\"row\" style={{ width: \"100%\" }}>\n                          <div style={{ width: \"1%\" }}></div>\n                          <div\n                            className=\"card card-warning\"\n                            style={{ width: \"99%\" }}\n                          >\n                            <div className=\"card-body\">\n                              <div className=\"row\">\n                                <div style={{ width: \"100%\" }}>\n                                  <ReactApexChart\n                                    options={this.state.options}\n                                    series={this.state.seriesY}\n                                    type=\"line\"\n                                    height={450}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n\n                                <th width=\"10\">EMP</th>\n                                <th  width=\"100\">SupporterName</th>\n                                <th width=\"100\">Input(Lot)</th>\n                                <th width=\"100\">Output(Lot)</th>\n                                <th width=\"100\">Reject(Lot)</th>\n                                <th width=\"100\">LAR(%)</th>\n                                <th width=\"100\">Reject(%)</th>\n                                \n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport()}</tbody>\n                          </table>\n                        </div>\n\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n          \n         \n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        \n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n\n                                <th width=\"120\">Model Name</th>\n                                <th width=\"120\">Line_No</th>\n                                <th width=\"120\">Emp No.</th>\n                                <th width=\"120\">Supporter Name</th>\n                                <th width=\"120\">Input(Lot)</th>\n                                <th width=\"120\">Output(Lot)</th>\n                                <th width=\"120\">Reject(Lot)</th>\n                                <th width=\"120\">LAR(%)</th>\n                                <th width=\"120\">Reject(%)</th>\n\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default report_per_producion_team;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass MQTByModel extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      EMP: [],\n      report: [],\n      reportGraph: [],\n      xAxis: [],\n      yAxis1: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listyear: [],\n      listMonth: [],\n      listModel: [],\n      listEMP: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getyear();\n    await this.getMonth();\n    await this.getEMP();\n\n\n  };\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.MQTMODEL_URL +\n      \"/\" +\n      this.state.year +\n      \"/\" +\n      this.state.Month[0].label +\n      \"/\" +\n      this.state.EMP[0].label\n\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      reportGraph: result.data.resultGraph,\n\n\n      // series,\n\n      isDisable: false,\n    });\n\n  };\n\n  getyear = async () => {\n    const array = await httpClient.get(server.MQTYEARMODEL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.year,\n    }));\n    this.setState({ listyear: options });\n  };\n\n  getMonth = async () => {\n    const array = await httpClient.get(\n      server.MQTMONTHMODEL_URL + \"/\" + this.state.year\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Month,\n    }));\n    this.setState({ listMonth: options });\n  };\n  \n  getEMP = async () => {\n    const array = await httpClient.get(server.MQTEMP_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.EmpNo,\n    }));\n    this.setState({ listEMP: options });\n  };\n  // getEMP = async () => {\n  //   const array = await httpClient.get(\n  //     server.MQTEMP_URL + \"/\" + this.state.Month+ \"/\" + this.state.year\n  //   );\n  //   const options = array.data.result.map((d) => ({\n  //     label: d.EmpNo,\n  //   }));\n  //   this.setState({ listEMP: options });\n  // };\n\n  renderreport1 = () => {\n\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"ModelName\"]}</td>\n            <td>{item[\"Line_No\"]}</td>\n            <td>{item[\"SupporterName\"]}</td>\n            <td align=\"Left\">{item[\"ENEmpName\"]}</td>\n            <td align=\"RIGHT\">{Number(item[\"Input\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td align=\"RIGHT\">{Number(item[\"Output\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td align=\"RIGHT\">{Number(item[\"Reject\"]).toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\n            <td>{item[\"LAR\"]}</td>\n            <td>{item[\"Reject_Percent\"]}</td>\n\n\n          </tr>\n        ));\n      }\n    }\n  };\n\n\n  render() {\n    console.log(this.state.year)\n    console.log(this.state.Month)\n    console.log(this.state.EMP)\n    \n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Reject(%)By Supporter  </h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      MQTByModel.js\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Year\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Year</label>\n                        <Select\n                          options={this.state.listyear}\n                          onChange={async (e) => {\n                            await this.setState({ year: e.label });\n                            await this.getMonth();\n                            await this.getEMP();\n                            await this.setState({\n                              Month: [{ label: \"Select Month\" }],\n                            });\n                            await this.setState({\n                              EMP: [{ label: \"Select EMP\" }],\n                            });\n                            ;\n                          }}\n\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select year\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Month\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Month</label>\n                        <Select\n                          options={this.state.listMonth}\n                          value={this.state.Month[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Month: [] });\n                            this.state.Month.push({ label: e.label });\n                            \n\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Month\"\n                        />\n                      </div>\n                    </div>\n                    \n                        {/* //Select Critiria \"EMP\" */}\n                        <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Emp no.</label>\n                        <Select\n                          options={this.state.listEMP}\n                          value={this.state.EMP[0]}\n                          onChange={async (e) => {\n                            await this.setState({ EMP: [] });\n                            this.state.EMP.push({ label: e.label });\n\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select EMP\"\n                        />\n                      </div>\n                    </div>\n              \n\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].SupporterName.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].SupporterName.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"Reject_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <a style={{ marginTop: 30 }} href=\"/MQT\" class=\"btn btn-primary\" role=\"button\" aria-pressed=\"true\">Back</a>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table  text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n\n                                <th width=\"100\">Model Name</th>\n                                <th width=\"100\">Line No.</th>\n                                <th width=\"80\">Emp No.</th>\n                                <th width=\"100\">Supporter Name</th>\n                                <th width=\"70\">Input(Lot)</th>\n                                <th width=\"70\">Output(Lot)</th>\n                                <th width=\"70\">Reject(Lot)</th>\n                                <th width=\"70\">LAR(%)</th>\n                                <th width=\"70\">Reject(%)</th>\n\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MQTByModel;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass MasterItemNO extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      ItemNo: [],\n      ModelGroup: [],\n      report: [],\n      reportGraph: [],\n      xAxis: [],\n      yAxis1: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listItemNo: [],\n      listModelName: [],\n      listModelGroup: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModelGroup();\n    await this.getItemNO();\n  };\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.MASTER_URL +\n        \"/\" +\n        this.state.ModelGroup +\n        \"/\" +\n        this.state.ItemNo[0].label\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      reportGraph: result.data.resultGraph,\n\n      // series,\n\n      isDisable: false,\n    });\n  };\n  getModelGroup = async () => {\n    const array = await httpClient.get(server.MASTERGROUP_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.ModelGroup,\n    }));\n    this.setState({ listModelGroup: options });\n  };\n\n  getItemNO = async () => {\n    const array = await httpClient.get(\n      server.MASTERITEMNO_URL + \"/\" + this.state.ModelGroup\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.ItemNo,\n    }));\n    this.setState({ listItemNo: options });\n  };\n\n  renderreport1 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"center\">\n            <td align=\"Left\">{item[\"Customer_Code\"]}</td>\n            <td align=\"Left\">{item[\"Model_Group\"]}</td>\n            <td align=\"Left\">{item[\"Item_No\"]}</td>\n            <td align=\"Left\">{item[\"Item_Name\"]}</td>\n            <td align=\"Left\">{item[\"Model_Name\"]}</td>\n            <td align=\"Left\">{item[\"WC_Code\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"Lot_Size_Final\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"RIGHT\">\n              {Number(item[\"Lot_Size_QA\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"QA_Code\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"Tray_Per_QA\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"Updater\"]}</td>\n            <td>{item[\"Time_stamp\"]}</td>\n            <td>{item[\"Bag_Color\"]}</td>\n            <td>{item[\"End_Of_Life\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    console.log(this.state.ModelGroup);\n    console.log(this.state.ModelName);\n    console.log(this.state.ItemNo);\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Item no. Master </h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Item no. Master</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"ModelGroup\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model Group</label>\n                        <Select\n                          options={this.state.listModelGroup}\n                          onChange={async (e) => {\n                            await this.setState({ ModelGroup: e.label });\n                            await this.getItemNO();\n                            await this.setState({\n                              ItemNo: [{ label: \"ALL\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select ModelGroup\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"ItemNo\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Item No</label>\n                        <Select\n                          options={this.state.listItemNo}\n                          value={this.state.ItemNo[0]}\n                          onChange={async (e) => {\n                            await this.setState({ ItemNo: [] });\n                            this.state.ItemNo.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select ItemNo\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Item_No.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Item_No.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"Reject_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <a\n                        style={{ marginTop: 30 }}\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table  text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"100\">Customer Code</th>\n                                <th width=\"70\">Model Group</th>\n                                <th width=\"100\">Item No</th>\n                                <th width=\"100\">Item Name</th>\n                                <th width=\"100\">Model Name</th>\n                                <th width=\"70\">WC Code</th>\n                                <th width=\"70\">Lot Size Final</th>\n                                <th width=\"70\">Lot Size QA</th>\n                                <th width=\"70\">QA Code</th>\n                                <th width=\"70\">Tray Per QA</th>\n                                <th width=\"70\">Updater</th>\n                                <th width=\"70\">Time stamp</th>\n                                <th width=\"70\">Bag Color</th>\n                                <th width=\"70\">End Of Life</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MasterItemNO;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass MasterSupplier extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      Supplier: [],\n      ModelGroup: [],\n      report: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listSupplier: [],\n      listModelGroup: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getSupplier();\n    await this.getModelGroup();\n  };\n\n  // report with select Supplier,date,type\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.MASTERSUP_URL +\n        \"/\" +\n        this.state.Supplier +\n        \"/\" +\n        this.state.ModelGroup[0].label\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  getSupplier = async () => {\n    const array = await httpClient.get(server.MASTERSUPPLIER_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Supplier,\n    }));\n    this.setState({ listSupplier: options });\n  };\n\n  getModelGroup = async () => {\n    const array = await httpClient.get(\n      server.MASTERMODELGROUP_URL + \"/\" + this.state.Supplier\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Model_group,\n    }));\n    this.setState({ listModelGroup: options });\n  };\n\n  renderReport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"center\">\n            <td align=\"Left\">{item[\"Part_Name\"]}</td>\n            <td align=\"Left\">{item[\"Supplier_Name\"]}</td>\n            <td align=\"Left\">{item[\"Supplier_Code\"]}</td>\n            <td align=\"Left\">{item[\"Model_group\"]}</td>\n            <td align=\"Left\">{item[\"Model_Name\"]}</td>\n            <td align=\"Left\">{item[\"Remark\"]}</td>\n            <td align=\"Left\">{item[\"Updater\"]}</td>\n            <td align=\"Left\">{item[\"Time_stamp\"]}</td>\n            <td align=\"Left\">{item[\"Part_number_NMB\"]}</td>\n            <td align=\"Left\">{item[\"Part_number_Seagate\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    console.log(this.state.Supplier);\n    console.log(this.state.ModelGroup);\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Supplier data Master </h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\"> Supplier data Master</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Supplier\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Supplier</label>\n                        <Select\n                          options={this.state.listSupplier}\n                          onChange={async (e) => {\n                            await this.setState({ Supplier: e.label });\n                            await this.getModelGroup();\n                            await this.setState({\n                              ModelGroup: [{ label: \"ALL\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Supplier\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model group</label>\n                        <Select\n                          options={this.state.listModelGroup}\n                          value={this.state.ModelGroup[0]}\n                          onChange={async (e) => {\n                            await this.setState({ ModelGroup: [] });\n                            this.state.ModelGroup.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select ModelGroup\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Supplier_Name.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Supplier_Name.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"QA_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <a\n                        style={{ marginTop: 30 }}\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"100\">Part Name</th>\n                                <th width=\"100\">Supplier Name</th>\n                                <th width=\"100\">Supplier Code</th>\n                                <th width=\"100\">Model group</th>\n                                <th width=\"100\">Model Name</th>\n                                <th width=\"100\">Remark</th>\n                                <th width=\"100\">Updater</th>\n                                <th width=\"100\">Time stamp</th>\n                                <th width=\"100\">Part number NMB</th>\n                                <th width=\"100\">Part number Seagate</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MasterSupplier;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass MasterLine extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      ModelGroup: [],\n      Line: [],\n      report: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listModelGroup: [],\n      listLine: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModelGroup();\n    await this.getLine();\n  };\n\n  // report with select ModelGroup,date,type\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.MASTERLINE_URL +\n        \"/\" +\n        this.state.ModelGroup +\n        \"/\" +\n        this.state.Line[0].label\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  getModelGroup = async () => {\n    const array = await httpClient.get(server.GROUP_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.ModelGroup,\n    }));\n    this.setState({ listModelGroup: options });\n  };\n\n  getLine = async () => {\n    const array = await httpClient.get(\n      server.LINE_URL + \"/\" + this.state.ModelGroup\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n\n  renderReport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"center\">\n           \n            <td align=\"Left\">{item[\"Model_Group\"]}</td>\n            <td align=\"Left\">{item[\"Item_no\"]}</td>\n            <td align=\"Left\">{item[\"Item_Name\"]}</td>\n            <td align=\"Left\">{item[\"Model_Name\"]}</td>\n            <td align=\"Left\">{item[\"Line_No\"]}</td>\n            <td align=\"Left\">{item[\"Label_Digit15\"]}</td>\n            <td align=\"Left\">{item[\"Label_Digit23\"]}</td>\n            <td align=\"Left\">{item[\"Updater\"]}</td>\n            <td align=\"Left\">{item[\"Time_stamp\"]}</td>\n            <td align=\"Left\">{item[\"Remark\"]}</td>\n            \n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    console.log(this.state.ModelGroup);\n    console.log(this.state.Line);\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Line no. Master</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Line no. Master</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"ModelGroup\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model Group</label>\n                        <Select\n                          options={this.state.listModelGroup}\n                          onChange={async (e) => {\n                            await this.setState({ ModelGroup: e.label });\n                            await this.getLine();\n                            await this.setState({\n                              Line: [{ label: \"ALL\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select ModelGroup\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Production Line</label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [] });\n                            this.state.Line.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Line\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Model_Group.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Model_Group.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"QA_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <a\n                        style={{ marginTop: 30 }}\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"100\">Model Group</th>\n                                <th width=\"100\">Item no.</th>\n                                <th width=\"100\">Item Name</th>\n                                <th width=\"100\">Model Name</th>\n                                <th width=\"100\">Line No.</th>\n                                <th width=\"100\">Label Digit15</th>\n                                <th width=\"100\">Label Digit23</th>\n                                <th width=\"100\">Updater</th>\n                                <th width=\"100\">Time stamp</th>\n                                <th width=\"100\">Remark</th>\n                                \n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MasterLine;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Associate_Rule_Mining extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      Model: [],\n      Line: [],\n      Date: [],\n      report: [],\n      report2: [],\n      report3: [],\n      report4: [],\n      report5: [],\n      Raw_Dat: [],\n      Raw_Dat2: [],\n      Raw_Dat3: [],\n      Raw_Dat4: [],\n      xAxis: [],\n      seriesY: [], //fail\n      seriesY1: [], //pass\n      seriesY5: [], //fail\n      seriesY6: [], //pass\n      seriesCleanroom: [],\n      options: {}, //fail\n      options1: {}, //pass\n      options5: {}, //fail\n      options6: {}, //pass\n      chart: [],\n      xAxis: [],\n      Sfail: [],\n      Cfail: [],\n      Spass: [],\n      Cpass: [],\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listModel: [],\n      listLine: [],\n      listRawData: [],\n      listDate: [],\n      listRawData2: [],\n      listRawData4: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getLine();\n    await this.getDate();\n  };\n  doGetGraphfail = async () => {\n    const result = await httpClient.get(\n      server.MLDAILY_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultGraph.length; index++) {\n      const item = result.data.resultGraph[index];\n      await xAxis.push(item.Rangeindex_fail);\n    }\n\n    let Sfail = result.data.Support_fail;\n    let Cfail = result.data.Confidence_fail;\n    // let Spass = result.data.Support_pass;\n    // let Cpass = result.data.Confidence_pass;\n    // let yDatum = result.data.Confidence;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      xAxis,\n      Sfail,\n      Cfail,\n      // Spass,\n      // Cpass,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      // let yAxis6 = result.data.LAR;\n      // let yInput = result.data.Input;\n      // let yReject = result.data.Reject;\n      seriesY1: [\n        {\n          name: \"Support _fail\",\n          type: \"column\",\n          data: Sfail,\n        },\n        {\n          name: \"Confidence_fail\",\n          type: \"column\",\n          data: Cfail,\n        },\n        // {\n        //   name: \"Support_pass\",\n        //   type: \"column\",\n        //   data: Spass,\n        // },\n        // {\n        //   name: \"Confidence_pass\",\n        //   type: \"column\",\n        //   data: Cpass,\n        // },\n      ],\n      options1: {\n        chart: {\n          height: 400,\n          type: \"column\",\n          // stacked: true\n        },\n        // dataLabels: {\n        //   enabled: true\n        // },\n        // stroke: {\n        //   width: [1, 1, 4]\n        // },\n        title: {\n          text: \"PFH Fail\",\n          align: \"Conter\",\n        },\n        xaxis: {\n          categories: xAxis,\n        },\n        yaxis: [\n          {\n            min: 0,\n            max: 0.3,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff0000\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff0000\",\n              },\n            },\n            title: {\n              text: \"Support\",\n              style: {\n                color: \"#ff0000\",\n              },\n            },\n            tooltip: {\n              enabled: true,\n            },\n          },\n          {\n            min: 0,\n            max: 1.0,\n            seriesName: \"Income\",\n            opposite: true,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff6600\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff6600\",\n              },\n            },\n            title: {\n              text: \"Confidence\",\n              style: {\n                color: \"#ff6600\",\n              },\n            },\n          },\n        ],\n        colors: [\"#ff0000\", \"#ff6600\"],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: \"topLeft\", // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60,\n          },\n        },\n        legend: {\n          horizontalAlign: \"center\",\n          offsetX: 40,\n        },\n      },\n    });\n  };\n  doGetGraphpass = async () => {\n    const result = await httpClient.get(\n      server.MLDAILY_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultGraphPass.length; index++) {\n      const item = result.data.resultGraphPass[index];\n      await xAxis.push(item.Rangeindex_pass);\n    }\n\n    // let Sfail = result.data.Support_fail;\n    // let Cfail = result.data.Confidence_fail;\n    let Spass = result.data.Support_pass;\n    let Cpass = result.data.Confidence_pass;\n    // let yDatum = result.data.Confidence;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      xAxis,\n      // Sfail,\n      // Cfail,\n      Spass,\n      Cpass,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      // let yAxis6 = result.data.LAR;\n      // let yInput = result.data.Input;\n      // let yReject = result.data.Reject;\n      seriesY: [\n        // {\n        //   name: \"Support _fail\",\n        //   type: \"column\",\n        //   data: Sfail,\n        // },\n        // {\n        //   name: \"Confidence_fail\",\n        //   type: \"column\",\n        //   data: Cfail,\n        // },\n        {\n          name: \"Support_pass\",\n          type: \"column\",\n          data: Spass,\n        },\n        {\n          name: \"Confidence_pass\",\n          type: \"column\",\n          data: Cpass,\n        },\n      ],\n      options: {\n        chart: {\n          height: 400,\n          type: \"column\",\n          // stacked: true\n          responsive: true,\n        },\n        title: {\n          text: \"PFH Pass\",\n          align: \"Conter\",\n        },\n        xaxis: {\n          categories: xAxis,\n        },\n\n        yaxis: [\n          {\n            min: 0,\n            max: 0.3,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#009900\",\n            },\n            labels: {\n              style: {\n                colors: \"#009900\",\n              },\n            },\n\n            title: {\n              text: \"Support\",\n              style: {\n                color: \"#009900\",\n              },\n            },\n          },\n          {\n            min: 0,\n            max: 1.0,\n            seriesName: \"Income\",\n            opposite: true,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#00e673\",\n            },\n            labels: {\n              style: {\n                colors: \"#00e673\",\n              },\n            },\n            title: {\n              text: \"Confidence\",\n              style: {\n                color: \"#00e673\",\n              },\n            },\n          },\n        ],\n        colors: [\"#009900\", \"#00e673\"],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: \"topLeft\", // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60,\n          },\n        },\n        legend: {\n          horizontalAlign: \"center\",\n          offsetX: 40,\n        },\n        scales: {\n          yaxis: {\n            min: 0,\n            max: 1.5,\n          },\n        },\n      },\n    });\n  };\n  doGetRulefail = async () => {\n    const result = await httpClient.get(\n      server.MLDAILY_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.Graphfail.length; index++) {\n      const item = result.data.Graphfail[index];\n      await xAxis.push(item.Rangeindex_fail);\n    }\n\n    let Datum_probe = result.data.Datum_probe;\n    let Max_force = result.data.Max_force;\n    let Set_Dim_A = result.data.Set_Dim_A;\n    let Set_Dim_B = result.data.Set_Dim_B;\n    let Set_Dim_C = result.data.Set_Dim_C;\n    let Diecast_Pivot_2 = result.data.Diecast_Pivot_2;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      xAxis,\n      Datum_probe,\n      Max_force,\n      Set_Dim_A,\n      Set_Dim_B,\n      Set_Dim_C,\n      Diecast_Pivot_2,\n      // Sfail,\n      // Cfail,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      seriesY5: [\n        {\n          name: \"Diecast Pivot 2\",\n          type: \"scatter\",\n          data: Diecast_Pivot_2,\n        },\n        {\n          name: \"Datum probe\",\n          type: \"scatter\",\n          data: Datum_probe,\n        },\n        {\n          name: \"Max force\",\n          type: \"scatter\",\n          data: Max_force,\n        },\n        {\n          name: \"Set Dim A\",\n          type: \"scatter\",\n          data: Set_Dim_A,\n        },\n        {\n          name: \"Set Dim B\",\n          type: \"scatter\",\n          data: Set_Dim_B,\n        },\n        {\n          name: \"Set Dim C\",\n          type: \"scatter\",\n          data: Set_Dim_C,\n        },\n      ],\n      options5: {\n        chart: {\n          height: 350,\n          type: \"line\",\n          toolbar: {\n            show: false,\n          },\n        },\n\n        xaxis: {\n          lines: {\n            show: false,\n          },\n        },\n        yaxis: {\n          lines: {\n            show: true,\n          },\n        },\n        title: {\n          text: \"PFH Fail\",\n          align: \"Conter\",\n        },\n        xaxis: {\n          categories: xAxis,\n          lines: {\n            show: true,\n          },\n        },\n\n        yaxis: [\n          {\n            min: -5,\n            max: 5,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff6600\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff6600\",\n              },\n            },\n\n            title: {\n              text: \"Bin\",\n              style: {\n                color: \"#ff6600\",\n              },\n            },\n          },\n        ],\n        colors: [\n          \"#ff9900\",\n\n          \"#3399ff\",\n\n          \"#00ff00\",\n\n          \"#ff1a1a\",\n\n          \"#FF69B4\",\n\n          \"#9400D3\",\n        ],\n        // colors: [\"#009900\", \"#00e673\"],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: \"topLeft\", // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60,\n          },\n        },\n        legend: {\n          horizontalAlign: \"center\",\n          offsetX: 40,\n        },\n      },\n    });\n  };\n  doGetRulepass = async () => {\n    const result = await httpClient.get(\n      server.MLDAILY_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.GraphPass.length; index++) {\n      const item = result.data.GraphPass[index];\n      await xAxis.push(item.Rangeindex_pass);\n    }\n\n    let Datum_probe_pass = result.data.Datum_probe_pass;\n    let Max_force_pass = result.data.Max_force_pass;\n    let Set_Dim_A_pass = result.data.Set_Dim_A_pass;\n    let Set_Dim_B_pass = result.data.Set_Dim_B_pass;\n    let Set_Dim_C_pass = result.data.Set_Dim_C_pass;\n    let Diecast_Pivot_2_pass = result.data.Diecast_Pivot_2_pass;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      xAxis,\n      Datum_probe_pass,\n      Max_force_pass,\n      Set_Dim_A_pass,\n      Set_Dim_B_pass,\n      Set_Dim_C_pass,\n      Diecast_Pivot_2_pass,\n      // Sfail,\n      // Cfail,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      seriesY6: [\n        {\n          name: \"Diecast Pivot 2\",\n          type: \"scatter\",\n          data: Diecast_Pivot_2_pass,\n        },\n        {\n          name: \"Datum probe\",\n          type: \"scatter\",\n          data: Datum_probe_pass,\n        },\n        {\n          name: \"Max force\",\n          type: \"scatter\",\n          data: Max_force_pass,\n        },\n        {\n          name: \"Set Dim A\",\n          type: \"scatter\",\n          data: Set_Dim_A_pass,\n        },\n        {\n          name: \"Set Dim B\",\n          type: \"scatter\",\n          data: Set_Dim_B_pass,\n        },\n        {\n          name: \"Set Dim C\",\n          type: \"scatter\",\n          data: Set_Dim_C_pass,\n        },\n      ],\n      options6: {\n        chart: {\n          height: 350,\n          type: \"line\",\n          toolbar: {\n            show: false,\n          },\n        },\n\n        xaxis: {\n          lines: {\n            show: false,\n          },\n        },\n        yaxis: {\n          lines: {\n            show: true,\n          },\n        },\n        title: {\n          text: \"PFH Pass\",\n          align: \"Conter\",\n        },\n        xaxis: {\n          categories: xAxis,\n          lines: {\n            show: true,\n          },\n        },\n\n        yaxis: [\n          {\n            min: -5,\n            max: 5,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#009900\",\n            },\n            labels: {\n              style: {\n                colors: \"#009900\",\n              },\n            },\n\n            title: {\n              text: \"Bin\",\n              style: {\n                color: \"#009900\",\n              },\n            },\n          },\n        ],\n        colors: [\n          \"#ff9900\",\n\n          \"#3399ff\",\n\n          \"#00ff00\",\n\n          \"#ff1a1a\",\n\n          \"#FF69B4\",\n\n          \"#9400D3\",\n        ],\n        // colors: [\"#009900\", \"#00e673\"],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: \"bottomRight\", // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60,\n          },\n        },\n        legend: {\n          horizontalAlign: \"center\",\n          offsetX: 40,\n        },\n      },\n    });\n  };\n  doGetaccuracyML = async () => {\n    const result = await httpClient.get(\n      server.MLACCURACY_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n    let rawData = result.data.listRawData2;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat2: rawData[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n  doGetReference = async () => {\n    const result = await httpClient.get(server.REFERENCE_URL);\n    let rawData = result.data.listRawData3;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat3: rawData[0] });\n    console.log(this.state.Raw_Dat3);\n\n    this.setState({\n      report3: result.data.result,\n      isDisable: false,\n    });\n  };\n  DESCRIBEML = async () => {\n    const result = await httpClient.get(\n      server.DESCRIBEML_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n    // let Spass = result.data.Support_pass;\n    // let Cpass = result.data.Confidence_pass;\n    // let yDatum = result.data.Confidence;\n\n    let rawData = result.data.listRawData5;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report5: result.data.result,\n      // Spass,\n      // Cpass,\n\n      // series,\n\n      isDisable: false,\n    });\n  };\n\n  doGetDate = async () => {\n    const result = await httpClient.get(\n      server.MLDAILYDATE_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n    let rawData = result.data.listRawData4;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat4: rawData[0] });\n    console.log(this.state.Raw_Dat4);\n\n    this.setState({\n      report4: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  renderreport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"Rangeindex\"]}</td>\n            <td>{item[\"Diecast_Pivot_2\"]}</td>\n            <td>{item[\"Datum_probe\"]}</td>\n            <td>{item[\"Max_force\"]}</td>\n            <td>{item[\"Set_Dim_A\"]}</td>\n            <td>{item[\"Set_Dim_B\"]}</td>\n            <td>{item[\"Set_Dim_C\"]}</td>\n            <td>{item[\"Projection\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"Support\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"RIGHT\">\n              {Number(item[\"Confidence\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport1 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"Details\"]}</td>\n            <td>\n              {Number(item[\"Procision\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"recall\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"f1_score\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"support\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report3 != null) {\n      if (this.state.report3.length > 0) {\n        return this.state.report3.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"Bin2\"]}</td>\n            <td>{item[\"Pivot_2_Min\"]}</td>\n            <td>{item[\"Pivot_2_Max\"]}</td>\n            <td>{item[\"Datum_probe_Min\"]}</td>\n            <td>{item[\"Datum_probe_Max\"]}</td>\n\n            <td>{item[\"Max_force_Min\"]}</td>\n            <td>{item[\"Max_force_Max\"]}</td>\n\n            <td>{item[\"Set_Dim_A_Min\"]}</td>\n            <td>{item[\"Set_Dim_A_Max\"]}</td>\n\n            <td>{item[\"Set_Dim_B_Min\"]}</td>\n            <td>{item[\"Set_Dim_B_Max\"]}</td>\n\n            <td>{item[\"Set_Dim_C_Min\"]}</td>\n            <td>{item[\"Set_Dim_C_Max\"]}</td>\n            <td>{item[\"KPOV_Min\"]}</td>\n            <td>{item[\"KPOV_Max\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport4 = () => {\n    if (this.state.report4 != null) {\n      if (this.state.report4.length > 0) {\n        return this.state.report4.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"betweenDate\"]}</td>\n            <td>{item[\"Model\"]}</td>\n            <td>{item[\"Line\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderDESCRIBEML = () => {\n    if (this.state.report5 != null) {\n      if (this.state.report5.length > 0) {\n        return this.state.report5.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"describe1\"]}</td>\n            <td>\n              {Number(item[\"Datum_probe\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 4,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Max_force\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 4,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Set_Dim_A\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 4,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Set_Dim_B\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 4,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Set_Dim_C\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 4,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Diecast_Pivot_2\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 4,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Projection\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 4,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  renderreport1 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"Details\"]}</td>\n            <td>\n              {Number(item[\"Procision\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"recall\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"f1_score\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"support\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MLMODEL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getLine = async () => {\n    const array = await httpClient.get(\n      server.MLLINE_URL + \"/\" + this.state.Model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n  getDate = async () => {\n    const array = await httpClient.get(server.MLDATE_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Date,\n    }));\n    this.setState({ listDate: options });\n  };\n  render() {\n    console.log(this.state.report4);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Associate Rule Mining </h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                    Associate Rule Mining\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model</label>\n                        <Select\n                          options={this.state.listModel}\n                          onChange={async (e) => {\n                            await this.setState({ Model: e.label });\n                            await this.getLine();\n                            await this.getDate();\n                            await this.setState({\n                              Line: [{ label: \"Select line\" }],\n                            });\n                            await this.setState({\n                              Date: [{ label: \"Select Date\" }],\n                            });\n                            // await this.setState({\n                            //   EMP: [{ label: \"Select EMP\" }],\n                            // });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Month\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line</label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [] });\n                            this.state.Line.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Line\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Start Date\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Date</label>\n                        <Select\n                          options={this.state.listDate}\n                          value={this.state.Date[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Date: [] });\n                            this.state.Date.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Date\"\n                        />\n                      </div>\n                    </div> */}\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>\n                          Select Date &nbsp;\n                          {/* <a\n                            class=\"fas fa-question-circle\"\n                            style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                            onClick={() => {\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Day-to-Day Data\",\n                                text:\n                                  \"Day-to-Day data over the course of the selected date\",\n                              });\n                            }}\n                          ></a> */}\n                        </label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetGraphfail();\n                              await this.doGetaccuracyML();\n                              await this.doGetReference();\n                              await this.doGetGraphpass();\n                              await this.doGetDate();\n                              await this.doGetRulefail();\n                              await this.doGetRulepass();\n                              await this.DESCRIBEML();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Model.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Model.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n\n                    <div className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"DailyML report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download report\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat2}\n                        filename={\"Detail accuracy.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download accuracy\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-8\">\n                  {/* /.card-header */}\n                  <div className=\"card card-primary\">\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 450 }}\n                    >\n                      <table className=\"table  text-nowrap table-hover\">\n                        <thead>\n                          <tr align=\"center\">\n                            <th width=\"10\">Describe</th>\n                            <th width=\"10\">Datum probe</th>\n                            <th width=\"10\">Max force</th>\n                            <th width=\"10\">Set Dim A</th>\n                            <th width=\"10\">Set Dim B</th>\n                            <th width=\"10\">Set Dim C</th>\n                            <th width=\"10\">Diecast Pivot 2</th>\n                            <th width=\"10\">Projection Flange Height</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderDESCRIBEML()}</tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"content\">\n                  <div class=\"container-fluid\">\n                    <div className=\"card card-primary\">\n                      <div className=\"row\">\n                        <div className=\"col-12\">\n                          {/* /.card-header */}\n                          <div\n                            className=\"card-body table-responsive p-0\"\n                            style={{ height: 100 }}\n                          >\n                            <table className=\"table table-head-fixed text-nowrap table-hover\">\n                              <thead>\n                                <tr align=\"center\">\n                                  <th width=\"50\">Date</th>\n                                  <th width=\"50\">Range data</th>\n                                  <th width=\"50\">Model</th>\n                                  <th width=\"50\">Line</th>\n                                </tr>\n                              </thead>\n                              <tbody>{this.renderreport4()}</tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"content\">\n                    <li>Prediction performance(Confusion Matrix)</li>\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div className=\"row\">\n                          <div className=\"col-12\">\n                            {/* /.card-header */}\n                            <div\n                              className=\"card-body table-responsive p-0\"\n                              style={{ height: 300 }}\n                            >\n                              <table className=\"table table-head-fixed text-nowrap table-hover\">\n                                <thead>\n                                  <tr align=\"center\">\n                                    <th width=\"80\">Details</th>\n                                    <th width=\"80\">Precision</th>\n                                    <th width=\"80\">recall</th>\n                                    <th width=\"80\">f1-score</th>\n                                    <th width=\"80\">Support</th>\n                                  </tr>\n                                </thead>\n                                <tbody>{this.renderreport1()}</tbody>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Rule Efficiency Ranking</label>\n                      </h3>\n                    </div>\n\n                    {/* Insert Xbar Chart */}\n                    <div className=\"row\" style={{ width: \"100%\" }}>\n                      <div style={{ width: \"1%\" }}></div>\n                      <div\n                        className=\"card card-warning\"\n                        style={{ width: \"99%\" }}\n                      >\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div style={{ width: \"100%\" }}>\n                              <ReactApexChart\n                                options={this.state.options1}\n                                series={this.state.seriesY1}\n                                type=\"line\"\n                                height={200}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Rule Efficiency Ranking</label>\n                      </h3>\n                    </div>\n                    {/* Insert Xbar Chart */}\n                    <div className=\"row\" style={{ width: \"100%\" }}>\n                      <div style={{ width: \"1%\" }}></div>\n                      <div\n                        className=\"card card-warning\"\n                        style={{ width: \"99%\" }}\n                      >\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div style={{ width: \"100%\" }}>\n                              <ReactApexChart\n                                options={this.state.options}\n                                series={this.state.seriesY}\n                                type=\"line\"\n                                height={200}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Rule description</label>\n                      </h3>\n                    </div>\n                    {/* Insert Xbar Chart */}\n                    <div className=\"row\" style={{ width: \"100%\" }}>\n                      <div style={{ width: \"1%\" }}></div>\n                      <div\n                        className=\"card card-warning\"\n                        style={{ width: \"99%\" }}\n                      >\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div style={{ width: \"100%\" }}>\n                              <ReactApexChart\n                                options={this.state.options5}\n                                series={this.state.seriesY5}\n                                type=\"scatter\"\n                                height={250}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Rule description</label>\n                      </h3>\n                    </div>\n                    {/* Insert Xbar Chart */}\n                    <div className=\"row\" style={{ width: \"100%\" }}>\n                      <div style={{ width: \"1%\" }}></div>\n                      <div\n                        className=\"card card-warning\"\n                        style={{ width: \"99%\" }}\n                      >\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div style={{ width: \"100%\" }}>\n                              <ReactApexChart\n                                options={this.state.options6}\n                                series={this.state.seriesY6}\n                                type=\"scatter\"\n                                height={250}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div class=\"content\">\n                  <h3>Data Classification table</h3>\n                  <div class=\"container-fluid\">\n                    <div className=\"card card-primary\">\n                      <div className=\"row\">\n                        <div className=\"col-12\">\n                          {/* /.card-header */}\n                          <div\n                            className=\"card-body table-responsive p-0\"\n                            style={{ height: 400 }}\n                          >\n                            <table className=\"table-Warning table-head-fixed   table-hover \">\n                              <thead>\n                                <tr align=\"center\">\n                                  <th width=\"80\">Bin</th>\n                                  <th width=\"120\">Diecast Pivot 2</th>\n                                  <th width=\"120\">Diecast Pivot 2</th>\n                                  <th width=\"100\">Datum probe </th>\n                                  <th width=\"100\">Datum probe </th>\n                                  <th width=\"100\">Max force</th>\n                                  <th width=\"100\">Max force</th>\n                                  <th width=\"100\">Set Dim A </th>\n                                  <th width=\"100\">Set Dim A </th>\n                                  <th width=\"100\">Set Dim B </th>\n                                  <th width=\"100\">Set Dim B </th>\n                                  <th width=\"100\">Set Dim C </th>\n                                  <th width=\"100\">Set Dim C </th>\n\n                                  <th width=\"120\">Projection Flange Height</th>\n                                  <th width=\"120\">Projection Flange Height</th>\n                                </tr>\n                                <tr align=\"center\">\n                                  <th width=\"80\"> </th>\n                                  <th width=\"80\" style={{ color: \"#ff9900\" }}>\n                                    Min\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#ff9900\" }}>\n                                    Max\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#3399ff\" }}>\n                                    Min\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#3399ff\" }}>\n                                    Max\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#00ff00\" }}>\n                                    Min\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#00ff00\" }}>\n                                    Max\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#ff1a1a\" }}>\n                                    Min\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#ff1a1a\" }}>\n                                    Max\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#FF69B4\" }}>\n                                    Min\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#FF69B4\" }}>\n                                    Max\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#9400D3\" }}>\n                                    Min\n                                  </th>\n                                  <th width=\"80\" style={{ color: \"#9400D3\" }}>\n                                    Max\n                                  </th>\n\n                                  <th width=\"80\">Min</th>\n                                  <th width=\"80\">Max</th>\n                                </tr>\n                              </thead>\n                              <tbody>{this.renderreport2()}</tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  {/* /.card-header */}\n                  <div className=\"card card-primary\">\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 350 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr align=\"center\">\n                            <th width=\"10\">Rule No.</th>\n                            <th width=\"100\">Diecast Pivot 2</th>\n                            <th width=\"100\">Datum probe</th>\n                            <th width=\"100\">Max force</th>\n                            <th width=\"100\">Set Dim A</th>\n                            <th width=\"100\">Set Dim B</th>\n                            <th width=\"100\">Set Dim C</th>\n                            <th width=\"100\">Projection</th>\n                            <th width=\"100\">Support</th>\n                            <th width=\"100\">Confidence</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderreport()}</tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n        \n              {/* </div> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Associate_Rule_Mining;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass DailyML1 extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      Model: [],\n      Line: [],\n      Date: [],\n      report: [],\n      report2: [],\n      report3: [],\n      report4: [],\n\n      Raw_Dat: [],\n      Raw_Dat2: [],\n      Raw_Dat3: [],\n      Raw_Dat4: [],\n      xAxis: [],\n      seriesY: [], //fail\n      seriesY1: [], //pass\n      seriesY5: [], //fail\n      seriesY6: [], //pass\n      seriesCleanroom: [],\n      options: {}, //fail\n      options1: {}, //pass\n      options5: {}, //fail\n      options6: {}, //pass\n      chart: [],\n      xAxis: [],\n      Sfail: [],\n      Cfail: [],\n      Spass: [],\n      Cpass: [],\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listModel: [],\n      listLine: [],\n      listRawData: [],\n      listDate: [],\n      listRawData2: [],\n      listRawData4: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getLine();\n  };\n\n  doGetGraphfail = async () => {\n    const result = await httpClient.get(\n      server.MLDAILY_1_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultGraph.length; index++) {\n      const item = result.data.resultGraph[index];\n      await xAxis.push(item.Rangeindex_fail);\n    }\n\n    let Sfail = result.data.Support_fail;\n    let Cfail = result.data.Confidence_fail;\n    // let Spass = result.data.Support_pass;\n    // let Cpass = result.data.Confidence_pass;\n    // let yDatum = result.data.Confidence;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      xAxis,\n      Sfail,\n      Cfail,\n      // Spass,\n      // Cpass,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      // let yAxis6 = result.data.LAR;\n      // let yInput = result.data.Input;\n      // let yReject = result.data.Reject;\n      seriesY1: [\n        {\n          name: \"Support _fail\",\n          type: \"column\",\n          data: Sfail,\n        },\n        {\n          name: \"Confidence_fail\",\n          type: \"column\",\n          data: Cfail,\n        },\n        // {\n        //   name: \"Support_pass\",\n        //   type: \"column\",\n        //   data: Spass,\n        // },\n        // {\n        //   name: \"Confidence_pass\",\n        //   type: \"column\",\n        //   data: Cpass,\n        // },\n      ],\n      options1: {\n        chart: {\n          height: 400,\n          width: 10,\n          type: \"column\",\n          // stacked: true\n        },\n        // dataLabels: {\n        //   enabled: true\n        // },\n        // stroke: {\n        //   width: [1, 1, 4]\n        // },\n        title: {\n          text: \"PFH Fail\",\n          align: \"Conter\",\n        },\n        xaxis: {\n          categories: xAxis,\n        },\n        yaxis: [\n          {\n            min: 0,\n            max: 0.30,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff0000\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff0000\",\n              },\n            },\n            title: {\n              text: \"Support\",\n              style: {\n                color: \"#ff0000\",\n              },\n            },\n            tooltip: {\n              enabled: true,\n            },\n          },\n          {\n            min: 0,\n            max: 1.0,\n            seriesName: \"Income\",\n            opposite: true,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff6600\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff6600\",\n              },\n            },\n            title: {\n              text: \"Confidence\",\n              style: {\n                color: \"#ff6600\",\n              },\n            },\n          },\n        ],\n        colors: [\"#ff0000\", \"#ff6600\"],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: \"topLeft\", // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60,\n          },\n        },\n        legend: {\n          horizontalAlign: \"center\",\n          offsetX: 40,\n        },\n      },\n    });\n  };\n  doGetGraphpass = async () => {\n    const result = await httpClient.get(\n      server.MLDAILY_1_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultGraphPass.length; index++) {\n      const item = result.data.resultGraphPass[index];\n      await xAxis.push(item.Rangeindex_pass);\n    }\n\n    // let Sfail = result.data.Support_fail;\n    // let Cfail = result.data.Confidence_fail;\n    let Spass = result.data.Support_pass;\n    let Cpass = result.data.Confidence_pass;\n    // let yDatum = result.data.Confidence;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      xAxis,\n      // Sfail,\n      // Cfail,\n      Spass,\n      Cpass,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      // let yAxis6 = result.data.LAR;\n      // let yInput = result.data.Input;\n      // let yReject = result.data.Reject;\n      seriesY: [\n        // {\n        //   name: \"Support _fail\",\n        //   type: \"column\",\n        //   data: Sfail,\n        // },\n        // {\n        //   name: \"Confidence_fail\",\n        //   type: \"column\",\n        //   data: Cfail,\n        // },\n        {\n          name: \"Support_pass\",\n          type: \"column\",\n          data: Spass,\n        },\n        {\n          name: \"Confidence_pass\",\n          type: \"column\",\n          data: Cpass,\n        },\n      ],\n      options: {\n        chart: {\n          height: 400,\n          type: \"column\",\n          // stacked: true\n          responsive: true,\n        },\n        title: {\n          text: \"PFH Pass\",\n          align: \"Conter\",\n        },\n        xaxis: {\n          categories: xAxis,\n        },\n\n        yaxis: [\n          {\n            min: 0,\n            max: 0.30,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#009900\",\n            },\n            labels: {\n              style: {\n                colors: \"#009900\",\n              },\n            },\n\n            title: {\n              text: \"Support\",\n              style: {\n                color: \"#009900\",\n              },\n            },\n          },\n          {\n            min: 0,\n            max: 1.0,\n            seriesName: \"Income\",\n            opposite: true,\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#00e673\",\n            },\n            labels: {\n              style: {\n                colors: \"#00e673\",\n              },\n            },\n            title: {\n              text: \"Confidence\",\n              style: {\n                color: \"#00e673\",\n              },\n            },\n          },\n        ],\n        colors: [\"#009900\", \"#00e673\"],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: \"topLeft\", // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60,\n          },\n        },\n        legend: {\n          horizontalAlign: \"center\",\n          offsetX: 40,\n        },\n        scales: {\n          yaxis: {\n            min: 0,\n            max: 1.5,\n          },\n        },\n      },\n    });\n  };\n  doGetDataReport1 = async () => {\n    const result = await httpClient.get(\n      server.MLACCURACY_1_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n    let rawData = result.data.listRawData2;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat2: rawData[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n  doGetDataReport2 = async () => {\n    const result = await httpClient.get(server.REFERENCE_1_URL);\n    let rawData = result.data.listRawData3;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat3: rawData[0] });\n    console.log(this.state.Raw_Dat3);\n\n    this.setState({\n      report3: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  doGetDataReport4 = async () => {\n    const result = await httpClient.get(\n      server.MLDAILYDATE_1_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n    let rawData = result.data.listRawData4;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat4: rawData[0] });\n    console.log(this.state.Raw_Dat4);\n\n    this.setState({\n      report4: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  renderreport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"center\">\n            <tb>{item[\"Rangeindex\"]}</tb>\n            <td>{item[\"Datum_probe\"]}</td>\n            <td>{item[\"Max_force\"]}</td>\n            <td>{item[\"Set_Dim_A\"]}</td>\n            <td>{item[\"Set_Dim_B\"]}</td>\n            <td>{item[\"Set_Dim_C\"]}</td>\n            <td>{item[\"Pivot_Height\"]}</td>\n            <td>{item[\"Projection\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"Support\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"RIGHT\">\n              {Number(item[\"Confidence\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport1 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"Details\"]}</td>\n            <td>\n              {Number(item[\"Procision\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"recall\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"f1_score\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"support\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report3 != null) {\n      if (this.state.report3.length > 0) {\n        return this.state.report3.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"Bin\"]}</td>\n            <td>{item[\"Datum_probe_Min\"]}</td>\n            <td>{item[\"Datum_probe_Max\"]}</td>\n            <td>{item[\"Max_force_Min\"]}</td>\n            <td>{item[\"Max_force_Max\"]}</td>\n            <td>{item[\"Set_Dim_A_Min\"]}</td>\n            <td>{item[\"Set_Dim_A_Max\"]}</td>\n            <td>{item[\"Set_Dim_B_Min\"]}</td>\n            <td>{item[\"Set_Dim_B_Max\"]}</td>\n            <td>{item[\"Set_Dim_C_Min\"]}</td>\n            <td>{item[\"Set_Dim_C_Max\"]}</td>\n            <td>{item[\"Pivot_Height_Min\"]}</td>\n            <td>{item[\"Pivot_Height_Max\"]}</td>\n            <td>{item[\"KPOV_Min\"]}</td>\n            <td>{item[\"KPOV_Max\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport4 = () => {\n    if (this.state.report4 != null) {\n      if (this.state.report4.length > 0) {\n        return this.state.report4.map((item) => (\n          <tr Align=\"center\">\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"betweenDate\"]}</td>\n            <td>{item[\"Model\"]}</td>\n            <td>{item[\"Line\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MLMODEL_1_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getLine = async () => {\n    const array = await httpClient.get(\n      server.MLLINE_1_URL + \"/\" + this.state.Model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n  render() {\n    console.log(this.state.report);\n    console.log(this.state.report2);\n    console.log(this.state.report3);\n    console.log(this.state.report4);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>ML Monitoring Type1</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">ML Monitoring Type1</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model</label>\n                        <Select\n                          options={this.state.listModel}\n                          onChange={async (e) => {\n                            await this.setState({ Model: e.label });\n                            await this.getLine();\n                            await this.setState({\n                              Line: [{ label: \"Select line\" }],\n                            });\n                            // await this.setState({\n                            //   EMP: [{ label: \"Select EMP\" }],\n                            // });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Month\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line</label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [] });\n                            this.state.Line.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Line\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Start Date\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Date</label>\n                        <Select\n                          options={this.state.listDate}\n                          value={this.state.Date[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Date: [] });\n                            this.state.Date.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Date\"\n                        />\n                      </div>\n                    </div> */}\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>\n                          Select Date &nbsp;\n                          {/* <a\n                            class=\"fas fa-question-circle\"\n                            style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                            onClick={() => {\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Day-to-Day Data\",\n                                text:\n                                  \"Day-to-Day data over the course of the selected date\",\n                              });\n                            }}\n                          ></a> */}\n                        </label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetGraphfail();\n                              await this.doGetDataReport1();\n                              await this.doGetDataReport2();\n                              await this.doGetGraphpass();\n                              await this.doGetDataReport4();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Model.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Model.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n\n                    <div className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"DailyML report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download report\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat2}\n                        filename={\"Detail accuracy.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download accuracy\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Rule Efficiency Ranking</label>\n                      </h3>\n                    </div>\n\n                    {/* Insert Xbar Chart */}\n                    <div className=\"row\" style={{ width: \"100%\" }}>\n                      <div style={{ width: \"1%\" }}></div>\n                      <div\n                        className=\"card card-warning\"\n                        style={{ width: \"99%\" }}\n                      >\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div style={{ width: \"100%\" }}>\n                              <ReactApexChart\n                                options={this.state.options1}\n                                series={this.state.seriesY1}\n                                type=\"line\"\n                                height={200}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-6\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <i className=\"far fa-chart-bar\" />\n                        <label>Rule Efficiency Ranking</label>\n                      </h3>\n                    </div>\n                    {/* Insert Xbar Chart */}\n                    <div className=\"row\" style={{ width: \"100%\" }}>\n                      <div style={{ width: \"1%\" }}></div>\n                      <div\n                        className=\"card card-warning\"\n                        style={{ width: \"99%\" }}\n                      >\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div style={{ width: \"100%\" }}>\n                              <ReactApexChart\n                                options={this.state.options}\n                                series={this.state.seriesY}\n                                type=\"line\"\n                                height={200}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n      \n              <div className=\"row\">\n                <div className=\"col-8\">\n                  {/* /.card-header */}\n                  <div className=\"card card-primary\">\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 450 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr align=\"center\">\n                            {/* <th width=\"10\">Rule No.</th>\n                                <th width=\"100\">Date</th>\n                                <th width=\"100\">Range data</th>\n                                <th width=\"100\">Model</th>\n                                <th width=\"100\">Line</th> */}\n                            <th width=\"10\">Rule No.</th>\n                            <th width=\"100\">Datum probe</th>\n                            <th width=\"100\">Max force</th>\n                            <th width=\"100\">Set Dim A</th>\n                            <th width=\"100\">Set Dim B</th>\n                            <th width=\"100\">Set Dim C</th>\n                            <th width=\"100\">Pivot Height</th>\n                            <th width=\"100\">Projection</th>\n                            <th width=\"100\">Support</th>\n                            <th width=\"100\">Confidence</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderreport()}</tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"content\">\n                  <div class=\"container-fluid\">\n                    <div className=\"card card-primary\">\n                      <div className=\"row\">\n                        <div className=\"col-12\">\n                          {/* /.card-header */}\n                          <div\n                            className=\"card-body table-responsive p-0\"\n                            style={{ height: 100 }}\n                          >\n                            <table className=\"table table-head-fixed text-nowrap table-hover\">\n                              <thead>\n                                <tr align=\"center\">\n                                  <th width=\"50\">Date</th>\n                                  <th width=\"50\">Range data</th>\n                                  <th width=\"50\">Model</th>\n                                  <th width=\"50\">Line</th>\n                                </tr>\n                              </thead>\n                              <tbody>{this.renderreport4()}</tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"content\">\n                    <li>Prediction performance(Confusion Matrix)</li>\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div className=\"row\">\n                          <div className=\"col-12\">\n                            {/* /.card-header */}\n                            <div\n                              className=\"card-body table-responsive p-0\"\n                              style={{ height: 300 }}\n                            >\n                              <table className=\"table table-head-fixed text-nowrap table-hover\">\n                                <thead>\n                                  <tr align=\"center\">\n                                    <th width=\"80\">Details</th>\n                                    <th width=\"80\">Precision</th>\n                                    <th width=\"80\">recall</th>\n                                    <th width=\"80\">f1-score</th>\n                                    <th width=\"80\">Support</th>\n                                  </tr>\n                                </thead>\n                                <tbody>{this.renderreport1()}</tbody>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <h3>Data Classification table</h3>\n              {/* <div class=\"content\"> */}\n              <div class=\"container-fluid\">\n                <div className=\"card card-primary\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      {/* /.card-header */}\n                      <div\n                        // className=\"card-body table-responsive p-0\"\n                        style={{ height: 400 }}\n                      >\n                        {/* <table className=\"table table-head-fixed text-nowrap table-hover\"> */}\n                        <h3></h3>\n                        <thead>\n                          <tr align=\"center\">\n                            <th width=\"80\">Bin</th>\n                            <th width=\"100\">Datum probe </th>\n                            <th width=\"100\">Datum probe </th>\n                            <th width=\"100\">Max force</th>\n                            <th width=\"100\">Max force</th>\n                            <th width=\"100\">Set Dim A </th>\n                            <th width=\"100\">Set Dim A </th>\n                            <th width=\"100\">Set Dim B </th>\n                            <th width=\"100\">Set Dim B </th>\n                            <th width=\"100\">Set Dim C </th>\n                            <th width=\"100\">Set Dim C </th>\n                            <th width=\"120\">Diecast Pivot 2</th>\n                            <th width=\"120\">Diecast Pivot 2</th>\n                            <th width=\"120\">Projection Flange Height</th>\n                            <th width=\"120\">Projection Flange Height</th>\n                          </tr>\n                        </thead>\n                        <thead>\n                          <tr align=\"center\"></tr>\n                        </thead>\n\n                        <tr align=\"center\">\n                          <th width=\"80\"> </th>\n                          <th width=\"80\">Min</th>\n                          <th width=\"80\">Max</th>\n                          <th width=\"80\">Min</th>\n                          <th width=\"80\">Max</th>\n                          <th width=\"80\">Min</th>\n                          <th width=\"80\">Max</th>\n                          <th width=\"80\">Min</th>\n                          <th width=\"80\">Max</th>\n                          <th width=\"80\">Min</th>\n                          <th width=\"80\">Max</th>\n                          <th width=\"80\">Min</th>\n                          <th width=\"80\">Max</th>\n                          <th width=\"80\">Min</th>\n                          <th width=\"80\">Max</th>\n                        </tr>\n\n                        <tbody>{this.renderreport2()}</tbody>\n                        {/* </table> */}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* </div> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default DailyML1;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Daily_Report_Packing extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      Model: { label: \"**ALL**\" },\n      insType: [],\n      report1: [],\n      report2: [],\n      report3: [],\n      xAxis: [],\n      yAxis: [],\n      seriesY: [],\n      seriesY2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat1: [],\n      Raw_Dat2: [],\n      Raw_Dat3: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listyear: [],\n      listMonth: [],\n      listModel: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n  };\n\n  doGetDataReport1 = async () => {\n    const modelLabel =\n      this.state.Model.label === \"**ALL**\" ? \"**ALL**\" : this.state.Model.label;\n    const result = await httpClient.get(\n      server.PACKINGT1_URL + \"/\" + modelLabel + \"/\" + this.state.startDate\n    );\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.MotorType);\n    }\n\n    let yA = result.data.SHIFT_A;\n    let yB = result.data.SHIFT_B;\n    let yC = result.data.SHIFT_C;\n    let yM = result.data.SHIFT_M;\n    let yN = result.data.SHIFT_N;\n    let yTOTAL = result.data.TOTAL;\n\n    let rawData = result.data.listRawData1;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n\n    this.setState({\n      report1: result.data.result,\n      xAxis,\n      yA,\n      yB,\n      yC,\n      yM,\n      yN,\n      yTOTAL,\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      seriesY: [\n        {\n          name: \"SHIFT A\",\n          type: \"column\",\n          data: yA,\n        },\n        {\n          name: \"SHIFT B\",\n          type: \"column\",\n          data: yB,\n        },\n        {\n          name: \"SHIFT C\",\n          type: \"column\",\n          data: yC,\n        },\n        {\n          name: \"SHIFT M\",\n          type: \"column\",\n          data: yM,\n        },\n        {\n          name: \"SHIFT N\",\n          type: \"column\",\n          data: yN,\n        },\n      ],\n      options: {\n        chart: {\n          type: \"line\",\n          height: 300,\n          stacked: true,\n          toolbar: {\n            show: true,\n          },\n        },\n\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: \"bottom\",\n                offsetX: -10,\n                offsetY: 0,\n              },\n            },\n          },\n        ],\n        title: {\n          text: \"Output Packing By Type\",\n          align: \"center\",\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [4],\n        },\n        xaxis: {\n          type: \"date\",\n          categories: xAxis,\n        },\n        yaxis: [\n          {\n            title: {\n              text: \"Sum QTY by Type\",\n            },\n          },\n        ],\n        colors: [\n          // Cleanroom Rej\n          \"#AB46D2\",\n          // FDB Rej%\n          \"#FF6FB5\",\n          // Loose_part Rej%\n          \"#55D8C1\",\n          // Washing Rej%\n          \"#F8CB2E\",\n          // Whiteroom Rej%\n          \"#006E7F\",\n\n          \"#4B7BE5\",\n          // LAR %\n        ],\n        // legend: {\n        //   position: 'right',\n        //   offsetY: 40\n        // },\n        fill: {\n          opacity: 1,\n        },\n      },\n    });\n  };\n  doGetDataReport2 = async () => {\n    const modelLabel =\n      this.state.Model.label === \"**ALL**\" ? \"**ALL**\" : this.state.Model.label;\n    const result = await httpClient.get(\n      server.PACKINGT2_URL + \"/\" + modelLabel + \"/\" + this.state.startDate\n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Model);\n    }\n\n    let yA = result.data.SHIFT_A;\n    let yB = result.data.SHIFT_B;\n    let yC = result.data.SHIFT_C;\n    let yM = result.data.SHIFT_M;\n    let yN = result.data.SHIFT_N;\n\n    let rawData = result.data.listRawData2;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat2: rawData[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: result.data.result,\n      xAxis,\n      yA,\n      yB,\n      yC,\n      yM,\n      yN,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      seriesY2: [\n        {\n          name: \"SHIFT A\",\n          type: \"column\",\n          data: yA,\n        },\n        {\n          name: \"SHIFT B\",\n          type: \"column\",\n          data: yB,\n        },\n        {\n          name: \"SHIFT C\",\n          type: \"column\",\n          data: yC,\n        },\n        {\n          name: \"SHIFT M\",\n          type: \"column\",\n          data: yM,\n        },\n        {\n          name: \"SHIFT N\",\n          type: \"column\",\n          data: yN,\n        },\n      ],\n      options2: {\n        chart: {\n          type: \"line\",\n          height: 300,\n          stacked: true,\n          toolbar: {\n            show: true,\n          },\n        },\n\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: \"bottom\",\n                offsetX: -10,\n                offsetY: 0,\n              },\n            },\n          },\n        ],\n        title: {\n          text: \"Output Packing By Model\",\n          align: \"center\",\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [],\n        },\n        xaxis: {\n          type: \"date\",\n          categories: xAxis,\n        },\n        yaxis: [\n          {\n            title: {\n              text: \"Sum QTY by Model\",\n            },\n          },\n        ],\n        colors: [\n          // Cleanroom Rej\n          \"#AB46D2\",\n          // FDB Rej%\n          \"#FF6FB5\",\n          // Loose_part Rej%\n          \"#55D8C1\",\n          // Washing Rej%\n          \"#F8CB2E\",\n          // Whiteroom Rej%\n          \"#006E7F\",\n\n          \"#4B7BE5\",\n          // LAR %\n        ],\n        // legend: {\n        //   position: 'right',\n        //   offsetY: 40\n        // },\n        fill: {\n          opacity: 1,\n        },\n      },\n    });\n  };\n  doGetDataReport3 = async () => {\n    const modelLabel =\n      this.state.Model.label === \"**ALL**\" ? \"**ALL**\" : this.state.Model.label;\n    const result = await httpClient.get(\n      server.PACKINGT3_URL + \"/\" + modelLabel + \"/\" + this.state.startDate\n    );\n    let rawData = result.data.listRawData3;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat3: rawData[0] });\n    console.log(this.state.Raw_Dat3);\n\n    this.setState({\n      report3: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.PACKINGMODEL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.ModelGroup,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  renderreport1 = () => {\n    if (this.state.report1 != null) {\n      if (this.state.report1.length > 0) {\n        return this.state.report1.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"MfgDate\"]}</td>\n            <td align=\"Left\">{item[\"MotorType\"]}</td>\n            <td>\n              {Number(item[\"SHIFT_A\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_B\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_C\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_M\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_N\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"TOTAL\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"MfgDate\"]}</td>\n            <td align=\"Left\">{item[\"MotorType\"]}</td>\n            <td align=\"Left\">{item[\"Model\"]}</td>\n            <td align=\"Left\">{item[\"Model_No\"]}</td>\n\n            <td>\n              {Number(item[\"SHIFT_A\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_B\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_C\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_M\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_N\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"TOTAL\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport3 = () => {\n    if (this.state.report3 != null) {\n      if (this.state.report3.length > 0) {\n        return this.state.report3.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"MfgDate\"]}</td>\n            <td align=\"Left\">{item[\"MotorType\"]}</td>\n            <td align=\"Left\">{item[\"Model\"]}</td>\n            <td align=\"Left\">{item[\"Model_No\"]}</td>\n            <td align=\"Left\">{item[\"QANumber\"]}</td>\n            <td align=\"Left\">{item[\"Pallet_Number\"]}</td>\n\n            <td>\n              {Number(item[\"SHIFT_A\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_B\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_C\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_M\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_N\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"TOTAL\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Daily packing report</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      Daily packing report\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model</label>\n                        <Select\n                          options={this.state.listModel}\n                          value={this.state.Model}\n                          onChange={async (e) => {\n                            await this.setState({ Model: e });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>\n                          By Daily Select From &nbsp;\n                          {/* <a\n                            class=\"fas fa-question-circle\"\n                            style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                            onClick={() => {\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Day-to-Day Data\",\n                                text:\n                                  \"Day-to-Day data over the course of the selected date\",\n                              });\n                            }}\n                          ></a> */}\n                        </label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Finish Date */}\n                    {/* <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div> */}\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport1();\n                              await this.doGetDataReport2();\n                              await this.doGetDataReport3();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report1.length > 0) {\n                              if (this.state.report1[0].MotorType.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report1[0].MotorType.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div style={{ marginTop: 30 }} className=\"col-md-2\">\n                      <a\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"content\" style={{ paddingTop: 5 }}>\n                <section className=\"content-header\">\n                  <div className=\"container-fluid\">\n                    <div className=\"row mb-1\">\n                      <div className=\"col-sm-6\">\n                        <h1>Output Packing By Type</h1>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <CSVLink\n                          data={this.state.Raw_Dat1}\n                          filename={\"report By Type.csv\"}\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 3 }}\n                          >\n                            Download By Type\n                          </button>\n                        </CSVLink>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              </div>\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <div className=\"row\"></div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-8\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table  text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">DATE</th>\n                                <th width=\"120\">Motor Type</th>\n                                <th width=\"120\">SHIFT A</th>\n                                <th width=\"120\">SHIFT B</th>\n                                <th width=\"120\">SHIFT C</th>\n                                <th width=\"120\">SHIFT M</th>\n                                <th width=\"120\">SHIFT N</th>\n                                <th width=\"120\">TOTAL</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-4\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <div className=\"col-sd-10\"></div>\n                      </h3>\n                    </div>\n\n                    {/* Insert Xbar Chart */}\n                    <div className=\"row\" style={{ width: \"100%\" }}>\n                      <div style={{ width: \"2%\" }}></div>\n                      <div\n                        className=\"card card-warning\"\n                        style={{ width: \"98%\" }}\n                      >\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div style={{ width: \"100%\" }}>\n                              <ReactApexChart\n                                options={this.state.options}\n                                series={this.state.seriesY}\n                                type=\"bar\"\n                                height={300}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"content\" style={{ paddingTop: 5 }}>\n            <section className=\"content-header\">\n              <div className=\"container-fluid\">\n                <div className=\"row mb-1\">\n                  <div className=\"col-sm-6\">\n                    <h1>Output Packing By Model</h1>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <CSVLink\n                      data={this.state.Raw_Dat2}\n                      filename={\"report By Model.csv\"}\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 5 }}\n                      >\n                        Download BY Model\n                      </button>\n                    </CSVLink>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-8\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"50\">DATE</th>\n                                <th width=\"50\">Motor Type</th>\n                                <th width=\"50\">Model</th>\n                                <th width=\"50\">Model No</th>\n                                <th width=\"50\">SHIFT A</th>\n                                <th width=\"50\">SHIFT B</th>\n                                <th width=\"50\">SHIFT C</th>\n                                <th width=\"50\">SHIFT M</th>\n                                <th width=\"50\">SHIFT N</th>\n                                <th width=\"50\">TOTAL</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-4\">\n                  <div className=\"card card-primary card-outline\">\n                    {/* Chart Title */}\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\"></h3>\n                    </div>\n\n                    {/* Insert Xbar Chart */}\n                    <div className=\"row\" style={{ width: \"100%\" }}>\n                      <div style={{ width: \"2%\" }}></div>\n                      <div\n                        className=\"card card-warning\"\n                        style={{ width: \"98%\" }}\n                      >\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div style={{ width: \"100%\" }}>\n                              <ReactApexChart\n                                options={this.state.options2}\n                                series={this.state.seriesY2}\n                                type=\"bar\"\n                                height={300}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Table3*/}\n          <div className=\"content\" style={{ paddingTop: 5 }}>\n            <section className=\"content-header\">\n              <div className=\"container-fluid\">\n                <div className=\"row mb-1\">\n                  <div className=\"col-sm-6\">\n                    <h1>Output Packing Details</h1>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <CSVLink\n                      data={this.state.Raw_Dat3}\n                      filename={\"report By Type.csv\"}\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 3 }}\n                      >\n                        Download Details\n                      </button>\n                    </CSVLink>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n          <div className=\"col-12\">\n            <div class=\"content\">\n              <div class=\"container-fluid\">\n                <div className=\"card card-primary\">\n                  <div\n                    className=\"card-body table-responsive p-0\"\n                    style={{ height: 430 }}\n                  >\n                    <table className=\"table table-head-fixed text-nowrap table-hover\">\n                      <thead>\n                        <tr align=\"center\">\n                          <th width=\"50\">DATE</th>\n                          <th width=\"50\">Motor Type</th>\n                          <th width=\"50\">Model</th>\n                          <th width=\"50\">Model No</th>\n                          <th width=\"50\">QANumber</th>\n                          <th width=\"50\">Pallet Number</th>\n                          <th width=\"50\">SHIFT A</th>\n                          <th width=\"50\">SHIFT B</th>\n                          <th width=\"50\">SHIFT C</th>\n                          <th width=\"50\">SHIFT M</th>\n                          <th width=\"50\">SHIFT N</th>\n                          <th width=\"50\">TOTAL</th>\n                        </tr>\n                      </thead>\n                      <tbody>{this.renderreport3()}</tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Daily_Report_Packing;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Rejectbyteam extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      report: [],\n      xAxis: [],\n      yAxis1: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listyear: [],\n      listMonth: [],\n      listModel: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.REJECTTEAM_URL + \"/\" + this.state.startDate\n    );\n\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultGraph.length; index++) {\n      const item = result.data.resultGraph[index];\n      await xAxis.push(item.Supporter);\n    }\n\n    let yQTY = result.data.QTY;\n    let yNG = result.data.NG;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      xAxis,\n      yQTY,\n      yNG,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      seriesY: [\n        {\n          name: \"Reject by Team\",\n          type: \"column\",\n          data: yQTY,\n        },\n        // {\n        //   name: \"reject\",\n        //   type: \"column\",\n        //   data: yNG,\n        // },\n\n      ],\n      options: {\n        chart: {\n          type: \"line\",\n          height: 300,\n          stacked: true,\n          toolbar: {\n            show: true,\n          },\n        },\n\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: \"bottom\",\n                offsetX: -10,\n                offsetY: 0,\n              },\n            },\n          },\n        ],\n        title: {\n          text: \"Reject by team\",\n          align: \"center\",\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [0],\n        },\n        xaxis: {\n          type: \"date\",\n          categories: xAxis,\n        },\n        yaxis: [\n          {\n              axisTicks: {\n                show: true,\n              },\n              axisBorder: {\n                show: true,\n                color: \"#ff7043\",\n              },\n              labels: {\n                style: {\n                  colors: \"#ff7043\",\n                },\n              },\n              title: {\n                text: \"Reject Qty\",\n                style: {\n                  color: \"#ff7043\",\n                },\n              },\n              tooltip: {\n                enabled: true,\n              },\n          \n          },\n        ],\n        colors: [\n          \"#ff7043\",\n         \n        ],\n        // legend: {\n        //   position: 'right',\n        //   offsetY: 40\n        // },\n        fill: {\n          opacity: 1,\n        },\n      },\n    });\n  };\n\n  renderreport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"right\">\n            <td Align=\"left\">{item[\"Date\"]}</td>\n            <td Align=\"left\">{item[\"Model_group\"]}</td>\n            <td Align=\"left\">{item[\"Line_No\"]}</td>\n            <td Align=\"left\">{item[\"Supporter\"]}</td>\n            <td Align=\"left\">{item[\"ENEmpName\"]}</td>\n            <td Align=\"left\">{item[\"NG\"]}</td>\n            <td>{item[\"QTY\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Monthly VMI LAR Trend </h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      Monthly VMI LAR Trend\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>\n                          By Daily Select From &nbsp;\n                          {/* <a\n                            class=\"fas fa-question-circle\"\n                            style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                            onClick={() => {\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Day-to-Day Data\",\n                                text:\n                                  \"Day-to-Day data over the course of the selected date\",\n                              });\n                            }}\n                          ></a> */}\n                        </label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Supporter.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Supporter.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"Reject_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <a\n                        style={{ marginTop: 30 }}\n                        href=\"/defectNG\"\n                        className=\"fas fa-angle-double-left\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                    {/* <nav aria-label=\"Page navigation example\">\n                      <ul class=\"pagination\">\n                        <li class=\"page-item\">\n                          <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\n                            <span aria-hidden=\"true\">&laquo;</span>\n                            <span class=\"sr-only\">Previous</span>\n                          </a>\n                        </li>\n                        <li class=\"page-item\"><a class=\"page-link\" href=\"/defectNG\">1</a></li>\n                        <li class=\"page-item\"><a class=\"page-link\" href=\"/LAR\">2</a></li>\n                        <li class=\"page-item\">\n                          <a class=\"page-link\" href=\"/LAR\" aria-label=\"Next\">\n                            <span aria-hidden=\"true\">&raquo;</span>\n                            <span class=\"sr-only\">Next</span>\n                          </a>\n                        </li>\n                      </ul>\n                    </nav> */}\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-6\">\n                      <div className=\"card card-primary card-outline\">\n                        {/* Chart Title */}\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <i className=\"far fa-chart-bar\" />\n                            \n                          </h3>\n                        </div>\n\n                        {/* Insert Xbar Chart */}\n                        <div className=\"row\" \n                        style={{ width: \"100%\" }}>\n                          <div style={{ width: \"1%\" }}></div>\n                          <div\n                            className=\"card card-warning\"\n                            style={{ width: \"99%\" }}\n                          >\n                            <div className=\"card-body\">\n                              <div className=\"row\">\n                                <div style={{ width: \"100%\" }}>\n                                  <ReactApexChart\n                                    options={this.state.options}\n                                    series={this.state.seriesY}\n                                    type=\"line\"\n                                    height={300}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                           {/* Table*/}\n         \n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr >\n                                <th width=\"50\">Date</th>\n                                <th width=\"120\">Model group</th>\n                                <th width=\"120\">Line No</th>\n                                <th width=\"120\">Supporter</th>\n                                <th width=\"120\">EmpName</th>\n                                <th width=\"120\">NG</th>\n                                <th width=\"120\">QTY</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n       \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Rejectbyteam;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Output_Final_Before_QA extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      Model: { label: \"**ALL**\" },\n      Line: [{ label: \"**ALL**\" }],\n      insType: [],\n      report1: [],\n      report2: [],\n      xAxis: [],\n      yAxis: [],\n      seriesY: [],\n      seriesY2: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat1: [],\n      Raw_Dat2: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listModel: [],\n      listLine: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getLine();\n  };\n\n  doGetSumOutputCo2 = async () => {\n    const modelLabel =\n      this.state.Model.label === \"**ALL**\" ? \"**ALL**\" : this.state.Model.label;\n    const result = await httpClient.get(\n      server.SUMOUTPUTCO2_URL +\n        \"/\" +\n        modelLabel +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate\n    );\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n\n    this.setState({\n      report1: result.data.result,\n      isDisable: false,\n    });\n  };\n  doGetDetailOutputCo2 = async () => {\n    const modelLabel =\n    this.state.Model.label === \"**ALL**\" ? \"**ALL**\" : this.state.Model.label;\n    const result = await httpClient.get(\n      server.DETAILCO2_URL +\n        \"/\" +\n        modelLabel +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate\n    );\n    let rawData = result.data.listRawData1;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat2: rawData[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  renderreport1 = () => {\n    if (this.state.report1 != null) {\n      if (this.state.report1.length > 0) {\n        return this.state.report1.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"MfgDate\"]}</td>\n            <td align=\"Left\">{item[\"Line\"]}</td>\n            <td align=\"Left\">{item[\"Item_No\"]}</td>\n            <td align=\"Left\">{(item[\"Model\"]).toUpperCase()}</td>\n            <td>\n              {Number(item[\"SHIFT_A\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_B\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_C\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_M\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_N\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"TOTAL\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"MfgDate\"]}</td>\n            <td align=\"Left\">{item[\"Line\"]}</td>\n            <td align=\"Left\">{item[\"Item_No\"]}</td>\n            <td align=\"Left\">{(item[\"Model\"]).toUpperCase()}</td>\n            <td align=\"Left\">{(item[\"QA_No\"]).toUpperCase()}</td>\n            <td>\n              {Number(item[\"SHIFT_A\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_B\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_C\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_M\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_N\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  getModel = async () => {\n    const array = await httpClient.get(server.MODELCO2_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.ModelGroup,\n    }));\n    this.setState({ listModel: options });\n  };\n  getLine = async () => {\n    const modelLabel =\n    this.state.Model.label === \"**ALL**\" ? \"**ALL**\" : this.state.Model.label;\n    const array = await httpClient.get(\n      server.LINECO2_URL + \"/\" + modelLabel\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n\n  render() {\n    console.log(this.state.listModel);\n    console.log(this.state.listLine);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Daily Output Final ass’y (Before QA)</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      Daily Output Final ass’y (Before QA)\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model group</label>\n                        <Select\n                          options={this.state.listModel}\n                          value={this.state.Model}\n                          onChange={async (e) => {\n                            await this.setState({ Model: e });\n                            await this.getLine();\n                            await this.setState({\n                              Line: [{ label: \"**ALL**\" }],\n                            });\n                            \n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line</label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [] });\n                            this.state.Line.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Line\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>\n                          Select Date &nbsp;\n                          {/* <a\n                            class=\"fas fa-question-circle\"\n                            style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                            onClick={() => {\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Day-to-Day Data\",\n                                text:\n                                  \"Day-to-Day data over the course of the selected date\",\n                              });\n                            }}\n                          ></a> */}\n                        </label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Finish Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetSumOutputCo2();\n                              await this.doGetDetailOutputCo2();\n\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report1.length > 0) {\n                              if (this.state.report1[0].Model.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report1[0].Model.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div style={{ marginTop: 30 }} className=\"col-md-2\">\n                      <a\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"content\" style={{ paddingTop: 5 }}>\n                <section className=\"content-header\">\n                  <div className=\"container-fluid\">\n                    <div className=\"row mb-1\">\n                      <div className=\"col-sm-3\">\n                        <h1>Daily Output(Summary)</h1>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <CSVLink\n                          data={this.state.Raw_Dat1}\n                          filename={\"Daily Output(Summary).csv\"}\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 1 }}\n                          >\n                            Download Output(Summary)\n                          </button>\n                        </CSVLink>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              </div>\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <div className=\"row\"></div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table  text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">DATE</th>\n                                <th width=\"120\">Line</th>\n                                <th width=\"120\">Item No.</th>\n                                <th width=\"120\">Model</th>\n                                <th width=\"120\">SHIFT A</th>\n                                <th width=\"120\">SHIFT B</th>\n                                <th width=\"120\">SHIFT C</th>\n                                <th width=\"120\">SHIFT M</th>\n                                <th width=\"120\">SHIFT N</th>\n                                <th width=\"120\">TOTAL</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"content\" style={{ paddingTop: 5 }}>\n            <section className=\"content-header\">\n              <div className=\"container-fluid\">\n                <div className=\"row mb-1\">\n                  <div className=\"col-sm-3\">\n                    <h1>Daily Output Detail</h1>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <CSVLink\n                      data={this.state.Raw_Dat2}\n                      filename={\"Daily Output Detail.csv\"}\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 5 }}\n                      >\n                        Download Output Detail\n                      </button>\n                    </CSVLink>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">DATE</th>\n                                <th width=\"120\">Line</th>\n                                <th width=\"120\">Item No.</th>\n                                <th width=\"120\">Model</th>\n                                <th width=\"120\">QA No.</th>\n                                <th width=\"120\">SHIFT A</th>\n                                <th width=\"120\">SHIFT B</th>\n                                <th width=\"120\">SHIFT C</th>\n                                <th width=\"120\">SHIFT M</th>\n                                <th width=\"120\">SHIFT N</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Output_Final_Before_QA;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n// import {icon} from \"public\\dist\\img\\refresh-arrow.png\";\n\nfunction Refresh() {\n  window.location.reload(false);\n}\n\nclass Production_hold_record extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      Model: [],\n      Line: [],\n      insType: [],\n      report: [],\n      report2: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat1: [],\n      Raw_Dat2: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listModel: [],\n      listLine: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    let command = await httpClient.get(server.HOLDCO2_URL);\n    this.setState({ report: command.data.result });\n\n    let rawData = command.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n\n    this.setState({\n      report: command.data.result,\n      isDisable: false,\n    });\n\n    let command1 = await httpClient.get(server.HOLDDETAIL_URL);\n    this.setState({ report2: command1.data.result });\n\n    let rawData1 = command1.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData1.length; i++) {\n      rawData1[0].push(...rawData1[i]);\n    }\n    this.setState({ Raw_Dat2: rawData1[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: command1.data.result,\n      isDisable: false,\n    });\n  };\n\n  doGetSumOutputCo2 = async () => {\n    const result = await httpClient.get(server.HOLDCO2_URL);\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  renderreport1 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"MfgDate\"]}</td>\n            <td align=\"Left\">{item[\"Line\"]}</td>\n            <td align=\"Left\">{item[\"Item_No\"]}</td>\n            <td align=\"Left\">{item[\"Model\"].toUpperCase()}</td>\n            <td>\n              {Number(item[\"SHIFT_A\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_B\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_C\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_M\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_N\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"TOTAL\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"MfgDate\"]}</td>\n            <td align=\"Left\">{item[\"Line\"]}</td>\n            <td align=\"Left\">{item[\"Shift\"]}</td>\n            <td align=\"Left\">{item[\"Model\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Item_No\"]}</td>\n            <td align=\"Left\">{item[\"QA_No\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Mo_number\"].toUpperCase()}</td>\n\n            <td align=\"Left\">{item[\"W/W\"]}</td>\n            <td>\n              {Number(item[\"Qty\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"Left\">{item[\"Special_control\"]}</td>\n            <td align=\"Left\">{item[\"Supporter_name\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Baseplate\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Ramp\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Crashstop\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Hub\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Magnet\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Diverter\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"FPC\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"FPC\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"DateTime\"]}</td>\n            <td align=\"Left\">{item[\"Machine_no\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"CO2_EMP\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"CO2_DATE\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"CO2_SP1\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"CO2_SP2\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"SP1\"]}</td>\n            <td align=\"Left\">{item[\"SP2\"]}</td>\n            <td align=\"Left\">{item[\"SP3\"]}</td>\n            <td align=\"Left\">{item[\"SP4\"]}</td>\n            <td align=\"Left\">{item[\"SP5\"]}</td>\n            <td align=\"Left\">{item[\"Revision\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    console.log(this.state.report);\n    console.log(this.state.listLine);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-2\">\n                  <h1>Hold Final ass’y</h1>\n                </div>\n                <div className=\"col-sm-4\">\n                  <button\n                    onClick={Refresh}\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                  >\n                    <i className=\"fas fa-sync\" />\n                    Refresh\n                  </button>\n                </div>\n\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Hold Final ass’y</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              {/* <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <h3>Hold Final ass’y</h3>\n                  </h3>\n                </div>\n              </div> */}\n              <div className=\"content\" style={{ paddingTop: 5 }}>\n                <section className=\"content-header\">\n                  <div className=\"container-fluid\">\n                    <div className=\"row mb-1\">\n                      <div className=\"col-sm-3\">\n                        <h1>Hold Final ass’y(Summary)</h1>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <CSVLink\n                          data={this.state.Raw_Dat1}\n                          filename={\"Hold Final ass’y(Summary).csv\"}\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 1 }}\n                          >\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              </div>\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <div className=\"row\"></div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">DATE</th>\n                                <th width=\"120\">Line</th>\n                                <th width=\"120\">Item No.</th>\n                                <th width=\"120\">Model</th>\n                                <th width=\"120\">SHIFT A</th>\n                                <th width=\"120\">SHIFT B</th>\n                                <th width=\"120\">SHIFT C</th>\n                                <th width=\"120\">SHIFT M</th>\n                                <th width=\"120\">SHIFT N</th>\n                                <th width=\"120\">TOTAL</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"content\" style={{ paddingTop: 5 }}>\n            <section className=\"content-header\">\n              <div className=\"container-fluid\">\n                <div className=\"row mb-1\">\n                  <div className=\"col-sm-3\">\n                    <h1>Hold Final ass’y Detail</h1>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <CSVLink\n                      data={this.state.Raw_Dat2}\n                      filename={\"Hold Final ass’y Detail.csv\"}\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 1 }}\n                      >\n                        Download\n                      </button>\n                    </CSVLink>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">MfgDate</th>\n                                <th width=\"120\">Line</th>\n                                <th width=\"120\">Shift</th>\n                                <th width=\"120\">Model</th>\n                                <th width=\"120\">Item No</th>\n                                <th width=\"120\">QA No</th>\n                                <th width=\"120\">Mo_number</th>\n                                <th width=\"120\">W/W</th>\n                                <th width=\"120\">Qty</th>\n                                <th width=\"120\">Special control</th>\n                                <th width=\"120\">Supporter name</th>\n                                <th width=\"120\">Baseplate</th>\n                                <th width=\"120\">Ramp</th>\n                                <th width=\"120\">Crashstop</th>\n                                <th width=\"120\">Hub</th>\n                                <th width=\"120\">Magnet</th>\n                                <th width=\"120\">Diverter</th>\n                                <th width=\"120\">FPC</th>\n                                <th width=\"120\">FPC</th>\n                                <th width=\"120\">DateTime</th>\n                                <th width=\"120\">Machine no</th>\n                                <th width=\"120\">CO2 EMP</th>\n                                <th width=\"120\">CO2 DATE</th>\n                                <th width=\"120\">CO2 SP1</th>\n                                <th width=\"120\">CO2 SP2</th>\n                                <th width=\"120\">SP1</th>\n                                <th width=\"120\">SP2</th>\n                                <th width=\"120\">SP3</th>\n                                <th width=\"120\">SP4</th>\n                                <th width=\"120\">SP5</th>\n                                <th width=\"120\">Revision</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Production_hold_record;\n","import React, { Component } from \"react\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport ReactApexChart from \"react-apexcharts\";\n\n\nclass Report extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      table_emp:[],\n      series:[],\n      options: {},\n\n\n    };\n  }\n\n  componentDidMount= async ()=> {\n    let command = await httpClient.get(\"HoldCo2/HoldoutputCo2\");\n    // console.log(command.data.result);\n    let salary_group = await httpClient.post(\"testemp/salary_group\")\n      console.log(salary_group.data.result);\n    this.setState({table_emp:command.data.result,\n\n      series: [\n        {\n\tname: \"persons\",\n          data: [\n          salary_group.data.result[0].qty,\n          salary_group.data.result[1].qty,\n          salary_group.data.result[2].qty,\n          // salary_group.data.result[3].qty,\n          // salary_group.data.result[4].qty,\n        ],\n        },\n      ],\n\n      options: {\n        chart: {\n          height: 350,\n          type: \"bar\",\n        },\n        dataLabels: {\n          enabled: true,\n          formatter: function (val) {\n            return val;\n          },\n        },\n        xaxis: {\n          categories: [\n            salary_group.data.result[0].salary_range,\n            salary_group.data.result[1].salary_range,\n            salary_group.data.result[2].salary_range,\n            // salary_group.data.result[3].salary_range,\n            // salary_group.data.result[4].salary_range,\n        ],\n        },\n        title: {\n          align: \"center\",\n          text: \"Monthly Inflation in Argentina, 2002\",\n        },\n      },});\n  };\n  renderTableRow = () => {\n    try {\n      if (this.state.table_emp !== null) {\n        return this.state.table_emp.map((item) => (\n          <tr>\n            <td>{item.emp_id}</td>\n            <td>{item.first_name}</td>\n            <td>{item.last_name}</td>\n            <td>{item.email}</td>\n            <td>{item.phone}</td>\n            <td>{item.hire_date}</td>\n            <td>{item.job_id}</td>\n            <td>{item.salary}</td>\n            <td>{item.manager_id}</td>\n            <td>{item.dept_id}</td>\n          </tr>\n        ));\n      }\n    } catch (error) {}\n  };\n  render() {\n    console.log(this.state.table_emp);\n    return <div>\n        <div className=\"content-wrapper\">\n    <div className=\"card card-primary\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">Data</h3>\n      </div>\n      <div className=\"card-body\">\n        <table className=\"table table-head-fixed table-hover text-nowrap\">\n          <thead>\n            <tr>\n              <th>emp id</th>\n              <th>first name</th>\n              <th>last name</th>\n              <th>Email</th>\n              <th>phone</th>\n              <th>hire date</th>\n              <th>job id</th>\n              <th>salary</th>\n              <th>manager_id</th>\n              <th>dept_id</th>\n            </tr>\n          </thead>\n          {/* <tbody>\n            <tr>\n              <td>0001</td>\n              <td>AA</td>\n              <td>0008825</td>\n            </tr>\n            <tr>\n              <td>0002</td>\n              <td>VBFEF</td>\n              <td>0001111</td>\n            </tr>\n          </tbody> */}\n          {this.renderTableRow()}\n        </table>\n      </div>\n    </div>\n  </div>;\n  <div className=\"content-wrapper\">\n    <div className=\"card card-primary\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">chart</h3>\n      </div>\n      <div className=\"chart\">\n     <div id=\"chart\">\n          <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\n     </div>\n</div>\n    </div>\n  </div>;\n  </div>\n\n  }\n}\n\nexport default Report;\n\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Output_Final_after_QA extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      Model: [],\n      Line: [],\n      report1: [],\n      report2: [],\n      xAxis: [],\n      yAxis: [],\n      seriesY: [],\n      seriesY2: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat1: [],\n      Raw_Dat2: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listModel: [],\n      listLine: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getLine();\n  };\n  doGetSumQainspection = async () => {\n    const result = await httpClient.get(\n      server.SUMQAINSPECTION_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate\n    );\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n\n    this.setState({\n      report1: result.data.result,\n      isDisable: false,\n    });\n  };\n  doGetDetailQainspection = async () => {\n    const result = await httpClient.get(\n      server.DETAILQAINSPECTION_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate\n    );\n    let rawData = result.data.listRawData1;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat2: rawData[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n  renderreport1 = () => {\n    if (this.state.report1 != null) {\n      if (this.state.report1.length > 0) {\n        return this.state.report1.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"InspectionDate\"]}</td>\n            <td align=\"Left\">{item[\"Line_No\"]}</td>\n            <td align=\"Left\">{item[\"InspectionType\"]}</td>\n            <td align=\"Left\">{item[\"ModelNumber\"]}</td>\n             <td align=\"Left\">{(item[\"Model_group\"]).toUpperCase()}</td>\n            <td>\n              {Number(item[\"SHIFT_A\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_B\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_C\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_M\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_N\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"Total\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"InspectionDate\"]}</td>\n            <td align=\"Left\">{item[\"Line_No\"]}</td>\n            <td align=\"Left\">{item[\"ModelNumber\"]}</td>\n            <td align=\"Left\">{(item[\"Model_group\"]).toUpperCase()}</td>\n            <td align=\"Left\">{(item[\"QANumber\"]).toUpperCase()}</td>\n            <td>\n              {Number(item[\"SHIFT_A\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_B\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_C\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_M\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>\n              {Number(item[\"SHIFT_N\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  getModel = async () => {\n    const array = await httpClient.get(server.MODELAFTERQA_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.ModelGroup,\n    }));\n    this.setState({ listModel: options });\n  };\n  getLine = async () => {\n    const array = await httpClient.get(\n      server.LINEAFTERQA_URL + \"/\" + this.state.Model\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n  render() {\n    console.log(this.state.listModel);\n    console.log(this.state.listLine);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Daily Output Final ass’y (QA Passed)</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                    Daily Output Final ass’y (QA Passed)\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n                {/* select model */}\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model group</label>\n                        <Select\n                          options={this.state.listModel}\n                          onChange={async (e) => {\n                            await this.setState({ Model: e.label });\n                            await this.getLine();\n                            await this.setState({\n                              Line: [{ label: \"ALL\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line</label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [] });\n                            this.state.Line.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Line\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>\n                          Select Date &nbsp;\n                          {/* <a\n                            class=\"fas fa-question-circle\"\n                            style={{ fontSize: 18, color: \"Dodgerblue\" }}\n                            onClick={() => {\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Day-to-Day Data\",\n                                text:\n                                  \"Day-to-Day data over the course of the selected date\",\n                              });\n                            }}\n                          ></a> */}\n                        </label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Finish Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetSumQainspection();\n                              await this.doGetDetailQainspection();\n\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report1.length > 0) {\n                              if (this.state.report1[0].InspectionDate.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report1[0].InspectionDate.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div style={{ marginTop: 30 }} className=\"col-md-3\">\n                      <a\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"content\" style={{ paddingTop: 5 }}>\n                <section className=\"content-header\">\n                  <div className=\"container-fluid\">\n                    <div className=\"row mb-1\">\n                      <div className=\"col-sm-3.5\">\n                        <h1>Daily Output Final as’y (QA Passed) </h1>\n                      </div>\n                      <div className=\"col-sm-3\">\n                        <CSVLink\n                          data={this.state.Raw_Dat1}\n                          filename={\"Daily Output QAPassed(Summary).csv\"}\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 1 }}\n                          >\n                            Download QAPassed(Summary)\n                          </button>\n                        </CSVLink>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              </div>\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <div className=\"row\"></div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table  text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">DATE</th>\n                                <th width=\"120\">Line</th>\n                                <th width=\"120\">Type</th>\n                                <th width=\"120\">Model No</th>\n                                <th width=\"120\">Model </th>\n                                <th width=\"120\">SHIFT A</th>\n                                <th width=\"120\">SHIFT B</th>\n                                <th width=\"120\">SHIFT C</th>\n                                <th width=\"120\">SHIFT M</th>\n                                <th width=\"120\">SHIFT N</th>\n                                <th width=\"120\">TOTAL</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"content\" style={{ paddingTop: 5 }}>\n            <section className=\"content-header\">\n              <div className=\"container-fluid\">\n                <div className=\"row mb-1\">\n                  <div className=\"col-sm-3.8\">\n                    <h1>Output Final ass’y QA Passed MO detail</h1>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <CSVLink\n                      data={this.state.Raw_Dat2}\n                      filename={\"Daily QA Passed MO Detail.csv\"}\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 5 }}\n                      >\n                        Download QA Passed MO Detail\n                      </button>\n                    </CSVLink>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">DATE</th>\n                                <th width=\"120\">Line</th>\n                                <th width=\"120\">Model No.</th>\n                                <th width=\"120\">Model</th>\n                                <th width=\"120\">QA No.</th>\n                                <th width=\"120\">SHIFT A</th>\n                                <th width=\"120\">SHIFT B</th>\n                                <th width=\"120\">SHIFT C</th>\n                                <th width=\"120\">SHIFT M</th>\n                                <th width=\"120\">SHIFT N</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Output_Final_after_QA;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\n// import Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass Shipmentdata extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      Model: [],\n      Line: [],\n      insType: [],\n      report1: [],\n      report2: [],\n      report3: [],\n      xAxis: [],\n      yAxis: [],\n      seriesY: [],\n      seriesY2: [],\n      options: {},\n      options2: {},\n      chart: [],\n      Invoidid: [],\n      lotqanumber: [],\n      Raw_Dat1: [],\n      Raw_Dat2: [],\n      Raw_Dat3: [],\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listModel: [],\n      listLine: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n  componentDidMount = async () => {\n    await this.getModel();\n  };\n  doGetShipmentbymodel = async () => {\n    const result = await httpClient.get(\n      server.SHIPMENTBYMODEL_URL +\n        \"/\" +\n        this.state.Model +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate\n    );\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n\n    this.setState({\n      report1: result.data.result,\n      isDisable: false,\n    });\n  };\n  doGetShipmentbyinvoidid = async () => {\n    const result = await httpClient.get(\n      server.SHIPMENTBYINVOIDID_URL + \"/\" + this.state.Invoidid\n    );\n    let rawData = result.data.listRawData1;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat2: rawData[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n  doGetShipmentbylotqanumber = async () => {\n    const result = await httpClient.get(\n      server.SHIPMENTBYLOTQA_URL + \"/\" + this.state.lotqanumber\n    );\n    let rawData = result.data.listRawData3;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat3: rawData[0] });\n    console.log(this.state.Raw_Dat3);\n\n    this.setState({\n      report3: result.data.result,\n      isDisable: false,\n    });\n  };\n  renderreport1 = () => {\n    if (this.state.report1 != null) {\n      if (this.state.report1.length > 0) {\n        return this.state.report1.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"Invoice_ID\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Lot_No\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"status\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Model\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Item_no\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Ramp\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Base\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Diverter\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Special_control\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"Left\">{item[\"Date\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Timpstamp\"].toUpperCase()}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"Invoice_ID\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Lot_No\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"status\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Model\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Item_no\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Ramp\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Base\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Diverter\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Special_control\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"Left\">{item[\"Date\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Timpstamp\"].toUpperCase()}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport3 = () => {\n    if (this.state.report3 != null) {\n      if (this.state.report3.length > 0) {\n        return this.state.report3.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"Invoice_ID\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Lot_No\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"status\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Model\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Item_no\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Ramp\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Base\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Diverter\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Special_control\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"Left\">{item[\"Date\"].toUpperCase()}</td>\n            <td align=\"Left\">{item[\"Timpstamp\"].toUpperCase()}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  getModel = async () => {\n    const array = await httpClient.get(server.MODELSHIPMENTDATA_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model_Name,\n    }));\n    this.setState({ listModel: options });\n  };\n  render() {\n    console.log(this.state.report2);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 80 }}>\n          <div className=\"container-fluid\">\n            <div className=\"row \">\n              <div className=\"col-10\">\n                <h2>Shipment status</h2>\n              </div>\n              <div className=\"col-2\">\n                <section className=\"content-header\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Shipment status</li>\n                  </ol>\n                </section>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"container-fluid\" style={{ paddingTop: 10}}>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n                {/* select model */}\n              \n                <div className=\"card-body\"  >\n                  <div className=\"row\" >\n                    \n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model group</label>\n                        <Select\n                          options={this.state.listModel}\n                          onChange={async (e) => {\n                            await this.setState({ Model: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Select Date &nbsp;</label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Finish Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ lotqanumber: \"\" });\n                          this.setState({ Invoidid: \"\" });\n                          this.setState({ report3: \"\" });\n                          this.setState({ report2: \"\" });\n                          this.setState({ isDisable: true });\n\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetShipmentbymodel();\n                              // await this.doGetShipmentbylotqanumber();\n\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report1.length > 0) {\n                              if (this.state.report1[0].Model.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report1[0].Model.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div style={{ marginTop: 30 }} className=\"col-md-1\">\n                      <a\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                    <div style={{ marginTop: 30 }} className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat1}\n                        filename={\"Shipment data by model.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 1 }}\n                        >\n                          Download by model\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n         \n                \n              \n                    {/* select model */}\n                   \n                    <div className=\"card-body\"  style={{ paddingTop: 1}}>\n                      <label>Search by Lot QA</label>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <div\n                            style={{ marginTop: 10 }}\n                            className=\"input-group \"\n                          >\n                            <input\n                              value={this.state.lotqanumber}\n                              onChange={async (e) => {\n                                await this.setState({\n                                  lotqanumber: e.target.value,\n                                });\n                              }}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Input lotqanumber hear\"\n                            />\n                            <div className=\"col-md-1\">\n                              <button\n                                disabled={this.state.isDisable}\n                                // type=\"button\"\n                                // className=\"btn btn-info btn-flat\"\n                                onClick={(e) => {\n                                  this.setState({ Invoidid: \"\" });\n                                  this.setState({ report1: \"\" });\n                                  this.setState({ report2: \"\" });\n                                  this.setState({ isDisable: true });\n\n                                  // this.doGetDataReport();\n                                  Swal.fire({\n                                    icon: \"info\",\n                                    title: \"Loading Data\",\n                                    timer: 60000,\n                                    allowOutsideClick: false,\n                                    didOpen: async () => {\n                                      Swal.showLoading();\n\n                                      await this.doGetShipmentbylotqanumber();\n\n                                      Swal.close();\n                                    },\n                                  }).then(() => {\n                                    if (this.state.report3.length > 0) {\n                                      if (\n                                        this.state.report3[0].Lot_No.length > 0\n                                      ) {\n                                        Swal.fire({\n                                          icon: \"success\",\n                                          title: \"Success\",\n                                          text: \"Data has been loaded successfully\",\n                                        });\n                                      } else if (\n                                        this.state.report3[0].Model.length == 0\n                                      ) {\n                                        Swal.fire({\n                                          icon: \"error\",\n                                          title: \"No production data\",\n                                          text: \"Please select other date\",\n                                        });\n                                      }\n                                    } else {\n                                      Swal.fire({\n                                        icon: \"error\",\n                                        title:\n                                          \"Data loading has encountered some error, please try again\",\n                                      });\n                                    }\n                                  });\n                                }}\n                                type=\"submit\"\n                                className=\"btn btn-primary\"\n                              >\n                                Submit\n                              </button>\n                            </div>\n\n                            <div className=\"col-md-7\">\n                              <CSVLink\n                                data={this.state.Raw_Dat3}\n                                filename={\"Shipment data by Lot QA.csv\"}\n                              >\n                                <button\n                                  type=\"button\"\n                                  className=\"btn btn-primary\"\n                                >\n                                  Download by Lot QA\n                                </button>\n                              </CSVLink>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n               \n             \n      \n                {/* select model */}\n              \n                  <div className=\"card-body\"  style={{ paddingTop: 1}}>\n                    <label >Search by Invoice ID</label>\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <div className=\"input-group \">\n                          <input\n                            value={this.state.Invoidid}\n                            onChange={async (e) => {\n                              await this.setState({\n                                Invoidid: e.target.value,\n                              });\n                            }}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Input Invoice ID hear\"\n                          />\n                          <div className=\"col-md-1\">\n                            <button\n                              disabled={this.state.isDisable}\n                              // type=\"button\"\n                              // className=\"btn btn-info btn-flat\"\n                              onClick={(e) => {\n                                this.setState({ lotqanumber: \"\" });\n                                this.setState({ report1: \"\" });\n                                this.setState({ report3: \"\" });\n                                this.setState({ isDisable: true });\n\n                                // this.doGetDataReport();\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Loading Data\",\n                                  timer: 60000,\n                                  allowOutsideClick: false,\n                                  didOpen: async () => {\n                                    Swal.showLoading();\n                                    await this.doGetShipmentbyinvoidid();\n\n                                    Swal.close();\n                                  },\n                                }).then(() => {\n                                  if (this.state.report2.length > 0) {\n                                    if (\n                                      this.state.report2[0].Model.length > 0\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        text: \"Data has been loaded successfully\",\n                                      });\n                                    } else if (\n                                      this.state.report2[0].Model.length == 0\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"error\",\n                                        title: \"No production data\",\n                                        text: \"Please select other date\",\n                                      });\n                                    }\n                                  } else {\n                                    Swal.fire({\n                                      icon: \"error\",\n                                      title:\n                                        \"Data loading has encountered some error, please try again\",\n                                    });\n                                  }\n                                });\n                              }}\n                              type=\"submit\"\n                              className=\"btn btn-primary\"\n                            >\n                              Submit\n                            </button>\n                          </div>\n                          <div className=\"col-md-7 \">\n                            <CSVLink\n                              data={this.state.Raw_Dat2}\n                              filename={\"Shipment data by invoice.csv\"}\n                            >\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                style={{ marginTop: 1 }}\n                              >\n                                Download by Invoice ID\n                              </button>\n                            </CSVLink>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n          \n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 ,\n                            zIndex: \"3\",\n                            position: \"relative\",\n                            zIndex: \"0\",}}\n                        >\n                          <table className=\" table  text-nowrap table-hover table-head-fixed\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">Invoice ID</th>\n                                <th width=\"120\">Lot No</th>\n                                <th width=\"120\">Status</th>\n                                <th width=\"120\">Model</th>\n                                <th width=\"120\">Item No</th>\n                                <th width=\"120\">Ramp </th>\n                                <th width=\"120\">Base</th>\n                                <th width=\"120\">Diverter</th>\n                                <th width=\"120\">Special control</th>\n                                <th width=\"120\">QTY</th>\n                                <th width=\"120\">Date</th>\n                                <th width=\"120\">Timpstamp</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                            <tbody>{this.renderreport3()}</tbody>\n                            <tbody>{this.renderreport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shipmentdata;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nfunction Refresh() {\n  window.location.reload(false);\n}\n\nclass Packed_half_pallet extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      Model: [],\n      Line: [],\n      insType: [],\n      report: [],\n      report2: [],\n      report3: [],\n      report4: [],\n      options: {},   \n      chart: [],\n      lotqanumber: [],\n      seriesY: [],\n      Raw_Dat1: [],\n      Raw_Dat2: [],\n      Raw_Dat3: [],\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listModel: [],\n      listLine: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n \n\n  componentDidMount = async () => {\n    let command = await httpClient.get(server.HOLDPALLETSUM_URL);\n    this.setState({ report: command.data.result });\n\n    let rawData = command.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n\n    this.setState({\n      report: command.data.result,\n      isDisable: false,\n    });\n\n    let command1 = await httpClient.get(server.HOLDPALLETDETAIL_URL);\n    this.setState({ report2: command1.data.result });\n\n    let rawData1 = command1.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData1.length; i++) {\n      rawData1[0].push(...rawData1[i]);\n    }\n    this.setState({ Raw_Dat2: rawData1[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: command1.data.result,\n      isDisable: false,\n    });\n\n    \n    let result1 = await httpClient.get(server.HOLDPALLETSUM_URL);\n    let xAxis = [];\n    for (let index = 0; index < result1.data.resultGraph.length; index++) {\n      const item = result1.data.resultGraph[index];\n      await xAxis.push(item.ModelGroup);\n    }\n\n    let yAxis = result1.data.QTY;\n\n    this.setState({\n      report3: result1.data.resultGraph,\n      xAxis,\n      yAxis,\n\n      // series,\n\n      isDisable: false,\n    });\n\n    await this.setState({\n      seriesY: [\n        {\n          name: \"ModelGroup\",\n          type: \"column\",\n          data: yAxis,\n        },\n      ],\n      options: {\n        chart: {\n          type: \"line\",\n          height: 300,\n          stacked: true,\n          toolbar: {\n            show: true,\n          },\n        },\n\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: \"bottom\",\n                offsetX: -10,\n                offsetY: 0,\n              },\n            },\n          },\n        ],\n        title: {\n          text: \"Packed Half Pallet(Summary)\",\n          align: \"center\",\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [],\n        },\n        xaxis: {\n          type: \"date\",\n          categories: xAxis,\n        },\n        yaxis: [\n          {\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff1a1a\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff1a1a\",\n              },\n            },\n            title: {\n              text: \"QTY\",\n              style: {\n                color: \"#ff1a1a\",\n              },\n            },\n            tooltip: {\n              enabled: true,\n            },\n          },\n        ],\n        colors: [\n          // Cleanroom Rej\n          \"#3399ff\",\n          // FDB Rej%\n          \"#BEE3ED\",\n          // Loose_part Rej%\n          \"#ff1a1a\",\n          // Washing Rej%\n          \"#ffff00\",\n          // Whiteroom Rej%\n          \"#d24dff\",\n\n          \"#ff9900\",\n          // LAR %\n          \"#00ff00\",\n        ],\n        legend: {\n          position: 'right',\n          offsetY: 40\n        },\n        fill: {\n          opacity: 1,\n        },\n      },\n    });\n\n  await this.getModel();\n  };\n\n  // componentDidMount = async () => {\n  //   await this.getModel();\n  // };\n\n  doGetHoldPalletbylotqa = async () => {\n    const result = await httpClient.get(\n      server.HOLDPALLETBYLOTQA_URL + \"/\" + this.state.lotqanumber\n    );\n    let rawData = result.data.listRawData3;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat3: rawData[0] });\n    console.log(this.state.Raw_Dat3);\n\n    this.setState({\n      report4: result.data.result,\n      isDisable: false,\n    });\n  };\n  // getModel = async () => {\n  //   const array = await httpClient.get(server.HOLDPALLETBYMODEL_URL);\n  //   const options = array.data.result.map((d) => ({\n  //     label: d.ModelGroup,\n  //   }));\n  //   this.setState({ listModel: options });\n  // };\n\n  renderreport1 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"ModelGroup\"]}</td>\n            <td align=\"Left\">{item[\"ModelNumber\"]}</td>\n            <td align=\"Left\">{item[\"LotQty\"]}</td>\n\n            <td>\n              {Number(item[\"QTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"ModelGroup\"]}</td>\n            <td align=\"Left\">{item[\"ModelNumber\"]}</td>\n            <td align=\"Left\">{item[\"QA_no\"]}</td>\n            <td align=\"Left\">{item[\"MfgDate\"]}</td>\n            <td>\n              {Number(item[\"MOQTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            \n            <td align=\"Left\">{item[\"Line_No\"]}</td>\n            <td align=\"Left\">{item[\"Base\"]}</td>\n            <td align=\"Left\">{item[\"Ramp\"]}</td>\n            <td align=\"Left\">{item[\"Hub\"]}</td>\n            <td align=\"Left\">{item[\"Magnet\"]}</td>\n            <td align=\"Left\">{item[\"FPC\"]}</td>\n            <td align=\"Left\">{item[\"Diverter\"]}</td>\n            <td align=\"Left\">{item[\"Crash_Stop\"]}</td>\n           \n            <td align=\"Left\">{item[\"SpecialControl1\"]}</td>\n            <td align=\"Left\">{item[\"SpecialControl2\"]}</td>\n            <td align=\"Left\">{item[\"SpecialControl3\"]}</td>\n            <td align=\"Left\">{item[\"SpecialControl4\"]}</td>\n            <td align=\"Left\">{item[\"SpecialControl5\"]}</td>\n            <td align=\"Left\">{item[\"Remark\"]}</td>\n            <td align=\"Left\">{item[\"Time\"]}</td>\n            <td align=\"Left\">{item[\"Lotsize\"]}</td>\n            <td align=\"Left\">{item[\"ModelName\"]}</td>\n            <td align=\"Left\">{item[\"Rev\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport3 = () => {\n    if (this.state.report4 != null) {\n      if (this.state.report4.length > 0) {\n        return this.state.report4.map((item) => (\n          <tr Align=\"Center\">\n        <td align=\"Left\">{item[\"ModelGroup\"]}</td>\n            <td align=\"Left\">{item[\"ModelNumber\"]}</td>\n            <td align=\"Left\">{item[\"QA_no\"]}</td>\n            <td align=\"Left\">{item[\"MfgDate\"]}</td>\n            <td>\n              {Number(item[\"MOQTY\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"Left\">{item[\"Line_No\"]}</td>\n            \n            <td align=\"Left\">{item[\"Base\"]}</td>\n            <td align=\"Left\">{item[\"Ramp\"]}</td>\n            <td align=\"Left\">{item[\"Hub\"]}</td>\n            <td align=\"Left\">{item[\"Magnet\"]}</td>\n            <td align=\"Left\">{item[\"FPC\"]}</td>\n            <td align=\"Left\">{item[\"Diverter\"]}</td>\n            <td align=\"Left\">{item[\"Crash_Stop\"]}</td>\n           \n            <td align=\"Left\">{item[\"SpecialControl1\"]}</td>\n            <td align=\"Left\">{item[\"SpecialControl2\"]}</td>\n            <td align=\"Left\">{item[\"SpecialControl3\"]}</td>\n            <td align=\"Left\">{item[\"SpecialControl4\"]}</td>\n            <td align=\"Left\">{item[\"SpecialControl5\"]}</td>\n            <td align=\"Left\">{item[\"Remark\"]}</td>\n            <td align=\"Left\">{item[\"Time\"]}</td>\n            <td align=\"Left\">{item[\"Lotsize\"]}</td>\n            <td align=\"Left\">{item[\"ModelName\"]}</td>\n            <td align=\"Left\">{item[\"Rev\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  }\n  // renderreport1 = () => {\n  //   if (this.state.report != null) {\n  //     if (this.state.report.length > 0) {\n  //       return this.state.report.map((item) => (\n  //         <tr Align=\"Center\">\n  //           <td align=\"Left\">{item[\"ModelGroup\"]}</td>\n  //           <td align=\"Left\">{item[\"ModelNumber\"]}</td>\n  //           <td align=\"Left\">{item[\"QA_no\"]}</td>\n  //           <td align=\"Left\">{item[\"MfgDate\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"MOQTY\"].toUpperCase()}</td>\n\n  //         </tr>\n  //       ));\n  //     }\n  //   }\n  // };\n  // renderreport2 = () => {\n  //   if (this.state.report2 != null) {\n  //     if (this.state.report2.length > 0) {\n  //       return this.state.report2.map((item) => (\n  //         <tr Align=\"Center\">\n  //           <td align=\"Left\">{item[\"QA_no\"]}</td>\n  //           <td align=\"Left\">{item[\"MfgDate\"]}</td>\n  //           <td align=\"Left\">{item[\"ModelGroup\"]}</td>\n  //           <td align=\"Left\">{item[\"ModelNumber\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"MONumber\"]}</td>\n  //           <td align=\"Left\">{item[\"DateCode\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"MOQTY\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"Line_No\"]}</td>\n  //           <td align=\"Left\">{item[\"SupporterName\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"Base\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"Ramp\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"Hub\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"Magnet\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"FPC\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"Diverter\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"Crash_Stop\"]}</td>\n  //           <td align=\"Left\">{item[\"CO2\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"CO2_EMP\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"CO2_DATE\"].toUpperCase()}</td>\n  //           <td align=\"Left\">{item[\"SpecialControl1\"]}</td>\n  //           <td align=\"Left\">{item[\"SpecialControl2\"]}</td>\n  //           <td align=\"Left\">{item[\"SpecialControl3\"]}</td>\n  //           <td align=\"Left\">{item[\"SpecialControl4\"]}</td>\n  //           <td align=\"Left\">{item[\"SpecialControl5\"]}</td>\n  //           <td align=\"Left\">{item[\"Remark\"]}</td>\n  //           <td align=\"Left\">{item[\"Time\"]}</td>\n  //           <td align=\"Left\">{item[\"Lotsize\"]}</td>\n  //           <td align=\"Left\">{item[\"ModelName\"]}</td>\n  //           <td align=\"Left\">{item[\"Rev\"]}</td>\n  //         </tr>\n  //       ));\n  //     }\n  //   }\n  // };\n  getModel = async () => {\n    const array = await httpClient.get(server.MODELPACKPALLET_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model_group,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  render() {\n    console.log(this.state.report);\n    console.log(this.state.report2);\n    console.log(this.state.xAxis);\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 80 }}>\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-3\">\n                <h2>Packing Pallet in progress</h2>\n              </div>\n              <div className=\"col-sm-4\">\n                <button\n                  onClick={Refresh}\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                >\n                  <i className=\"fas fa-sync\" />\n                  Refresh\n                </button>\n              </div>\n\n              <div className=\"col-sm-5\">\n                <section className=\"content-header\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                    Packing Pallet in progress\n                    </li>\n                  </ol>\n                </section>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              {/* <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <h3>Hold Final ass’y</h3>\n                  </h3>\n                </div>\n              </div> */}\n              <div className=\"content\" style={{ paddingTop: 5 }}>\n                <section className=\"content-header\">\n                  <div className=\"container-fluid\">\n                    <div className=\"row mb-1\">\n                      <div className=\"col-sm-4\">\n                        <h1>Packed Half Pallet(Summary)</h1>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <CSVLink\n                          data={this.state.Raw_Dat1}\n                          filename={\"Packed Half Pallet(Summary).csv\"}\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 1 }}\n                          >\n                            Download\n                          </button>\n                        </CSVLink>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              </div>\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <div className=\"row\"></div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">Model Group</th>\n                                <th width=\"120\">Model Number</th>\n                                <th width=\"120\">LotQty</th>\n                                <th width=\"120\">MO Qty</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"row\" style={{ width: \"100%\" }}>\n                    <div style={{ width: \"1%\" }}></div>\n                    <div className=\"card card-warning\" style={{ width: \"99%\" }}>\n                      <div className=\"card-body\">\n                        <div className=\"row\">\n                          <div style={{ width: \"100%\" }}>\n                            <ReactApexChart\n                              options={this.state.options}\n                              series={this.state.seriesY}\n                              type=\"bar\"\n                              height={350}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"container-fluid\" style={{ paddingTop: 30 }}>\n        <h3>Packed Half Pallet by Lot QA  </h3>\n          <div className=\"row\">\n            <div className=\"col-12\">\n            <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Input Lot QA</label>\n                  </h3>\n                </div>\n                {/* select model */}\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-4\">\n                      <div style={{ marginTop: 10 }} className=\"input-group \">\n                        <input\n                          value={this.state.lotqanumber}\n                          onChange={async (e) => {\n                            await this.setState({\n                              lotqanumber: e.target.value,\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Input lotqanumber hear\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetHoldPalletbylotqa();\n\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report4.length > 0) {\n                              if (this.state.report4[0].QA_no.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report4[0].Model.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 10 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div style={{ marginTop: 10 }} className=\"col-md-1\">\n                      <a\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                    <div style={{ marginTop: 10 }} className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat3}\n                        filename={\"Shipment data by Lot QA.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 1 }}\n                        >\n                          Download by Lot QA\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                              <th width=\"120\">Model Group</th>\n                                <th width=\"120\">Model Number</th>\n                                <th width=\"120\">QA No.</th>\n                                <th width=\"120\">Mfg Date</th>\n                                <th width=\"120\">Mo Qty</th>\n                                <th width=\"120\">Line No.</th>\n                                \n                                <th width=\"120\">Base</th>\n                                <th width=\"120\">Ramp</th>\n                                <th width=\"120\">Hub</th>\n                                <th width=\"120\">Magnet</th>\n                                <th width=\"120\">FPC</th>\n                                <th width=\"120\">Diverter</th>\n                                <th width=\"120\">Crashstop</th>\n                                \n                                <th width=\"120\">SP1</th>\n                                <th width=\"120\">SP2</th>\n                                <th width=\"120\">SP3</th>\n                                <th width=\"120\">SP4</th>\n                                <th width=\"120\">SP5</th>\n                                <th width=\"120\">Remark</th>\n                                <th width=\"120\">Time</th>\n                                <th width=\"120\">Lot size</th>\n                                <th width=\"120\">Model Name</th>\n                                <th width=\"120\">Rev</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport3()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n          <div className=\"content\" style={{ paddingTop: 5 }}>\n            <section className=\"content-header\">\n              <div className=\"container-fluid\">\n                <div className=\"row mb-1\">\n                  <div className=\"col-sm-3\">\n                    <h1>Packed Half Pallet (Detail)</h1>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <CSVLink\n                      data={this.state.Raw_Dat2}\n                      filename={\"Packed Half Pallet Detail.csv\"}\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 1 }}\n                      >\n                        Download\n                      </button>\n                    </CSVLink>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n          <div class=\"content\">\n            <div class=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"content\">\n                    <div class=\"container-fluid\">\n                      <div className=\"card card-primary\">\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 400 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr align=\"center\">\n                                <th width=\"120\">Model Group</th>\n                                <th width=\"120\">Model Number</th>\n                                <th width=\"120\">QA No.</th>\n                                <th width=\"120\">Mfg Date</th>\n                                <th width=\"120\">Mo Qty</th>\n                                <th width=\"120\">Line No.</th>\n                                \n                                <th width=\"120\">Base</th>\n                                <th width=\"120\">Ramp</th>\n                                <th width=\"120\">Hub</th>\n                                <th width=\"120\">Magnet</th>\n                                <th width=\"120\">FPC</th>\n                                <th width=\"120\">Diverter</th>\n                                <th width=\"120\">Crashstop</th>\n                                \n                                <th width=\"120\">SP1</th>\n                                <th width=\"120\">SP2</th>\n                                <th width=\"120\">SP3</th>\n                                <th width=\"120\">SP4</th>\n                                <th width=\"120\">SP5</th>\n                                <th width=\"120\">Remark</th>\n                                <th width=\"120\">Time</th>\n                                <th width=\"120\">Lot size</th>\n                                <th width=\"120\">Model Name</th>\n                                <th width=\"120\">Rev</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport2()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n       \n        </div>\n        \n      </div>\n      \n    );\n  }\n}\n\nexport default Packed_half_pallet;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport { IconName } from \"react-icons/tb\";\nimport { Icon } from \"@material-ui/core\";\n\nclass For_Inspection_tags_status extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      QANumber: \"\",\n      ReportPRINT: [],\n      ReportCo2: [],\n      ReportQA: [],\n      Tray_Record: [],\n      IntoPallet: [],\n      PCMC: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listModel: [],\n      listInsType: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  ReportPRINT = async () => {\n    const result = await httpClient.get(\n      server.PRINTFOR_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      ReportPRINT: result.data.result,\n      isDisable: false,\n    });\n  };\n  ReportCo2 = async () => {\n    const result = await httpClient.get(\n      server.OUTPUTCO2_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData1;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      ReportCo2: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  ReportQA = async () => {\n    const result = await httpClient.get(\n      server.QA_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData1;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      ReportQA: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  ReportTray_Record = async () => {\n    const result = await httpClient.get(\n      server.Tray_Record_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData1;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      Tray_Record: result.data.result,\n      isDisable: false,\n    });\n  };\n  //IntoPallet\n  ReportIntoPallet = async () => {\n    const result = await httpClient.get(\n      server.INTOPALLET_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData1;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      IntoPallet: result.data.result,\n      isDisable: false,\n    });\n  };\n  ReportPCMC = async () => {\n    const result = await httpClient.get(\n      server.PCMC_URL + \"/\" + this.state.QANumber\n    );\n\n    let rawData = result.data.listRawData1;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      PCMC: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  Print_QA = () => {\n    if (this.state.ReportPRINT != null) {\n      if (this.state.ReportPRINT.length > 0) {\n        return this.state.ReportPRINT.map((item) => (\n          <tr>\n            <i class=\"fas fa-angle-double-down\"></i>\n            <td class=\"far fa-file-alt\">{item[\"Print_forsetlot\"]}</td>\n            <td>Date:{item[\"dateP\"]}</td>\n            <td>Qty:{item[\"Qty\"]}</td>\n            <td>{item[\"Mo_number\"]}</td>\n            <td>{item[\"Model\"]}</td>\n            <td>{item[\"Model_No\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"Special_control\"]}</td>\n            <td>{item[\"Supporter_name\"]}</td>\n            <td>{item[\"W/W\"]}</td>\n            <td>{item[\"Baseplate\"]}</td>\n            <td>{item[\"Ramp\"]}</td>\n            <td>{item[\"Crashstop\"]}</td>\n            <td>{item[\"Hub\"]}</td>\n            <td>{item[\"Magnet\"]}</td>\n            <td>{item[\"Diverter\"]}</td>\n            <td>{item[\"FPC\"]}</td>\n            <td>{item[\"Stack\"]}</td>\n            <td>{item[\"DateTime\"]}</td>\n            <td>{item[\"Machine_no\"]}</td>\n            <td>{item[\"CO2_EMP\"]}</td>\n            <td>{item[\"CO2_DATE\"]}</td>\n            <td>{item[\"CO2_SP1\"]}</td>\n            <td>{item[\"CO2_SP2\"]}</td>\n            <td>{item[\"SP1\"]}</td>\n            <td>{item[\"SP2\"]}</td>\n            <td>{item[\"SP3\"]}</td>\n            <td>{item[\"SP4\"]}</td>\n            <td>{item[\"SP5\"]}</td>\n            <td>{item[\"Revision\"]}</td>\n       \n         \n          </tr>\n        ));\n      }\n    }\n  };\n  Co2 = () => {\n    if (this.state.ReportCo2 != null) {\n      if (this.state.ReportCo2.length > 0) {\n        return this.state.ReportCo2.map((item) => (\n          <tr>\n            <i class=\"fas fa-angle-double-down\"></i>\n            <td class=\"far fa-file-alt\">{item[\"CO2\"]}</td>\n            <td>Date:{item[\"MfgDate\"]}</td>\n            <td>Qty:{item[\"Qty\"]}</td>\n            <td>Updater:{item[\"Updater\"]} </td>\n            <td>Remark:{item[\"Remark\"]} </td>\n            <td>Shift:{item[\"Shift\"]}</td>\n           \n          </tr>\n        ));\n      }\n    }\n  };\n  QA = () => {\n    if (this.state.ReportQA != null) {\n      if (this.state.ReportQA.length > 0) {\n        return this.state.ReportQA.map((item) => (\n          <tr>\n            <i class=\"fas fa-angle-double-down\"></i>\n            <td class=\"far fa-file-alt\">{item[\"QA_Visual\"]}</td>\n            <td> Date:{item[\"InspectionDate\"]}</td>\n            <td> Qty:{item[\"MOQTY\"]}</td>\n            <td> InspectionType:{item[\"InspectionType\"]}</td>\n            <td> InspectionResult:{item[\"InspectionResult\"]}</td>\n            <td> Vis_Round:{item[\"Vis_Round\"]}</td>\n        \n          </tr>\n        ));\n      }\n    }\n  };\n  Tray_Record = () => {\n    if (this.state.Tray_Record != null) {\n      if (this.state.Tray_Record.length > 0) {\n        return this.state.Tray_Record.map((item) => (\n          <tr>\n            <i class=\"fas fa-angle-double-down\"></i>\n            <td class=\"far fa-file-alt\">{item[\"Tray_Record1\"]}</td>\n            <td> Date:{item[\"dateT\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  IntoPallet = () => {\n    if (this.state.IntoPallet != null) {\n      if (this.state.IntoPallet.length > 0) {\n        return this.state.IntoPallet.map((item) => (\n          <tr>\n            <i class=\"fas fa-angle-double-down\"></i>\n            <td class=\"far fa-file-alt\">{item[\"Pallet\"]}</td>\n            <td> Date:{item[\"datetbPallet\"]}</td>\n            <td> Pallet_Number :{item[\"Pallet_Number\"]}</td>\n \n          </tr>\n        ));\n      }\n    }\n  };\n  PCMC = () => {\n    if (this.state.PCMC != null) {\n      if (this.state.PCMC.length > 0) {\n        return this.state.PCMC.map((item) => (\n          <tr>\n            <i class=\"fas fa-angle-double-down\"></i>\n            <td class=\"far fa-file-alt\">{item[\"PCMC\"]}</td>\n            <td> Date:{item[\"Date\"]}</td>\n            <td> Invoie ID :{item[\"Invoie_ID\"]}</td>\n            <td> Item no :{item[\"Item_no\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>For Inspection Tag Detail & Moving</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">QA By QA Number</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Scan QA Number</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-3\">\n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.QANumber}\n                          onChange={async (e) => {\n                            await this.setState({\n                              QANumber: e.target.value,\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Scan QANumber here\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.ReportPRINT();\n                              await this.ReportCo2();\n                              await this.ReportQA();\n                              await this.ReportTray_Record();\n                              await this.ReportIntoPallet();\n                              await this.ReportPCMC();\n\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.ReportPRINT.length > 0) {\n                              if (\n                                this.state.ReportPRINT[0].Print_forsetlot.length > 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.ReportPRINT[0].Print_forsetlot.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        // style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"QA_report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          // style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Table*/}\n\n              <div className=\"row\">\n                <div class=\"content\">\n                  <div class=\"container-fluid\">\n                    <div className=\"card card-primary\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 500 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr>\n                                <th width=\"40\">Status</th>\n                                <th width=\"40\">Date</th>\n                                <th width=\"40\">Qty</th>\n                                <th width=\"40\">Mo_number</th>\n                                <th width=\"40\">Model</th>\n                                <th width=\"40\">Model_No</th>\n                                <th width=\"40\">Line</th>\n                                <th width=\"40\">Special_control</th>\n                                <th width=\"40\">Supporter_name</th>\n                                <th width=\"40\">W/W</th>\n                                <th width=\"40\">Baseplate</th>\n                                <th width=\"40\">Ramp</th>\n                                <th width=\"40\">Crashstop</th>\n                                <th width=\"40\">Hub</th>\n                                <th width=\"40\">Magnet</th>\n                                <th width=\"40\">Diverter</th>\n                                <th width=\"40\">FPC</th>\n                                <th width=\"40\">Stack</th>\n                                <th width=\"40\">DateTime</th>\n                                <th width=\"40\">Machine_no</th>\n                                <th width=\"40\">CO2_EMP</th>\n                                <th width=\"40\">CO2_DATE</th>\n                                <th width=\"40\">CO2_SP1</th>\n                                <th width=\"40\">CO2_SP2</th>\n                                <th width=\"40\">SP1</th>\n                                <th width=\"40\">SP2</th>\n                                <th width=\"40\">SP3</th>\n                                <th width=\"40\">SP4</th>\n                                <th width=\"40\">SP5</th>\n                                <th width=\"40\">Revision</th>\n                             \n                              </tr>\n                            </thead>\n                            <tbody>{this.Print_QA()}</tbody>\n                            <tbody>{this.Co2()}</tbody>\n                            <tbody>{this.QA()}</tbody>\n                            <tbody>{this.Tray_Record()}</tbody>\n                            <tbody>{this.IntoPallet()}</tbody>\n                            <tbody>{this.PCMC()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n         \n              </div>\n      \n              {/* Table*/}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default For_Inspection_tags_status;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass Shipinfo extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      Model: [],\n      Line: [],\n      insType: [],\n      report1: [],\n      report2: [],\n      report3: [],\n      xAxis: [],\n      yAxis: [],\n      seriesY: [],\n      seriesY2: [],\n      options: {},\n      options2: {},\n      chart: [],\n      barcodemotor: [],\n      lotqa: [],\n      Raw_Dat1: [],\n      Raw_Dat2: [],\n      Raw_Dat3: [],\n\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n  doGetshipinfobylotqa = async () => {\n    const result = await httpClient.get(\n      server.SHIPINFOBYLOTQA_URL + \"/\" + this.state.shipinfobylotqa\n    );\n    let rawData = result.data.listRawData3;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n  \n    this.setState({\n      report1: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  doGetshipinfobyinvoid = async () => {\n    const result = await httpClient.get(\n      server.SHOPINFOBYINVOID_URL + \"/\" + this.state.shipinfobyinvoid\n    );\n    let rawData = result.data.listRawData4;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat2: rawData[0] });\n    console.log(this.state.Raw_Dat2);\n  \n    this.setState({\n      report2: result.data.result,\n      isDisable: false,\n    });\n  };\n  renderreport1 = () => {\n    if (this.state.report1 != null) {\n      if (this.state.report1.length > 0) {\n        return this.state.report1.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"DO_Num\"]}</td>\n            <td align=\"Left\">{item[\"Track_Lot_Num\"]}</td>\n            <td align=\"Left\">{item[\"MOQTY\"]}</td>\n            <td align=\"Left\">{item[\"Shipment_Date\"]}</td>       \n          </tr>\n        ));\n      }\n    }\n  }; \n  renderreport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"DO_Num\"]}</td>\n            <td align=\"Left\">{item[\"Track_Lot_Num\"]}</td>\n            <td align=\"Left\">{item[\"MOQTY\"]}</td>\n            <td align=\"Left\">{item[\"Shipment_Date\"]}</td>       \n          </tr>\n        ));\n      }\n    }\n  }; \n\n\n  render() {\n    return (\n\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Traceback Ship info by QA/ Invoice </h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                    Traceback Ship info by QA/ Invoice \n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n  \n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Input Data</label>\n                  </h3>\n                </div>\n  \n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-4\">\n                    <label>Search by Lot QA</label>\n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.shipinfobylotqa}\n                          onChange={async (e) => {\n                            await this.setState({\n                              shipinfobylotqa: e.target.value,\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Input LotQA\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {   \n                          this.setState({ shipinfobyinvoid : ('') });                     \n                          this.setState({ report2: ('') });\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 120000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this. doGetshipinfobylotqa();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report1.length > 0) {\n                              if (\n                                this.state.report1[0].Track_Lot_Num.length > 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report1[0].Track_Lot_Num.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                         style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <CSVLink\n                        data={this.state.Raw_Dat1}\n                        filename={\"ship info report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                           style={{ marginTop: 30 }}\n                        >\n                          Download by LotQA\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div> \n                  <div className=\"row\"  style={{ marginTop: 30 }}>\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-4\">\n                    <label>Search by Invoice id</label>\n                      <div className=\"input-group \">\n                        <input\n                          value={this.state.shipinfobyinvoid}\n                          onChange={async (e) => {\n                            await this.setState({\n                              shipinfobyinvoid: e.target.value,\n                            });\n                          }}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Input Invoice ID\"\n                        />\n                      </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {           \n                          this.setState({ shipinfobylotqa : ('') });             \n                          this.setState({ report1: ('') });\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 120000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetshipinfobyinvoid();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report2.length > 0) {\n                              if (\n                                this.state.report2[0].DO_Num.length > 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report2[0].DO_Num.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                         style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <CSVLink\n                        data={this.state.Raw_Dat2}\n                        filename={\"ship info  report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                           style={{ marginTop: 30 }}\n                        >\n                          Download by Invoice\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div> \n                </div>\n              </div>\n  \n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 500 }}\n                        >\n                          <table className=\"table table-head-fixed text-nowrap table-hover\">\n                            <thead>\n                              <tr>\n                                <th width=\"150\">DO_Num</th>\n                                <th width=\"175\">Track_Lot_Num(QA No.)</th>\n                                <th width=\"175\">MOQTY</th>\n                                <th width=\"175\">Shipment_Date</th>                         \n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>   \n                            <tbody>{this.renderreport2()}</tbody>                         \n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Shipinfo;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport moment from \"moment\";\n\nclass updating extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      xAxis: [],\n      yAxis: [],\n      yAxis2: [],\n      //filter\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n    };\n  }\n\n  doGetData = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  componentDidMount = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  renderTableRow = () => {\n    return this.state.data.map((item) => (\n      <tr>\n        <td>{item.Date}</td>\n        <td>{item[\"%Yield\"]}</td>\n      </tr>\n    ));\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 60 }}>\n          <div className=\"row\">\n            <div className=\"border-full-bottom\">\n              <div className=\"D-3 M-12 D-right-9 M-left-0 no-gap\">\n                <div className=\"title-section title-inside\">\n                  <h1>Sorry ! We are during solving a proplem</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n   \n\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default updating;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n// import {icon} from \"public\\dist\\img\\refresh-arrow.png\";\n\nfunction Refresh() {\n  window.location.reload(false);\n}\n\nclass CheckData extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Month: [],\n      Model: [],\n      Line: [],\n      insType: [],\n      report: [],\n      report2: [],\n      reportWEMS:[],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat1: [],\n      Raw_Dat2: [],\n      Raw_Dat3: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listModel: [],\n      listLine: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    let command = await httpClient.get(server.CHECK_DATA);\n    this.setState({ report: command.data.result });\n\n    let rawData = command.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n\n    this.setState({\n      report: command.data.result,\n      isDisable: false,\n    });\n\n    let command1 = await httpClient.get(server.DYNAMIC_URL);\n    this.setState({ report2: command1.data.result });\n\n    let rawData1 = command1.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData1.length; i++) {\n      rawData1[0].push(...rawData1[i]);\n    }\n    this.setState({ Raw_Dat2: rawData1[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      report2: command1.data.result,\n      isDisable: false,\n    });\n\n    let command2 = await httpClient.get(server.CHECKEWMS_URL);\n    this.setState({ report2: command1.data.result });\n\n    let rawData2 = command1.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData2.length; i++) {\n      rawData2[0].push(...rawData2[i]);\n    }\n    this.setState({ Raw_Dat2: rawData1[0] });\n    console.log(this.state.Raw_Dat2);\n\n    this.setState({\n      reportWEMS: command2.data.result,\n      isDisable: false,\n    });\n\n    let command3 = await httpClient.get(server.CHECKEHIPOT_URL);\n    this.setState({ report2: command1.data.result });\n\n    let rawData3 = command1.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData3.length; i++) {\n      rawData3[0].push(...rawData3[i]);\n    }\n    this.setState({ Raw_Dat3: rawData1[0] });\n    console.log(this.state.Raw_Dat3);\n\n    this.setState({\n      reportHipot: command3.data.result,\n      isDisable: false,\n    });\n  };\n\n  doGetSumOutputCo2 = async () => {\n    const result = await httpClient.get(server.CHECK_DATA);\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat1: rawData[0] });\n    console.log(this.state.Raw_Dat1);\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  renderreport1 = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr Align=\"Center\">\n            <td align=\"Left\">{item[\"Date\"]}</td>\n            <td align=\"Left\">{item[\"Line\"]}</td>\n            <td align=\"Left\">{item[\"Model\"]}</td>\n            <td align=\"Left\">{item[\"IP\"]}</td>\n            <td align=\"Left\">{item[\"Machine_no\"]}</td>\n            <td align=\"Left\">{item[\"Master_MC\"]}</td>\n            <td align=\"Left\" style={{ color: item[\"MC\"] === \"OK\" ? \"green\" : \"red\" }}>\n            {item[\"MC\"]}\n          </td>\n   \n\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport2 = () => {\n    if (this.state.report2 != null) {\n      if (this.state.report2.length > 0) {\n        return this.state.report2.map((item) => (\n          <tr Align=\"Center\">\n            <td>\n              {Number(item[\"Barcode\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"Left\">{item[\"Date\"]}</td>\n            <td align=\"Left\">{item[\"Model\"]}</td>\n            <td align=\"Left\">{item[\"Line\"]}</td>\n            <td align=\"Left\">{item[\"IP\"]}</td>\n            <td align=\"Left\">{item[\"Machine_no\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport3 = () => {\n    if (this.state.reportWEMS != null) {\n      if (this.state.reportWEMS.length > 0) {\n        return this.state.reportWEMS.map((item) => (\n          <tr Align=\"Center\">\n            <td>\n              {Number(item[\"Barcode\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td align=\"Left\">{item[\"Date\"]}</td>\n            <td align=\"Left\">{item[\"Model\"]}</td>\n            <td align=\"Left\">{item[\"Line\"]}</td>\n            <td align=\"Left\">{item[\"IP\"]}</td>\n          \n          </tr>\n        ));\n      }\n    }\n  };\n  renderreport4 = () => {\n    if (this.state.reportHipot != null) {\n      if (this.state.reportHipot.length > 0) {\n        return this.state.reportHipot.map((item) => (\n          <tr Align=\"Center\">\n            <td>\n              {Number(item[\"Barcode\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n      \n            <td align=\"Left\">{item[\"Date\"]}</td>\n            <td align=\"Left\">{item[\"Line\"]}</td>\n            <td align=\"Left\">{item[\"Model\"]}</td>\n            <td align=\"Left\">{item[\"IP\"]}</td>\n            <td align=\"Left\">{item[\"Machine_no\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  render() {\n    console.log(this.state.report);\n    console.log(this.state.listLine);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-3\">\n                  <h1>CheckData by Table</h1>\n                </div>\n                <div className=\"col-sm-4\">\n                  <button\n                    onClick={Refresh}\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                  >\n                    <i className=\"fas fa-sync\" />\n                    Refresh\n                  </button>\n                </div>\n\n                <div className=\"col-sm-12\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      CheckData by Table\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-5\">\n            <h3>[DataforAnalysis].[dbo].[Dimension_WR]</h3>\n          </div>\n          <div className=\"col-sm-1\"></div>\n          <h3>[DataforAnalysis].[dbo].[Dynamic_Parallelism_Tester]</h3>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div\n                  className=\"card-body table-responsive p-0\"\n                  style={{ height: 600 }}\n                >\n                  <table className=\"table table-head-fixed text-nowrap table-hover\">\n                    <thead>\n                      <tr align=\"center\">\n                        <th width=\"30\">Date</th>\n                        <th width=\"30\">Line</th>\n                        <th width=\"30\">Model</th>\n                        <th width=\"30\">IP</th>\n                        <th width=\"30\">Machine_no</th>\n                        <th width=\"30\">Master_MC</th>\n                        <th width=\"30\">Status</th>\n      \n\n                      </tr>\n                    </thead>\n                    <tbody>{this.renderreport1()}</tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-sm-6\">\n            <div class=\"container-fluid\">\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 600 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr align=\"center\">\n                            <th width=\"120\">Barcode</th>\n                            <th width=\"120\">Date</th>\n                            <th width=\"120\">Model</th>\n                            <th width=\"120\">Line</th>\n                            <th width=\"120\">IP</th>\n                            <th width=\"30\">Machine_no</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderreport2()}</tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-5\">\n            <h3>[DataforAnalysis].[dbo].[EWMS]</h3>\n          </div>\n          <div className=\"col-sm-1\"></div>\n          <h3>[DataforAnalysis].[dbo].[Hipot]</h3>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <div class=\"container-fluid\">\n              <div className=\"card card-primary\">\n                <div\n                  className=\"card-body table-responsive p-0\"\n                  style={{ height: 600 }}\n                >\n                  <table className=\"table table-head-fixed text-nowrap table-hover\">\n                    <thead>\n                      <tr align=\"center\">\n                        <th width=\"30\">Barcode</th>\n                        <th width=\"30\">Date</th>\n                        <th width=\"30\">Model</th>\n                        <th width=\"30\">Line</th>\n                        <th width=\"30\">IP</th>\n              \n                      </tr>\n                    </thead>\n                    <tbody>{this.renderreport3()}</tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-sm-6\">\n            <div class=\"container-fluid\">\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div\n                      className=\"card-body table-responsive p-0\"\n                      style={{ height: 600 }}\n                    >\n                      <table className=\"table table-head-fixed text-nowrap table-hover\">\n                        <thead>\n                          <tr align=\"center\">\n                   \n                            <th width=\"120\">Barcode</th>\n                            <th width=\"120\">Date</th>\n                            <th width=\"120\">Model</th>\n                            <th width=\"120\">Line</th>\n                            <th width=\"120\">IP</th>\n                            <th width=\"120\">Machine_no</th>\n                          </tr>\n                        </thead>\n                        <tbody>{this.renderreport4()}</tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CheckData;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport { Bar } from 'react-chartjs-2';\n\nclass Auto_machine_alarm_history extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Table: [],\n      EMP: [],\n      report: [],\n      reportGraph: [],\n      xAxis: [],\n      yAxis1: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n      Table: [],\n      Line: [],\n      Raw_Dat: [],\n\n      startDate: moment().add(\"days\", -7).format(\"yyyy-MM-DD\"),//moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listTable: [],\n      listLine: [],\n      listModel: [],\n      listCode: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getTable();\n    await this.getLine();\n  };\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.MC_ERROR_URL +\n        \"/\" +\n        this.state.Table +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate\n    );\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultGraph.length; index++) {\n      const item = result.data.resultGraph[index];\n      await xAxis.push(item.Date);\n    }\n\n    let PivotTable = result.data.PivotTable;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      reportGraph: result.data.resultGraph,\n      xAxis,\n\n      PivotTable,\n\n      // series,\n\n      isDisable: false,\n    });\n    let seriesData = [];\n\n    for (let i = 0; i < PivotTable.length; i++) {\n      const series = {\n        name: PivotTable[i].name,\n        type: \"column\",\n        data: PivotTable[i].data,\n      };\n      seriesData.push(series);\n    }\n    \n    await this.setState({\n\n      // Existing code...\n      seriesY: seriesData,\n      options: {\n        chart: {\n          height: 350,\n          type: \"bar\",\n          stacked: true,\n        },\n   \n        title: {\n          text: \"M/C error monitoring\",\n          align: \"center\",\n        },\n        xaxis: {\n          categories: xAxis,\n          text: \"Dayly\",\n          labels: {\n            style: {\n              fontSize: \"12px\",\n              fontWeight: 500,\n            },\n          },\n        },\n        yaxis: [\n          {\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff1a1a\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff1a1a\",\n              },\n            },\n            title: {\n              text: \"QTY\",\n              style: {\n                color: \"#ff1a1a\",\n              },\n            },\n            tooltip: {\n              enabled: true,\n            },\n          },\n        ],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: \"topLeft\",\n            offsetY: 30,\n            offsetX: 0,\n          },\n        },\n        legend: {\n          horizontalAlign: \"center\",\n          offsetX: 40,\n        },\n        fill: {\n          opacity: 0.8,\n        },\n        colors: [\n          \"#1f77b4\",\n          \"#ff7f0e\",\n          \"#2ca02c\",\n          \"#d62728\",\n          \"#9467bd\",\n          \"#8c564b\",\n          \"#e377c2\",\n          \"#7f7f7f\",\n          \"#bcbd22\",\n          \"#17becf\",\n          \"#aec7e8\",\n          \"#ffbb78\",\n          \"#98df8a\",\n          \"#ff9896\",\n          \"#c5b0d5\",\n          \"#c49c94\",\n          \"#f7b6d2\",\n          \"#c7c7c7\",\n          \"#dbdb8d\",\n          \"#9edae5\",\n          \"#ff6600\",\n          \"#339933\",\n          \"#cc0000\",\n          \"#993366\",\n          \"#663300\",\n          \"#ff66cc\",\n          \"#666666\",\n          \"#cccc00\",\n          \"#00ccff\",\n          \"#ff3300\",\n          \"#66ff66\",\n          \"#990000\",\n          \"#996699\",\n          \"#996633\",\n          \"#ff99cc\",\n          \"#999999\",\n          \"#ffff00\",\n          \"#0099ff\"\n        ]\n        ,\n\n        stroke: {\n          width: 2,\n          curve: \"smooth\",\n        },\n        markers: {\n          size: 4,\n          strokeColors: \"#fff\",\n          strokeWidth: 2,\n          hover: {\n            size: 7,\n          },\n        },\n      },\n      // Rest of the code...\n    });\n  };\n\n  getTable = async () => {\n    const array = await httpClient.get(server.ERRORTable_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Table,\n    }));\n    this.setState({ listTable: options });\n  };\n\n  getLine = async () => {\n    const array = await httpClient.get(\n      server.MC_ERROR_Line_URL + \"/\" + this.state.Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n\n  render() {\n    console.log(this.state.xAxis);\n    console.log(this.state.PivotTable);\n    console.log(this.state.report);\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Daily Auto machine alarm history</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\"> Daily Auto machine alarm history</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <div></div>\n                        <label>Table</label>\n                        <Select\n                          options={this.state.listTable}\n                          onChange={async (e) => {\n                            await this.setState({ Table: e.label });\n                            await this.getLine();\n                            await this.setState({\n                              Line: [\n                                { label: \"Select Line_No\" },\n                              ],\n                            });\n                          }}\n                          \n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Table\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line_No</label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [] });\n                            this.state.Line.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Line_No\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>By Daily Select From &nbsp;</label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Finish Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Code\"\n                         <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Code</label>\n                        <Select\n                          options={this.state.listCode}\n                          value={this.state.Code[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Code: [] });\n                            this.state.Code.push({ label: e.label });\n                     \n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Code\"\n                        />\n                      </div>\n                    </div> */}\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={async (e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              try {\n                                await this.doGetDataReport();\n                                Swal.close();\n                                if (\n                                  this.state.reportGraph &&\n                                  Array.isArray(this.state.reportGraph) &&\n                                  this.state.reportGraph.length > 0\n                                ) {\n                                  if (\n                                    this.state.reportGraph[0] &&\n                                    Array.isArray(this.state.reportGraph[0]) &&\n                                    this.state.reportGraph[0].length > 0\n                                  ) {\n                                    Swal.fire({\n                                      icon: \"success\",\n                                      title: \"Success\",\n                                      text: \"Data has been loaded successfully\",\n                                    });\n                                  } else if (\n                                    this.state.reportGraph[0] &&\n                                    Array.isArray(this.state.reportGraph[0]) &&\n                                    this.state.reportGraph[0].length === null\n                                  ) {\n                                    Swal.fire({\n                                      icon: \"error\",\n                                      title: \"No production data\",\n                                      text: \"Please select another date\",\n                                    });\n                                  }\n                                } else {\n                                  Swal.fire({\n                                    icon: \"error\",\n                                    title: \"Data loading encountered an error, please try again\",\n                                  }).then(() => {\n                                    // รีเฟรชหน้าใหม่\n                                    window.location.reload();\n                                  });\n                                }\n                              } catch (error) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select another date\", // แสดงข้อความของ error เป็นข้อความใน Swal\n                                }).then(() => {\n                                  // รีเฟรชหน้าใหม่\n                                  window.location.reload();\n                                });\n                              }\n                            },\n                          });\n                        }}\n                        \n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"card card-primary card-outline\">\n                        {/* Chart Title */}\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <i className=\"far fa-chart-bar\" />\n                            \n                          </h3>\n                        </div>\n\n                        {/* Insert Xbar Chart */}\n                        <div className=\"row\" style={{ width: \"100%\" }}>\n                          <div style={{ width: \"1%\" }}></div>\n                          <div\n                            className=\"card card-warning\"\n                            style={{ width: \"99%\" }}\n                          >\n                            <div className=\"card-body\">\n                              <div className=\"row\">\n                                <div style={{ width: \"100%\" }}>\n                                  <ReactApexChart\n                                    options={this.state.options}\n                                    series={this.state.seriesY}\n                                    type=\"bar\"\n                                    height={450}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Table*/}     \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Auto_machine_alarm_history;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport { Bar } from \"react-chartjs-2\";\n\nclass trace_back_ng extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year: [],\n      Table: [],\n      EMP: [],\n      report: [],\n      reportGraph: [],\n      xAxis: [],\n      yAxis1: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n      Table: [],\n      Line: [],\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listTable: [],\n      listLine: [],\n      listModel: [],\n      listCode: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getTable();\n    await this.getLine();\n  };\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.NG_URL +\n        \"/\" +\n        this.state.Table +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  getTable = async () => {\n    const array = await httpClient.get(server.Table_Temp_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Table,\n    }));\n    this.setState({ listTable: options });\n  };\n\n  getLine = async () => {\n    const array = await httpClient.get(\n      server.NG_Line_URL + \"/\" + this.state.Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n\n  renderReport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr>\n            <td>{item[\"Machine_no\"]}</td>\n            <td>{item[\"Date\"]}</td>\n            <td>{item[\"Time\"]}</td>\n            <td>{item[\"Operator\"]}</td>\n            <td>{item[\"Barcode\"]}</td>\n            <td>{item[\"Master_Judgment\"]}</td>\n            <td>{item[\"Set_Dim\"]}</td>\n            <td>{item[\"Set_Dim_A\"]}</td>\n            <td>{item[\"Set_Dim_B\"]}</td>\n            <td>{item[\"Set_Dim_C\"]}</td>\n            <td>{item[\"Ramp_to_Datum\"]}</td>\n            <td>{item[\"Contact_Probe_2\"]}</td>\n            <td>{item[\"Pivot_Height\"]}</td>\n            <td>{item[\"Parallelism\"]}</td>\n            <td>{item[\"TIR\"]}</td>\n            <td>{item[\"TIR_A\"]}</td>\n            <td>{item[\"TIR_B\"]}</td>\n            <td>{item[\"TIR_C\"]}</td>\n            <td>{item[\"FlyHeight\"]}</td>\n            <td>{item[\"Fly_Height_Max_Limit\"]}</td>\n            <td>{item[\"Fly_Height_Min_Limit\"]}</td>\n            <td>{item[\"Axial_Play\"]}</td>\n            <td>{item[\"Static_Dim\"]}</td>\n            <td>{item[\"Static_Dim_A\"]}</td>\n            <td>{item[\"Static_Dim_B\"]}</td>\n            <td>{item[\"Static_Dim_C\"]}</td>\n            <td>{item[\"RVA\"]}</td>\n            <td>{item[\"Speed\"]}</td>\n            <td>{item[\"Ramp_Pivot\"]}</td>\n            <td>{item[\"Projection1\"]}</td>\n            <td>{item[\"Flange-Ramp_pad\"]}</td>\n            <td>{item[\"Dimension_Max\"]}</td>\n            <td>{item[\"Dimension_Max_Angle\"]}</td>\n            <td>{item[\"Dimension_Min\"]}</td>\n            <td>{item[\"Dimension_Min_Angle\"]}</td>\n            <td>{item[\"Static_Parallelism\"]}</td>\n            <td>{item[\"Static_Dimension_Max\"]}</td>\n            <td>{item[\"Static_Dimension_Max_Angle\"]}</td>\n            <td>{item[\"Static_Dimension_Min\"]}</td>\n            <td>{item[\"Static_Dimension_Min_Angle\"]}</td>\n            <td>{item[\"NRRO\"]}</td>\n            <td>{item[\"RRO\"]}</td>\n            <td>{item[\"Spin_direction_Value\"]}</td>\n            <td>{item[\"Spin_direction_Bin_Number\"]}</td>\n            <td>{item[\"Spin_direction_Result\"]}</td>\n            <td>{item[\"Remarks\"]}</td>\n            <td>{item[\"Line_no\"]}</td>\n            <td>{item[\"Model\"]}</td>\n            <td>{item[\"2ndYield\"]}</td>\n            <td>{item[\"NG criteria\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n  render() {\n    console.log(this.state.xAxis);\n    console.log(this.state.PivotTable);\n    console.log(this.state.report);\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Trace back NG Dynamic_Parallelism_Tester</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                      Trace back NG Dynamic_Parallelism_Tester\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <div></div>\n                        <label>Table</label>\n                        <Select\n                          options={this.state.listTable}\n                          onChange={async (e) => {\n                            await this.setState({ Table: e.label });\n                            await this.getLine();\n                            await this.setState({\n                              Line: [{ label: \"Select Line_No\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Table\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line_No</label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [] });\n                            this.state.Line.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Line_No\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>By Daily Select From &nbsp;</label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Code\"\n                         <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Code</label>\n                        <Select\n                          options={this.state.listCode}\n                          value={this.state.Code[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Code: [] });\n                            this.state.Code.push({ label: e.label });\n                     \n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Code\"\n                        />\n                      </div>\n                    </div> */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Date.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Date.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                }).then(() => {\n                                  // รีเฟรชหน้าใหม่\n                                  window.location.reload();\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              }).then(() => {\n                                // รีเฟรชหน้าใหม่\n                                window.location.reload();\n                       \n                              });\n                              \n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    {/* Submit button */}\n                    {/* <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={async (e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              try {\n                                await this.doGetDataReport();\n                                Swal.close();\n                                if (\n                                  this.state.report &&\n                                  Array.isArray(this.state.report) &&\n                                  this.state.report.length > 0\n                                ) {\n                                  if (\n                                    this.state.report[0] &&\n                                    Array.isArray(this.state.report[0]) &&\n                                    this.state.report[0].length > 0\n                                  ) {\n                                    Swal.fire({\n                                      icon: \"success\",\n                                      title: \"Success\",\n                                      text: \"Data has been loaded successfully\",\n                                    });\n                                  } else if (\n                                    this.state.report[0] &&\n                                    Array.isArray(this.state.report[0]) &&\n                                    this.state.report[0].length === null\n                                  ) {\n                                    Swal.fire({\n                                      icon: \"error\",\n                                      title: \"No production data\",\n                                      text: \"Please select another date\",\n                                    });\n                                  }\n                                } else {\n                                  Swal.fire({\n                                    icon: \"error\",\n                                    title:\n                                      \"Data loading encountered an error, please try again\",\n                                  }).then(() => {\n                                    // รีเฟรชหน้าใหม่\n                                    window.location.reload();\n                                  });\n                                }\n                              } catch (error) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select another date\", // แสดงข้อความของ error เป็นข้อความใน Swal\n                                }).then(() => {\n                                  // รีเฟรชหน้าใหม่\n                                  window.location.reload();\n                                });\n                              }\n                            },\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div> */}\n                    <div className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{\n                            height: 400,\n                            height: 500,\n                            zIndex: \"3\",\n                            position: \"relative\",\n                            zIndex: \"0\",\n                          }}\n                        >\n                          <table className=\"table  text-nowrap table-hover table-head-fixed\">\n                            <thead>\n                              <tr>\n                                <th width=\"175\">Machine_no</th>\n                                <th width=\"175\">Date</th>\n                                <th width=\"175\">Time</th>\n                                <th width=\"175\">Operator</th>\n                                <th width=\"175\">Barcode</th>\n                                <th width=\"175\">Master_Judgment</th>\n                                <th width=\"175\">Set_Dim</th>\n                                <th width=\"175\">Set_Dim_A</th>\n                                <th width=\"175\">Set_Dim_B</th>\n                                <th width=\"175\">Set_Dim_C</th>\n                                <th width=\"175\">Ramp_to_Datum</th>\n                                <th width=\"175\">Contact_Probe_2</th>\n                                <th width=\"175\">Pivot_Height</th>\n                                <th width=\"175\">Parallelism</th>\n                                <th width=\"175\">TIR</th>\n                                <th width=\"175\">TIR_A</th>\n                                <th width=\"175\">TIR_B</th>\n                                <th width=\"175\">TIR_C</th>\n                                <th width=\"175\">FlyHeight</th>\n                                <th width=\"175\">Fly_Height_Max_Limit</th>\n                                <th width=\"175\">Fly_Height_Min_Limit</th>\n                                <th width=\"175\">Axial_Play</th>\n                                <th width=\"175\">Static_Dim</th>\n                                <th width=\"175\">Static_Dim_A</th>\n                                <th width=\"175\">Static_Dim_B</th>\n                                <th width=\"175\">Static_Dim_C</th>\n                                <th width=\"175\">RVA</th>\n                                <th width=\"175\">Speed</th>\n                                <th width=\"175\">Ramp_Pivot</th>\n                                <th width=\"175\">Projection1</th>\n                                <th width=\"175\">Flange-Ramp_pad</th>\n                                <th width=\"175\">Dimension_Max</th>\n                                <th width=\"175\">Dimension_Max_Angle</th>\n                                <th width=\"175\">Dimension_Min</th>\n                                <th width=\"175\">Dimension_Min_Angle</th>\n                                <th width=\"175\">Static_Parallelism</th>\n                                <th width=\"175\">Static_Dimension_Max</th>\n                                <th width=\"175\">Static_Dimension_Max_Angle</th>\n                                <th width=\"175\">Static_Dimension_Min</th>\n                                <th width=\"175\">Static_Dimension_Min_Angle</th>\n                                <th width=\"175\">NRRO</th>\n                                <th width=\"175\">RRO</th>\n                                <th width=\"175\">Spin_direction_Value</th>\n                                <th width=\"175\">Spin_direction_Bin_Number</th>\n                                <th width=\"175\">Spin_direction_Result</th>\n                                <th width=\"175\">Remarks</th>\n                                <th width=\"175\">Line_no</th>\n                                <th width=\"175\">Model</th>\n                                <th width=\"175\">2ndYield</th>\n                                <th width=\"175\">NG criteria</th>\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderReport()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n         \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default trace_back_ng;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport { Bar } from 'react-chartjs-2';\n\nclass MC_ERROR extends Component {\n  constructor(props) {\n    super(props);\n    \n\n    //set state\n    this.state = {\n      year: [],\n      Table: [],\n      EMP: [],\n      report: [],\n      reportGraph: [],\n      xAxis: [],\n      yAxis1: [],\n      series: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n      Table: [],\n      Line: [],\n      Raw_Dat: [],\n\n      startDate: moment().add(\"days\", -7).format(\"yyyy-MM-DD\"),//moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listTable: [],\n      listLine: [],\n      listModel: [],\n      listCode: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getTable();\n    await this.getLine();\n  };\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.MC_ERROR_URL +\n        \"/\" +\n        this.state.Table +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate\n    );\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultGraph.length; index++) {\n      const item = result.data.resultGraph[index];\n      await xAxis.push(item.Date);\n    }\n\n    let PivotTable = result.data.PivotTable;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      reportGraph: result.data.resultGraph,\n      xAxis,\n\n      PivotTable,\n\n      // series,\n\n      isDisable: false,\n    });\n    let seriesData = [];\n\n    for (let i = 0; i < PivotTable.length; i++) {\n      const series = {\n        name: PivotTable[i].name,\n        type: \"column\",\n        data: PivotTable[i].data,\n      };\n      seriesData.push(series);\n    }\n    \n    await this.setState({\n\n      // Existing code...\n      series: seriesData,\n      options: {\n        chart: {\n          height: 350,\n          type: \"line\",\n          stacked: true,\n        },\n        title: {\n          text: \"M/C error monitoring\",\n          align: \"center\",\n        },\n        xaxis: {\n          categories: xAxis,\n          labels: {\n            style: {\n              fontSize: \"12px\",\n              fontWeight: 500,\n            },\n          },\n        },\n        yaxis: [\n          {\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff1a1a\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff1a1a\",\n              },\n            },\n            title: {\n              text: \"QTY\",\n              style: {\n                color: \"#ff1a1a\",\n              },\n            },\n            tooltip: {\n              enabled: true,\n            },\n          },\n        ],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: \"topLeft\",\n            offsetY: 30,\n            offsetX: 0,\n          },\n        },\n        legend: {\n          horizontalAlign: \"center\",\n          offsetX: 40,\n        },\n        fill: {\n          opacity: 0.8,\n        },\n        theme: {\n          palette: \"palette8\",\n        },\n        stroke: {\n          width: 2,\n          curve: \"smooth\",\n        },\n        markers: {\n          size: 4,\n          strokeColors: \"#fff\",\n          strokeWidth: 2,\n          hover: {\n            size: 7,\n          },\n        },\n        series: [\n          {\n            name: \"Series 1\",\n            data: [10, 20,], // Example data for the line chart\n          },\n        ],\n      },\n      \n      // Rest of the code...\n    });\n  };\n\n  getTable = async () => {\n    const array = await httpClient.get(server.ERRORTable_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Table,\n    }));\n    this.setState({ listTable: options });\n  };\n\n  getLine = async () => {\n    const array = await httpClient.get(\n      server.MC_ERROR_Line_URL + \"/\" + this.state.Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n\n  render() {\n    console.log(this.state.xAxis);\n    console.log(this.state.PivotTable);\n    console.log(this.state.report);\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>M/C error monitoring</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">MC_ERROR</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <div></div>\n                        <label>Table</label>\n                        <Select\n                          options={this.state.listTable}\n                          onChange={async (e) => {\n                            await this.setState({ Table: e.label });\n                            await this.getLine();\n                            await this.setState({\n                              Line: [\n                                { label: \"Select Line_No\" },\n                              ],\n                            });\n                          }}\n                          \n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Table\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line_No</label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [] });\n                            this.state.Line.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Line_No\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Start Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>By Daily Select From &nbsp;</label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Finish Date */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                        />\n                      </div>\n                    </div>\n                    {/* //Select Critiria \"Code\"\n                         <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Code</label>\n                        <Select\n                          options={this.state.listCode}\n                          value={this.state.Code[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Code: [] });\n                            this.state.Code.push({ label: e.label });\n                     \n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Code\"\n                        />\n                      </div>\n                    </div> */}\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={async (e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              try {\n                                await this.doGetDataReport();\n                                Swal.close();\n                                if (\n                                  this.state.reportGraph &&\n                                  Array.isArray(this.state.reportGraph) &&\n                                  this.state.reportGraph.length > 0\n                                ) {\n                                  if (\n                                    this.state.reportGraph[0] &&\n                                    Array.isArray(this.state.reportGraph[0]) &&\n                                    this.state.reportGraph[0].length > 0\n                                  ) {\n                                    Swal.fire({\n                                      icon: \"success\",\n                                      title: \"Success\",\n                                      text: \"Data has been loaded successfully\",\n                                    });\n                                  } else if (\n                                    this.state.reportGraph[0] &&\n                                    Array.isArray(this.state.reportGraph[0]) &&\n                                    this.state.reportGraph[0].length === null\n                                  ) {\n                                    Swal.fire({\n                                      icon: \"error\",\n                                      title: \"No production data\",\n                                      text: \"Please select another date\",\n                                    });\n                                  }\n                                } else {\n                                  Swal.fire({\n                                    icon: \"error\",\n                                    title: \"Data loading encountered an error, please try again\",\n                                  }).then(() => {\n                                    // รีเฟรชหน้าใหม่\n                                    window.location.reload();\n                                  });\n                                }\n                              } catch (error) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"Error\",\n                                  text: error.message, // แสดงข้อความของ error เป็นข้อความใน Swal\n                                }).then(() => {\n                                  // รีเฟรชหน้าใหม่\n                                  window.location.reload();\n                                });\n                              }\n                            },\n                          });\n                        }}\n                        \n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"card card-primary card-outline\">\n                        {/* Chart Title */}\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <i className=\"far fa-chart-bar\" />\n                            \n                          </h3>\n                        </div>\n\n                        {/* Insert Xbar Chart */}\n                        <div className=\"row\" style={{ width: \"100%\" }}>\n                          <div style={{ width: \"1%\" }}></div>\n                          <div\n                            className=\"card card-warning\"\n                            style={{ width: \"99%\" }}\n                          >\n                            <div className=\"card-body\">\n                              <div className=\"row\">\n                                <div style={{ width: \"100%\" }}>\n                                  <ReactApexChart\n                                    options={this.state.options}\n                                    series={this.state.series}\n                                    type=\"bar\"\n                                    height={450}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Table*/}     \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MC_ERROR;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\n\nclass Request_label_printing_report extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      model: { label: \"**ALL**\" },\n      Line: [{ label: \"**ALL**\" }],\n      confirm: [{ label: \"wait_confirm\" }],\n      report: [],\n      QANumber: \"\",\n      report2: [],\n      Raw_Dat2: [],\n      Raw_Dat: [],\n      startDate: moment().format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n      listModel: [], // Define your list of models here\n      listLine: [], // Define your list of Line No. options here\n      listconfirm: [], // Define your list of confirmation options here\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getLine();\n    await this.getconfirm();\n  };\n\n  // report with select model,date,type\n  doGetDataReport = async () => {\n    const modelLabel =\n      this.state.model.label === \"**ALL**\" ? \"**ALL**\" : this.state.model.label;\n    const result = await httpClient.get(\n      server.REPORTprintlabal_URL +\n        \"/\" +\n        modelLabel +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.confirm[0].label +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate\n    );\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  renderReport = () => {\n    if (this.state.report != null) {\n      if (this.state.report.length > 0) {\n        return this.state.report.map((item) => (\n          <tr key={item.id}>\n            <td>{item[\"date\"]}</td>\n            <td>{item[\"Model_name\"]}</td>\n            <td>{item[\"Model_ID\"]}</td>\n            <td>{item[\"Line\"]}</td>\n            <td>{item[\"Motor\"]}</td>\n            <td>{item[\"Revision\"]}</td>\n            <td>{item[\"WW\"]}</td>\n            <td>{item[\"Ramp\"]}</td>\n            <td>{item[\"Ramp_ID\"]}</td>\n            <td>{item[\"CrashStop\"]}</td>\n            <td>{item[\"CrashStop_ID\"]}</td>\n            <td>{item[\"Base\"]}</td>\n            <td>{item[\"Base_ID\"]}</td>\n            <td>{item[\"CODE_Line\"]}</td>\n\n            <td>{item[\"MSH_name\"]}</td>\n            <td>{item[\"MSH_ID\"]}</td>\n            <td align=\"RIGHT\">\n              {Number(item[\"Qty\"]).toLocaleString(undefined, {\n                maximumFractionDigits: 2,\n              })}\n            </td>\n            <td>{item[\"TimeStamp\"]}</td>\n            <td>{item[\"Requester\"]}</td>\n            <td>{item[\"Tray\"]}</td>\n            <td>{item[\"Tray_Qty\"]}</td>\n            <td>{item[\"Status\"]}</td>\n            <td>{item[\"Diverter/Airdam\"]}</td>\n            <td>{item[\"Stack\"]}</td>\n            <td>{item[\"Temperature\"]}</td>\n            <td>{item[\"Order_Number\"]}</td>\n            <td>{item[\"Time_Alarm\"]}</td>\n            <td>{item[\"Confirmation\"]}</td>\n            <td>{item[\"User_Confirm\"]}</td>\n            <td>{item[\"Receiver\"]}</td>\n          </tr>\n        ));\n      }\n    }\n  };\n\n  getModel = async () => {\n    try {\n      const response = await httpClient.get(server.MODELLABAL_URL);\n      const options = response.data.result.map((d) => ({\n        label: d.Model,\n      }));\n      this.setState({ listModel: options });\n    } catch (error) {\n      console.error(\"Error fetching models:\", error);\n    }\n  };\n\n  getLine = async () => {\n    try {\n      const modelLabel =\n        this.state.model.label === \"**ALL**\"\n          ? \"**ALL**\"\n          : this.state.model.label;\n      const response = await httpClient.get(\n        server.LINELABAL_URL + \"/\" + modelLabel\n      );\n      const options = response.data.result.map((d) => ({\n        label: d.Line,\n      }));\n      this.setState({ listLine: options });\n    } catch (error) {\n      console.error(\"Error fetching lines:\", error);\n    }\n  };\n\n  getconfirm = async () => {\n    const array = await httpClient.get(server.CONFIRMLABAL_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.confirm,\n    }));\n    this.setState({ listconfirm: options });\n  };\n\n  render() {\n    console.log(this.state.model);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Request label printing report </h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                    Request label printing report{\" \"}\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-sm-2\">\n                      <div className=\"form-group\">\n                        <div></div>\n                        <label>Model group</label>\n                        <Select\n                          options={this.state.listModel}\n                          value={this.state.model}\n                          onChange={async (e) => {\n                            await this.setState({ model: e });\n                            await this.getLine(); // เมื่อเลือก model ใหม่ จะอัปเดต line\n                            await this.getconfirm(); // เมื่อเลือก model ใหม่ จะอัปเดต confirm\n                            await this.setState({\n                              Line: [{ label: \"Select Line\" }],\n                              confirm: [{ label: \"Select Confirm\" }],\n                            });\n                          }}\n                          placeholder=\"Select Model\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line No.</label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [e] }); // อัปเดต line ที่เลือก\n                            await this.getconfirm(); // เมื่อเลือก line ใหม่ จะอัปเดต confirm\n                            await this.setState({\n                              confirm: [{ label: \"Select Confirm\" }],\n                            });\n                          }}\n                          placeholder=\"Select Line No.\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Confirm</label>\n                        <Select\n                          options={this.state.listconfirm}\n                          value={this.state.confirm[0]}\n                          onChange={async (e) => {\n                            await this.setState({ confirm: [e] }); // อัปเดต confirm ที่เลือก\n                          }}\n                          placeholder=\"Select Confirm\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-2\">\n                      <div className=\"form-group\">\n                        <label>By Daily Select From &nbsp;</label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                          // Disable the input if confirm is 'OK'\n                          disabled={\n                            this.state.confirm.length > 0 &&\n                            this.state.confirm[0].label !== \"OK\"\n                          }\n                        />\n                      </div>\n                    </div>\n\n                    {/* Select Finish Date */}\n                    <div className=\"col-sm-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                          // Disable the input if confirm is 'OK'\n                          disabled={\n                            this.state.confirm.length > 0 &&\n                            this.state.confirm[0].label !== \"OK\"\n                          }\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-sm-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ QANumber: \"\" });\n                          this.setState({ report2: \"\" });\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Model_name.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Model_name.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                }).then(() => {\n                                  // รีเฟรชหน้าใหม่\n                                  window.location.reload();\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title: \"No production data\",\n                                text: \"Please select other date\",\n                              }).then(() => {\n                                // รีเฟรชหน้าใหม่\n                                window.location.reload();\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n\n                    <div className=\"col-md-1.5\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Table*/}\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                          style={{ height: 500 ,\n                            zIndex: \"3\",\n                            position: \"relative\",\n                            zIndex: \"0\"}}\n                        >\n                          <table className=\" table  table-striped text-nowrap table-hover table-head-fixed\">\n                            <thead>\n                                <tr  align=\"center\">\n                                  <th width=\"175\">Date</th>\n                                  <th width=\"175\">Model_name</th>\n                                  <th width=\"175\">Model_ID</th>\n                                  <th width=\"200\">Line</th>\n                                  <th width=\"175\">Motor</th>\n                                  <th width=\"175\">Revision</th>\n                                  <th width=\"175\">WW</th>\n                                  <th width=\"175\">Ramp</th>\n                                  <th width=\"175\">Ramp_ID</th>\n                                  <th width=\"175\">CrashStop</th>\n                                  <th width=\"175\">CrashStop_ID</th>\n                                  <th width=\"175\">Base</th>\n                                  <th width=\"175\">Base_ID</th>\n                                  <th width=\"175\">CODE_Line</th>\n\n                                  <th width=\"175\">MSH_name</th>\n                                  <th width=\"175\">MSH_ID</th>\n                                  <th width=\"175\">Qty</th>\n                                  <th width=\"175\">TimeStamp</th>\n                                  <th width=\"175\">Requester</th>\n                                  <th width=\"175\">Tray</th>\n                                  <th width=\"175\">Tray_Qty</th>\n                                  <th width=\"175\">Status</th>\n                                  <th width=\"175\">Diverter/Airdam</th>\n                                  <th width=\"175\">Stack</th>\n                                  <th width=\"175\">Temperature</th>\n                                  <th width=\"175\">Order_Number</th>\n                                  <th width=\"175\">Time_Alarm</th>\n                                  <th width=\"175\">Confirmation</th>\n                                  <th width=\"175\">User_Confirm</th>\n                                  <th width=\"175\">Receiver</th>\n                                </tr>\n                              </thead>\n                              <tbody>{this.renderReport()}</tbody>\n                            </table>\n                          </div>\n                        </div>\n            \n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Request_label_printing_report;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport { CheckboxGroup } from \"react-bootstrap\";\nimport { green } from \"@material-ui/core/colors\";\n\nclass KPIVranking extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //Motor\n      data: [],\n\n      // criteria\n      model: [],\n      productionline: [],\n      KPOV: [],\n      Table: [],\n      report1: [],\n\n      KPIV1: \"blank\",\n\n      startDate: moment().add(\"days\", -89).format(\"yyyy-MM-DD\"),\n      finishDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listKPOV: [],\n      listKPIV1: [],\n\n      listProductionline: [],\n\n      optionSelected: null,\n      isDisable: false,\n      isDisableDays: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    this.getModel();\n    this.getKPOV();\n    this.getKPIV1();\n    this.getProductionline();\n  };\n\n  doGetTABLEML = async () => {\n    const result = await httpClient.get(\n      server.TABLEML3_URL + \"/\" + this.state.KPIV1\n    );\n    let rawData = result.data.result; // อัปเดตการเรียกใช้ข้อมูล\n    console.log(rawData);\n    for (let i = 0; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report1: result.data.result, // อัปเดตการเรียกใช้ข้อมูล\n      isDisable: false,\n    });\n  };\n\n  renderreport1 = () => {\n    if (this.state.Raw_Dat != null) {\n      // อัปเดตการเรียกใช้ข้อมูล\n      if (this.state.Raw_Dat.length > 0) {\n        // อัปเดตการเรียกใช้ข้อมูล\n        return this.state.Raw_Dat.map(\n          (\n            item // อัปเดตการเรียกใช้ข้อมูล\n          ) => (\n            <tr Align=\"Center\">\n              <td align=\"Center\">{item[\"Parameter\"]}</td>\n            </tr>\n          )\n        );\n      }\n    }\n  };\n\n  doGetDataML = async () => {\n    let result = await httpClient.get(\n      server.MOTORML3_URL +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.KPOV +\n        \"/\" +\n        this.state.KPIV1\n    );\n\n    this.setState({\n      data: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  getModel = async () => {\n    const response = await httpClient.get(server.MODELML3_URL);\n    const options = response.data.result.map((d) => ({\n      label: d.Model,\n      value: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getProductionline = async () => {\n    const response = await httpClient.get(\n      server.LINEML3_URL + \"/\" + this.state.model\n    );\n    const options = response.data.result.map((d) => ({\n      label: d.Line,\n      value: d.Line,\n    }));\n    this.setState({ listProductionline: options });\n  };\n\n  getKPOV = async () => {\n    const response = await httpClient.get(server.PARAMML3_URL);\n    const options = response.data.result.map((d) => ({\n      label: d.Parameter,\n      value: d.Parameter,\n    }));\n    this.setState({ listKPOV: options });\n  };\n\n  getKPIV1 = async () => {\n    const response = await httpClient.get(server.PARAMML3_URL);\n    const options = response.data.result.map((d) => ({\n      label: d.Parameter,\n      value: d.Parameter,\n    }));\n    this.setState({ listKPIV1: options });\n  };\n  handleChange = async (event) => {\n    const Newevent = Object.keys(event).map((key) => event[key].label);\n    const json_string = JSON.stringify(Newevent);\n    this.setState({ KPIV1: json_string });\n    this.setState({ optionSelected: event });\n    console.log(Newevent);\n    console.log(json_string);\n    console.log(this.state.KPIV1);\n  };\n\n  HandleClickSuccess() {\n    Swal.fire({\n      icon: \"success\",\n      title: \"Success\",\n      type: \"success\",\n      text: \"Please click CSV download to proceed.\",\n    });\n  }\n  handleReset = () => {\n    this.setState({\n      itemvalues: [{}],\n    });\n  };\n  handleSelectAll = (selectedOptions) => {\n    const Newevent = Object.keys(selectedOptions).map(\n      (key) => selectedOptions[key].label\n    );\n    const json_string = JSON.stringify(Newevent);\n    if (selectedOptions.length === this.state.listKPIV1.length) {\n      this.setState({\n        optionSelected: selectedOptions,\n        selectAll: true,\n        KPIV1: json_string,\n      });\n    } else {\n      this.setState({ optionSelected: selectedOptions, selectAll: false });\n    }\n  };\n\n  render() {\n    console.log(this.state.KPIV1);\n\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 50 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Continuous KPIVs</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Continuous KPIVs</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n        </div>\n        <div className=\"content\" style={{ paddingTop: 10 }}>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Continuous KPIVs</label>\n                    </h3>\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-1\"></div>\n                      <div className=\"col-2\">\n                        <h5>Global ranking error :</h5>\n                      </div>\n                      <div className=\"col-1\"></div>\n                      <div className=\"col-1\">\n                        <h5>± 2</h5>\n                      </div>\n                      {/* <div className=\"col-1\"></div> */}\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-1\"></div>\n                      <div className=\"col-2\">\n                        <h5>number of significant KPIVs :</h5>\n                      </div>\n                      <div className=\"col-1\"></div>\n                      <div className=\"col-1\">\n                        <h5>6 ± 1</h5>\n                      </div>\n                      {/* <div className=\"col-1\"></div> */}\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-1\"></div>\n                      <div className=\"col-3\" style={{ color: \"green\" }}>\n                        <h5>Ranking results are reliable </h5>\n                      </div>\n                      {/* <div className=\"col-1\"></div> */}\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-1\"></div>\n                      <div className=\"col-2\">\n                        <h5>Ranking the continuous KPIVs</h5>\n                      </div>\n                      {/* <div className=\"col-1\"></div> */}\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-2\"></div>\n                      <div class=\"content\" style={{ marginTop: 30 }}>\n                        <div class=\"container-fluid\">\n                          <div className=\"card card-primary\">\n                            <div className=\"col-12\">\n                              {/* /.card-header */}\n                              <div\n                                className=\"card-body table-responsive p-0\"\n                                style={{\n                                  height: 500,\n                                  position: \"relative\",\n                                  zIndex: 0,\n                                }}\n                              >\n                                <table className=\"table table-head-fixed text-nowrap table-hover\">\n                                  <thead>\n                                    <tr Align=\"center\">\n                                      <th width=\"400\">KPIVname</th>\n                                      <th width=\"400\">Ranking error</th>\n                                    </tr>\n                                  </thead>                                  \n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {/* <div className=\"col-1\"></div> */}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content\" style={{ paddingTop: 10 }}>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Categorical KPIV </label>\n                    </h3>\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-1\"></div>\n                      <div className=\"col-2\">\n                        <h5>Ranking of the categorical KPIVs</h5>\n                      </div>\n                      {/* <div className=\"col-1\"></div> */}\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-2\"></div>\n                      <div class=\"content\" style={{ marginTop: 30 }}>\n                        <div class=\"container-fluid\">\n                          <div className=\"card card-primary\">\n                            <div className=\"col-12\">\n                              {/* /.card-header */}\n                              <div\n                                className=\"card-body table-responsive p-0\"\n                                style={{\n                                  height: 300,\n                                  position: \"relative\",\n                                  zIndex: 0,\n                                }}\n                              >\n                                <table className=\"table table-head-fixed text-nowrap table-hover\">\n                                  <thead>\n                                    <tr Align=\"center\">\n                                      <th width=\"400\">A</th>\n                                    </tr>\n                                  </thead>\n\n                                  {/* <tbody>{this.renderreport2()}</tbody>                          */}\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {/* <div className=\"col-1\"></div> */}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default KPIVranking;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport { CheckboxGroup } from \"react-bootstrap\";\n\nclass MLRanking extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      //Motor\n      data: [],\n\n      // criteria\n      model: [],\n      productionline: [],\n      KPOV: [],\n      Table: [],\n      report1: [],\n\n      KPIV1: \"blank\",\n\n      startDate: moment().add(\"days\", -89).format(\"yyyy-MM-DD\"),\n      finishDate: moment().add(\"days\", -1).format(\"yyyy-MM-DD\"),\n\n      // criteria options\n      listModel: [],\n      listKPOV: [],\n      listKPIV1: [],\n\n      listProductionline: [],\n\n      optionSelected: null,\n      isDisable: false,\n      isDisableDays: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    this.getModel();\n    this.getKPOV();\n    this.getKPIV1();\n    this.getProductionline();\n  };\n\n  doGetTABLEML = async () => {\n    const result = await httpClient.get(\n      server.TABLEML3_URL + \"/\" + this.state.KPIV1\n    );\n    let rawData = result.data.result; // อัปเดตการเรียกใช้ข้อมูล\n    console.log(rawData);\n    for (let i = 0; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report1: result.data.result, // อัปเดตการเรียกใช้ข้อมูล\n      isDisable: false,\n    });\n  };\n\n  renderreport1 = () => {\n    if (this.state.Raw_Dat != null) {\n      // อัปเดตการเรียกใช้ข้อมูล\n      if (this.state.Raw_Dat.length > 0) {\n        // อัปเดตการเรียกใช้ข้อมูล\n        return this.state.Raw_Dat.map(\n          (\n            item // อัปเดตการเรียกใช้ข้อมูล\n          ) => (\n            <tr Align=\"Center\">\n              <td align=\"Center\">{item[\"Parameter\"]}</td>\n            </tr>\n          )\n        );\n      }\n    }\n  };\n\n  doGetDataML = async () => {\n    let result = await httpClient.get(\n      server.MOTORML3_URL +\n        \"/\" +\n        this.state.startDate +\n        \"/\" +\n        this.state.finishDate +\n        \"/\" +\n        this.state.model +\n        \"/\" +\n        this.state.productionline[0].label +\n        \"/\" +\n        this.state.KPOV +\n        \"/\" +\n        this.state.KPIV1\n    );\n\n    this.setState({\n      data: result.data.result,\n      isDisable: false,\n    });\n  };\n\n  getModel = async () => {\n    const response = await httpClient.get(server.MODELML3_URL);\n    const options = response.data.result.map((d) => ({\n      label: d.Model,\n      value: d.Model,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getProductionline = async () => {\n    const response = await httpClient.get(\n      server.LINEML3_URL + \"/\" + this.state.model\n    );\n    const options = response.data.result.map((d) => ({\n      label: d.Line,\n      value: d.Line,\n    }));\n    this.setState({ listProductionline: options });\n  };\n\n  getKPOV = async () => {\n    const response = await httpClient.get(server.PARAMML3_URL);\n    const options = response.data.result.map((d) => ({\n      label: d.Parameter,\n      value: d.Parameter,\n    }));\n    this.setState({ listKPOV: options });\n  };\n\n  getKPIV1 = async () => {\n    const response = await httpClient.get(server.PARAMML3_URL);\n    const options = response.data.result.map((d) => ({\n      label: d.Parameter,\n      value: d.Parameter,\n    }));\n    this.setState({ listKPIV1: options });\n  };\n  handleChange = async (event) => {\n    const Newevent = Object.keys(event).map((key) => event[key].label);\n    const json_string = JSON.stringify(Newevent);\n    this.setState({ KPIV1: json_string });\n    this.setState({ optionSelected: event });\n    console.log(Newevent);\n    console.log(json_string);\n    console.log(this.state.KPIV1);\n  };\n\n  HandleClickSuccess() {\n    Swal.fire({\n      icon: \"success\",\n      title: \"Success\",\n      type: \"success\",\n      text: \"Please click CSV download to proceed.\",\n    });\n  }\n  handleReset = () => {\n    this.setState({\n      itemvalues: [{}],\n    });\n  };\n  \n  handleSelectAll = (selectedOptions) => {\n    const Newevent = Object.keys(selectedOptions).map(\n      (key) => selectedOptions[key].label\n    );\n    const json_string = JSON.stringify(Newevent);\n    if (selectedOptions.length === this.state.listKPIV1.length) {\n      this.setState({\n        optionSelected: selectedOptions,\n        selectAll: true,\n        KPIV1: json_string,\n      });\n    } else {\n      this.setState({ optionSelected: selectedOptions, selectAll: false });\n    }\n  };\n\n  render() {\n    console.log(this.state.KPIV1);\n\n    return (\n      <div class=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Alternative KPIV ranking</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Alternative KPIV ranking</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            {/* /.container-fluid */}\n          </section>\n        </div>\n        <div className=\"content\" style={{ paddingTop: 10 }}>\n          <div class=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card card-primary card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <label>Ranking KPIV</label>\n                    </h3>\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      {/* //Select Critiria \"Model\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Model</label>\n                          <Select\n                            options={this.state.listModel}\n                            onChange={async (e) => {\n                              await this.setState({ model: e.label });\n                              await this.getProductionline();\n                              await this.getKPOV();\n                              await this.getKPIV1();\n                              await this.setState({\n                                productionline: [\n                                  { label: \"Select Production Line\" },\n                                ],\n                              });\n                            }}\n                            placeholder=\"Select Model\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Production line</label>\n                          <Select\n                            options={this.state.listProductionline}\n                            value={this.state.productionline[0]}\n                            onChange={async (e) => {\n                              await this.setState({ productionline: [] });\n                              this.state.productionline.push({\n                                label: e.label,\n                              });\n                            }}\n                            // type=\"text\"\n                            // className=\"form-control\"\n                            placeholder=\"Select Production Line\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Select Date */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Start Date</label>\n                          <input\n                            value={this.state.startDate}\n                            onChange={(e) => {\n                              this.setState({ startDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Select Start Date\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Finish Date</label>\n                          <input\n                            value={this.state.finishDate}\n                            onChange={(e) => {\n                              this.setState({ finishDate: e.target.value });\n                            }}\n                            type=\"date\"\n                            className=\"form-control\"\n                          />\n                        </div>\n                      </div>\n                      {/* //Select Critiria \"KPIV\" */}\n                      <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                          <label>Select Table</label>\n                          <Select\n                          options={this.state.listTable}\n                          onChange={async (e) => {\n                            await this.setState({ Table: e.label });\n                          }}\n                          placeholder=\"Select Parameter\"                       \n                          />                                                \n                        </div>                     \n                      </div> \n\n\n                      <div className=\"col-1\"></div>\n                      <div className=\"col-md-2\">\n                        <button\n                          disabled={this.state.isDisable}\n                          // type=\"button\"\n                          // className=\"btn btn-info btn-flat\"\n                          onClick={(e) => {\n                            console.log(\"Transfer KPIVs button clicked\");\n                            this.setState({ isDisable: true });\n                            // this.doGetDataReport();\n                            Swal.fire({\n                              icon: \"info\",\n                              title: \"Loading Data\",\n                              timer: 120000,\n                              allowOutsideClick: false,\n                              didOpen: async () => {\n                                Swal.showLoading();\n                                await this.doGetTABLEML();\n                                Swal.close();\n                              },\n                            }).then(() => {\n                              if (this.state.Raw_Dat.length > 0) {\n                                if (\n                                  this.state.Raw_Dat[0].Parameter.length > 0\n                                ) {\n                                  Swal.fire({\n                                    icon: \"success\",\n                                    title: \"Success\",\n                                    text: \"Data has been loaded successfully\",\n                                  });\n                                } else if (\n                                  this.state.Raw_Dat[0].Parameter.length == 0\n                                ) {\n                                  Swal.fire({\n                                    icon: \"error\",\n                                    title: \"No production data\",\n                                    text: \"Please select other date\",\n                                  });\n                                }\n                              } else {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            });\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Transfer KPIVs\n                        </button>\n                      </div>\n                      <div class=\"content\" style={{ marginTop: 30 }}>\n                        <div class=\"container-fluid\">\n                          <div className=\"card card-primary\">\n                            <div className=\"col-12\">\n                              {/* /.card-header */}\n                              <div\n                                className=\"card-body table-responsive p-0\"\n                                style={{\n                                  height: 300,\n                                  position: \"relative\",\n                                  zIndex: 0,\n                                }}\n                              >\n                                <table className=\"table table-head-fixed text-nowrap table-hover\">\n                                  <thead>\n                                    <tr Align=\"center\">\n                                      <th width=\"500\">Parameter</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>{this.renderreport1()}</tbody>\n                                  {/* <tbody>{this.renderreport2()}</tbody>                          */}\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-12\">\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label> Select KPOV</label>\n                            <Select\n                              options={this.state.listKPOV}\n                              onChange={async (e) => {\n                                await this.setState({ KPOV: e.label });\n                              }}\n                              placeholder=\"Select Parameter\"\n                            />\n                          </div>\n                        </div>\n\n                        <div className=\"col-md-3\">\n                          <button\n                            disabled={this.state.isDisable}\n                            onClick={(e) => {\n                              this.setState({ isDisable: true });\n                              Swal.fire({\n                                icon: \"info\",\n                                title: \"Loading Data\",\n                                timer: 6000000,\n                                allowOutsideClick: false,\n                                didOpen: async () => {\n                                  Swal.showLoading();\n                                  await this.doGetDataML();\n                                  Swal.close();\n                                },\n                              }).then(() => {\n                                if (this.doGetDataML !== \"\") {\n                                  Swal.fire({\n                                    icon: \"success\",\n                                    title: \"Success\",\n                                    type: \"success\",\n                                    text: \"Please click CSV download to proceed\",\n                                  });\n                                } else {\n                                  Swal.fire({\n                                    icon: \"error\",\n                                    title:\n                                      \"Data loading has encountered some error, please try again\",\n                                  });\n                                }\n                              });\n                            }}\n                            type=\"submit\"\n                            className=\"btn btn-primary\"\n                            style={{ marginTop: 5 }}\n                          >\n                            Determine Ranking\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MLRanking;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport { Bar } from 'react-chartjs-2';\n\nclass Auto_machine_alarm_history_Month extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      year_Error: [],\n      Table: [],\n      EMP: [],\n      report: [],\n      reportGraph: [],\n      xAxis: [],\n      yAxis1: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n      Table: [],\n      Line: [],\n      Raw_Dat: [],\n\n      startDate: moment().format(\"MM\"),//moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n  \n      listTable: [],\n      listLine: [],\n      listModel: [],\n      listCode: [],\n      listyear_Error:[],\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getTable();\n    await this.getLine();\n    await this.getYear();\n  };\n  doGetDataReport = async () => {\n    const result = await httpClient.get(\n      server.MONTH_MC_ERROR_URL +\n        \"/\" +\n        this.state.Table +\n        \"/\" +\n        this.state.Line[0].label +\n        \"/\" +\n        this.state.year_Error[0].label\n\n    );\n    console.log(\"this.state.year_Error\",this.state.year_Error);\n    let xAxis = [];\n\n    for (let index = 0; index < result.data.resultGraph.length; index++) {\n      const item = result.data.resultGraph[index];\n      await xAxis.push(item.Date);\n    }\n\n    let PivotTable = result.data.PivotTable;\n\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n    console.log(rawData.length);\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n\n    this.setState({\n      report: result.data.result,\n      reportGraph: result.data.resultGraph,\n      xAxis,\n\n      PivotTable,\n\n      // series,\n\n      isDisable: false,\n    });\n    let seriesData = [];\n\n    for (let i = 0; i < PivotTable.length; i++) {\n      const series = {\n        name: PivotTable[i].name,\n        type: \"column\",\n        data: PivotTable[i].data,\n      };\n      seriesData.push(series);\n    }\n    \n    await this.setState({\n      // Existing code...\n      seriesY: seriesData,\n      options: {\n        chart: {\n          height: 350,\n          type: \"bar\",\n          stacked: true,\n        },\n        title: {\n          text: \"M/C error monitoring\",\n          align: \"center\",\n        },\n        xaxis: {\n          categories: xAxis,\n          text: \"Monthly\",\n          labels: {\n            style: {\n              fontSize: \"12px\",\n              fontWeight: 500,\n            },\n          },\n        },\n        yaxis: [\n          {\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: \"#ff1a1a\",\n            },\n            labels: {\n              style: {\n                colors: \"#ff1a1a\",\n              },\n            },\n            title: {\n              text: \"QTY\",\n              style: {\n                color: \"#ff1a1a\",\n              },\n            },\n            tooltip: {\n              enabled: true,\n            },\n          },\n        ],\n        colors: [\n          \"#1f77b4\",\n          \"#ff7f0e\",\n          \"#2ca02c\",\n          \"#d62728\",\n          \"#9467bd\",\n          \"#8c564b\",\n          \"#e377c2\",\n          \"#7f7f7f\",\n          \"#bcbd22\",\n          \"#17becf\",\n          \"#aec7e8\",\n          \"#ffbb78\",\n          \"#98df8a\",\n          \"#ff9896\",\n          \"#c5b0d5\",\n          \"#c49c94\",\n          \"#f7b6d2\",\n          \"#c7c7c7\",\n          \"#dbdb8d\",\n          \"#9edae5\",\n          \"#ff6600\",\n          \"#339933\",\n          \"#cc0000\",\n          \"#993366\",\n          \"#663300\",\n          \"#ff66cc\",\n          \"#666666\",\n          \"#cccc00\",\n          \"#00ccff\",\n          \"#ff3300\",\n          \"#66ff66\",\n          \"#990000\",\n          \"#996699\",\n          \"#996633\",\n          \"#ff99cc\",\n          \"#999999\",\n          \"#ffff00\",\n          \"#0099ff\"\n        ]\n        ,\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: \"topLeft\",\n            offsetY: 30,\n            offsetX: 0,\n          },\n        },\n        legend: {\n          horizontalAlign: \"center\",\n          offsetX: 40,\n        },\n        fill: {\n          opacity: 0.8,\n        },\n      \n     \n\n        plotOptions: {\n          bar: {\n            dataLabels: {\n              position: \"top\", // Adjust the position as needed\n              offsetY: -10, // Adjust the offset as needed\n            },\n          },\n        },\n        stroke: {\n          width: 2,\n          curve: \"smooth\",\n        },\n        markers: {\n          size: 4,\n          strokeColors: \"#fff\",\n          strokeWidth: 2,\n          hover: {\n            size: 7,\n          },\n   \n        },\n      },\n      // Rest of the code...\n    });\n    \n  };\n\n  getTable = async () => {\n    const array = await httpClient.get(server.MONTH_ERRORTable_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Table,\n    }));\n    this.setState({ listTable: options });\n  };\n\n  getLine = async () => {\n    const array = await httpClient.get(\n      server.MONTH_MC_ERROR_Line_URL + \"/\" + this.state.Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n  getYear = async () => {\n    const array = await httpClient.get(\n      server.MONTH_MC_ERROR_Year_URL + \"/\" + this.state.Table\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.year_Error,\n    }));\n    this.setState({ listyear_Error: options });\n  };\n\n  render() {\n    console.log(this.state.xAxis);\n    console.log(this.state.PivotTable);\n    console.log(this.state.report);\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Monthly Auto machine alarm history</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Monthly Auto machine alarm history</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"Model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <div></div>\n                        <label>Table</label>\n                        <Select\n                          options={this.state.listTable}\n                          onChange={async (e) => {\n                            await this.setState({ Table: e.label });\n                            await this.getLine();\n                            await this.getYear();\n                            await this.setState({\n                              Line: [\n                                { label: \"Select Line_No\" },\n                              ],\n                            });\n                          }}\n                          \n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Table\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"Type\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line_No</label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line[0]}\n                          onChange={async (e) => {\n                            await this.setState({ Line: [] });\n                            this.state.Line.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Line_No\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Year</label>\n                        <Select\n                          options={this.state.listyear_Error}\n                          value={this.state.year_Error[0]}\n                          onChange={async (e) => {\n                            await this.setState({ year_Error: [] });\n                            this.state.year_Error.push({ label: e.label });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select Year\"\n                        />\n                      </div>\n                    </div>\n\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={async (e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              try {\n                                await this.doGetDataReport();\n                                Swal.close();\n                                if (\n                                  this.state.reportGraph &&\n                                  Array.isArray(this.state.reportGraph) &&\n                                  this.state.reportGraph.length > 0\n                                ) {\n                                  if (\n                                    this.state.reportGraph[0] &&\n                                    Array.isArray(this.state.reportGraph[0]) &&\n                                    this.state.reportGraph[0].length > 0\n                                  ) {\n                                    Swal.fire({\n                                      icon: \"success\",\n                                      title: \"Success\",\n                                      text: \"Data has been loaded successfully\",\n                                    });\n                                  } else if (\n                                    this.state.reportGraph[0] &&\n                                    Array.isArray(this.state.reportGraph[0]) &&\n                                    this.state.reportGraph[0].length === null\n                                  ) {\n                                    Swal.fire({\n                                      icon: \"error\",\n                                      title: \"No production data\",\n                                      text: \"Please select another date\",\n                                    });\n                                  }\n                                } else {\n                                  Swal.fire({\n                                    icon: \"error\",\n                                    title: \"Data loading encountered an error, please try again\",\n                                  }).then(() => {\n                                    // รีเฟรชหน้าใหม่\n                                    window.location.reload();\n                                  });\n                                }\n                              } catch (error) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select another date\", // แสดงข้อความของ error เป็นข้อความใน Swal\n                                }).then(() => {\n                                  // รีเฟรชหน้าใหม่\n                                  window.location.reload();\n                                });\n                              }\n                            },\n                          });\n                        }}\n                        \n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"report.csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"content\">\n                <div class=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"card card-primary card-outline\">\n                        {/* Chart Title */}\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <i className=\"far fa-chart-bar\" />\n                            \n                          </h3>\n                        </div>\n\n                        {/* Insert Xbar Chart */}\n                        <div className=\"row\" style={{ width: \"100%\" }}>\n                          <div style={{ width: \"1%\" }}></div>\n                          <div\n                            className=\"card card-warning\"\n                            style={{ width: \"99%\" }}\n                          >\n                            <div className=\"card-body\">\n                              <div className=\"row\">\n                                <div style={{ width: \"100%\" }}>\n                                  <ReactApexChart\n                                    options={this.state.options}\n                                    series={this.state.seriesY}\n                                    type=\"bar\"\n                                    height={450}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Table*/}     \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Auto_machine_alarm_history_Month;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport moment from \"moment\";\n\nclass Engineer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      xAxis: [],\n      yAxis: [],\n      yAxis2: [],\n      //filter\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n    };\n  }\n\n  doGetData = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  componentDidMount = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  renderTableRow = () => {\n    return this.state.data.map((item) => (\n      <tr>\n        <td>{item.Date}</td>\n        <td>{item[\"%Yield\"]}</td>\n      </tr>\n    ));\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\" style={{ border: \"1px solid #e6f7ff\" }}>\n        <div className=\"content\" style={{ paddingTop: 80 }}>\n          {/* ... rest of your code ... */}\n\n          <div className=\"row\">\n            <ol className=\"breadcrumb float-sm-right\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"/Home\">\n                  <i className=\"fa fa-arrow-left\"></i> Home\n                </a>\n              </li>\n            </ol>\n            <div className=\"col-md-12\">\n              <div\n                className=\"card card-primary card-outline\"\n                style={{\n                  width: \"100\",\n                  height: \"200%\",\n                  backgroundColor: \"#e6f7ff\",\n                }}\n              >\n                <div className=\"col-sm-12\">\n                  <h2>Engineer</h2>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div\n                        className=\"card card-primary card-outline\"\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          border: \"2px solid #0073e6\", // Set border color to a darker blue\n                        }}\n                      >\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <h5>Traceability</h5>\n                          </h3>\n                        </div>\n                        <div className=\"card-body\">\n                          <li className=\"breadcrumb-item\">\n                            <a href=\"MasterItemNO\">Item No.Master</a>\n\n                            <li className=\"breadcrumb-item\">\n                              <a href=\"MasterSupplier\">Supplier data Master</a>\n\n                              <li className=\"breadcrumb-item\">\n                                <a href=\"MasterLine\">Line no. Master</a>\n                                <li className=\"breadcrumb-item\">\n                                  <a href=\"/Master_ml\">Master Specification</a>\n                                </li>\n                              </li>\n                            </li>\n                          </li>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div\n                        className=\"card card-primary card-outline\"\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          border: \"2px solid #0073e6\", // Set border color to a darker blue\n                        }}\n                      >\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <h5>Monitoring</h5>\n                          </h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\" style={{ paddingTop: 60 }}>\n                      <div\n                        className=\"card card-primary card-outline\"\n                        style={{\n                          width: \"100%\",\n                          height: \"300%\",\n                          border: \"2px solid #0073e6\", // Set border color to a darker blue\n                        }}\n                      >\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <h5>Report</h5>\n                          </h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Engineer;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport moment from \"moment\";\n\nclass Quality extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      xAxis: [],\n      yAxis: [],\n      yAxis2: [],\n      //filter\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n    };\n  }\n\n  doGetData = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  componentDidMount = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  renderTableRow = () => {\n    return this.state.data.map((item) => (\n      <tr>\n        <td>{item.Date}</td>\n        <td>{item[\"%Yield\"]}</td>\n      </tr>\n    ));\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\" style={{ border: \"1px solid #e6f7ff\" }}>\n        <div className=\"content\" style={{ paddingTop: 80 }}>\n          {/* ... rest of your code ... */}\n\n         \n            <div className=\"row\">\n            <ol className=\"breadcrumb float-sm-right\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"/Home\">\n                  <i className=\"fa fa-arrow-left\"></i> Home\n                </a>\n              </li>\n            </ol>\n              <div className=\"col-md-12\">\n                <div\n                  className=\"card card-primary card-outline\"\n                  style={{\n                    width: \"100%\",\n                    height: \"150%\",\n                    backgroundColor: \"#e6f7ff\",\n                  }}\n                >\n                  <div className=\"col-sm-12\">\n     \n                    <h2>Quality</h2>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div\n                        className=\"card card-primary card-outline\"\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          border: \"2px solid #0073e6\", // Set border color to a darker blue\n                        }}\n                      >\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <h5>Traceability</h5>\n                          </h3>\n                        </div>\n                        <div className=\"card-body\">\n                          <li className=\"breadcrumb-item\">\n                            <a href=\"/QAInspection\">\n                              QA by Model & QA by QA Number\n                            </a>\n                            <li className=\"breadcrumb-item\">\n                              <a href=\"/Rejection\">\n                                Reject by Model & Reject by QA Number\n                              </a>\n\n                              <li className=\"breadcrumb-item\">\n                                <a href=\"/monthlyQA\">Monthly QA Inspection</a>\n\n                                <li className=\"breadcrumb-item\">\n                                  <a href=\"/Trace_back_function_test\">\n                                    Trace back function test by MBA S/N\n                                  </a>\n\n                                  <li className=\"breadcrumb-item\">\n                                    <a href=\"/STACKHEIGHT\">\n                                      Static dimension SPC chart\n                                    </a>\n\n                                    <li className=\"breadcrumb-item\">\n                                      <a href=\"/MOTORDIM\">\n                                        Dynamic parallelism data SPC chart\n                                      </a>\n                                      <li className=\"breadrumb-item\">\n                                        <a href=\"/ROTOR\">\n                                          Rotor assembly SPC chart (He drive)\n                                        </a>\n                                        <li className=\"breadrumb-item\">\n                                          <a href=\"/MOTOREWMS\">\n                                            EWMS data SPC chart\n                                          </a>\n                                          <li className=\"breadrumb-item\">\n                                            <a href=\"/MOTORHIPOT\">\n                                              Hi-pot data SPC chart\n                                            </a>\n                                            <li className=\"breadrumb-item\">\n                                              <a href=\"/MOTORDIMAI\">\n                                                Ai-press data SPC chart\n                                              </a>\n                                            </li>\n                                            <li className=\"breadrumb-item\">\n                                              <a href=\"/trace_Dynamic\">\n                                              Trace back Dynamic\n                                              </a>\n                                            </li>\n                                          </li>\n                                        </li>\n                                      </li>\n                                    </li>\n                                  </li>\n                                </li>\n                              </li>\n                            </li>\n                          </li>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div\n                        className=\"card card-primary card-outline\"\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          border: \"2px solid #0073e6\", // Set border color to a darker blue\n                        }}\n                      >\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <h5>Monitoring</h5>\n                          </h3>\n                        </div>\n                        <div className=\"card-body\">\n                          <li className=\"breadcrumb-item\">\n                            <a href=\"/Product_hold_control\">\n                              Product hold control\n                            </a>\n\n                            <li className=\"breadcrumb-item\">\n                              <a href=\"/QA_lots_status\">QA lots status</a>\n                            </li>\n                          </li>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-6 \" style={{ paddingTop: 60 }}>\n                    <div\n                      className=\"card card-primary card-outline\"\n                      style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        border: \"2px solid #0073e6\", // Set border color to a darker blue\n                      }}\n                    >\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">\n                          <h5>Report</h5>\n                        </h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <li className=\"breadcrumb-item\">\n                          <a href=\"/Daily_LAR_by_Model\">Daily LAR by Model</a>\n                          <li className=\"breadcrumb-item\">\n                            <a href=\"/Monthly_LAR_report_all_Model\">\n                              Monthly LAR report all Model\n                            </a>\n                            <li className=\"breadcrumb-item\">\n                              <a href=\"/Monthly_LAR_report_by_Model\">\n                                Monthly LAR report by Model\n                              </a>\n                              <li className=\"breadcrumb-item\">\n                              <a href=\"Trace_back_shipment\">\n                                Trace back shipment\n                              </a>\n                              </li>\n                            </li>\n                          </li>\n                        </li>\n                      </div>\n                    </div>\n                  </div>\n                  </div>\n           \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n    );\n  }\n}\n\nexport default Quality;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport moment from \"moment\";\n\nclass Engineer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      xAxis: [],\n      yAxis: [],\n      yAxis2: [],\n      //filter\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n    };\n  }\n\n\n  render() {\n    return (\n      <div className=\"content-wrapper\" style={{ border: \"1px solid #e6f7ff\" }}>\n        <div className=\"content\" style={{ paddingTop: 80 }}>\n          {/* ... rest of your code ... */}\n\n\n            <div className=\"row\">\n            <ol className=\"breadcrumb float-sm-right\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"/Home\">\n                  <i className=\"fa fa-arrow-left\"></i> Home\n                </a>\n              </li>\n            </ol>\n              <div className=\"col-md-12\">\n                <div\n                  className=\"card card-primary card-outline\"\n                  style={{\n                    width: \"100%\",\n                    height: \"130%\",\n                    backgroundColor: \"#e6f7ff\",\n                  }}\n                >\n                  <div className=\"col-sm-12\">\n           \n                    <h2>Production</h2>\n\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <div\n                          className=\"card card-primary card-outline\"\n                          style={{\n                            width: \"100%\",\n                            height: \"100%\",\n                            border: \"2px solid #0073e6\", // Set border color to a darker blue\n                          }}\n                        >\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">\n                              <h5>Traceability</h5>\n                            </h3>\n                          </div>\n                          <div className=\"card-body\">\n                            <li className=\"breadcrumb-item\">\n                              <a href=\"trace_back_ng\">\n                                Trace back NG Dynamic Parallelism Tester\n                              </a>\n                            </li>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-6\">\n                        <div\n                          className=\"card card-primary card-outline\"\n                          style={{\n                            width: \"95%\",\n                            height: \"100%\",\n                            border: \"2px solid #0073e6\", // Set border color to a darker blue\n                          }}\n                        >\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">\n                              <h5>Monitoring</h5>\n                            </h3>\n                          </div>\n                          <div className=\"card-body\">\n                            <li className=\"breadcrumb-item\">\n                              <a href=\"http://10.120.122.10:2020\">\n                                Production data result\n                              </a>\n                            </li>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\" style={{ paddingTop: 60 }}>\n                      <div\n                        className=\"card card-primary card-outline\"\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          border: \"2px solid #0073e6\", // Set border color to a darker blue\n                        }}\n                      >\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <h5>Report</h5>\n                          </h3>\n                        </div>\n                        <div className=\"card-body\">\n                          <li className=\"breadcrumb-item\">\n                            <a href=\"/Operator_tracking_data\">\n                              Operator tracking data\n                            </a>\n                            <li className=\"breadcrumb-item\">\n                              <a href=\"/report_per_producion_team\">\n                                LAR report per Production team\n                              </a>\n                              <li className=\"breadcrumb-item\">\n                                <a href=\"/Daily_Report_Packing\">\n                                  Daily Report Packing\n                                </a>\n                                <li className=\"breadcrumb-item\">\n                                  <a href=\"/Output_Final_Before_QA\">\n                                    Daily Output Final ass’y (Before QA)\n                                  </a>\n                                  <li className=\"breadcrumb-item\">\n                                    <a href=\"/Output_Final_after_QA\">\n                                      Daily Output Final ass’y (After QA)\n                                    </a>\n                                    <li className=\"breadcrumb-item\">\n                                      <a href=\"/Production_hold_record\">\n                                        Production hold record\n                                      </a>\n                                      <li className=\"breadcrumb-item\">\n                                        <a href=\"/Packed_half_pallet\">\n                                          Packing Pallet in progress\n                                        </a>\n                                        <li className=\"breadcrumb-item\">\n                                          <a href=\"/Request_label_printing_report\">\n                                            Request label printing report\n                                          </a>\n                                          <li className=\"breadcrumb-item\">\n                                            <a href=\"http://wbp2.bp.minebea.local/Domino_SpindleDrawing/Realtime_Dashboard/Realtime_Monitoring.xlsm\">\n                                              Download Production result\n                                              dashboard\n                                            </a>\n                                          </li>\n                                        </li>\n                                      </li>\n                                    </li>\n                                  </li>\n                                </li>\n                              </li>\n                            </li>\n                          </li>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n \n    );\n  }\n}\n\nexport default Engineer;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport moment from \"moment\";\n\nclass Data_Analysis extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      xAxis: [],\n      yAxis: [],\n      yAxis2: [],\n      //filter\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n    };\n  }\n\n  doGetData = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  componentDidMount = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  renderTableRow = () => {\n    return this.state.data.map((item) => (\n      <tr>\n        <td>{item.Date}</td>\n        <td>{item[\"%Yield\"]}</td>\n      </tr>\n    ));\n  };\n\n  render() {\n    return (\n      <div\n        className=\"content-wrapper\"\n        style={{ border: \"1px solid #e6f7ff\" }}\n      >\n        <div className=\"content\" style={{ paddingTop: 80 }}>\n          {/* ... rest of your code ... */}\n\n          <div className=\"row\">\n            <ol className=\"breadcrumb float-sm-right\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"/Home\">\n                  <i className=\"fa fa-arrow-left\"></i> Home\n                </a>\n              </li>\n            </ol>\n\n            <div className=\"col-md-12\">\n              <div\n                className=\"card card-primary card-outline\"\n                style={{\n                  width: \"100%\",\n                  height: \"350%\",\n                  backgroundColor: \"#e6f7ff\",\n                }}\n              >\n                <div className=\"col-sm-12\">\n                  <h2>Data Analysis</h2>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div\n                        className=\"card card-primary card-outline\"\n                        style={{\n                          width: \"200%\",\n                          height: \"100%\",\n                          border: \"2px solid #0073e6\", // Set border color to a darker blue\n                        }}\n                      >\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\"></h3>\n                        </div>\n                        <div className=\"card-body\">\n                          <li className=\"breadcrumb-item\">\n                            <a href=\"http://10.120.122.28:2012/ML\">\n                              Associate Rule Mining\n                            </a>\n\n                            <li className=\"breadcrumb-item\">\n                              <a href=\"MLRanking\">Alternative KPIV ranking</a>\n                              <li className=\"breadcrumb-item\">\n                                <a href=\"http://10.120.122.28:2012/MLjapan\">\n                                  Exploratory data analysis (EDA)\n                                </a>\n                              </li>\n                            </li>\n                          </li>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Data_Analysis;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport moment from \"moment\";\n\nclass Engineer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      xAxis: [],\n      yAxis: [],\n      yAxis2: [],\n      //filter\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n    };\n  }\n\n  doGetData = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  componentDidMount = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  renderTableRow = () => {\n    return this.state.data.map((item) => (\n      <tr>\n        <td>{item.Date}</td>\n        <td>{item[\"%Yield\"]}</td>\n      </tr>\n    ));\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\" style={{ border: \"1px solid #e6f7ff\" }}>\n        <div className=\"content\" style={{ paddingTop: 80 }}>\n          {/* ... rest of your code ... */}\n\n        \n            <div className=\"row\">\n            <ol className=\"breadcrumb float-sm-right\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"/Home\">\n                  <i className=\"fa fa-arrow-left\"></i> Home\n                </a>\n              </li>\n            </ol>\n              <div className=\"col-md-12\">\n                <div\n                  className=\"card card-primary card-outline\"\n                  style={{\n                    width: \"100%\",\n                    height: \"200%\",\n                    backgroundColor: \"#e6f7ff\",\n                  }}\n                >\n                  <div className=\"col-sm-12\">\n             \n                    <h2>PCMC</h2>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <div\n                          className=\"card card-primary card-outline\"\n                          style={{\n                            width: \"100%\",\n                            height: \"100%\",\n                            border: \"2px solid #0073e6\", // Set border color to a darker blue\n                          }}\n                        >\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">\n                              <h5>Traceability</h5>\n                            </h3>\n                          </div>\n                          <div className=\"card-body\">\n               \n\n                              <li className=\"breadcrumb-item\">\n                                <a href=\"/Vrecode\">\n                                  {\" \"}\n                                  Trace back component based on production data\n                                </a>\n                              </li>\n                        \n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-6\">\n                        <div\n                          className=\"card card-primary card-outline\"\n                          style={{\n                            width: \"100%\",\n                            height: \"100%\",\n                            border: \"2px solid #0073e6\", // Set border color to a darker blue\n                          }}\n                        >\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">\n                              <h5>Monitoring</h5>\n                            </h3>\n                          </div>\n                          <div className=\"card-body\">\n                            {\" \"}\n                            <li className=\"breadcrumb-item\">\n                              <a href=\"Shipmentdata\">Shipment status</a>\n                            </li>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\" style={{ paddingTop: 60 }}>\n                      <div\n                        className=\"card card-primary card-outline\"\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          border: \"2px solid #0073e6\", // Set border color to a darker blue\n                        }}\n                      >\n                        <div className=\"card-header\">\n                          <h3 className=\"card-title\">\n                            <h5>Report</h5>\n                          </h3>\n                        </div>\n                        <div className=\"card-body\">\n                          <li className=\"breadcrumb-item\">\n                            <a href=\"/For_Inspection_tags_status\">\n                              For Inspection tags status\n                            </a>\n                            <li className=\"breadcrumb-item\">\n                              <a href=\"/Daily_store_issue\">\n                                {\" \"}\n                                Daily Store Issue\n                              </a>\n                            </li>\n                          </li>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n  \n    );\n  }\n}\n\nexport default Engineer;\n","import React, { Component } from \"react\";\nimport { server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport moment from \"moment\";\n\nclass PE_MM extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      xAxis: [],\n      yAxis: [],\n      yAxis2: [],\n      //filter\n      startDate: moment().add(\"days\", -30).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"),\n    };\n  }\n\n  doGetData = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  componentDidMount = async () => {\n    console.log(this.state.startDate);\n    console.log(this.state.finishDate);\n    let result = await httpClient.get(\n      server.YIELD_URL +\n        \"/\" +\n        this.state.startDate +\n        \"&\" +\n        this.state.finishDate\n    );\n    console.log(result.data.result);\n    let xAxis = [];\n    let yAxis = [];\n    let yAxis2 = [];\n\n    for (let index = 0; index < result.data.result.length; index++) {\n      const item = result.data.result[index];\n      await xAxis.push(item.Date);\n      await yAxis.push(item[\"%Yield\"]);\n      await yAxis2.push(90);\n    }\n\n    this.setState({ data: result.data.result, xAxis, yAxis, yAxis2 });\n  };\n\n  renderTableRow = () => {\n    return this.state.data.map((item) => (\n      <tr>\n        <td>{item.Date}</td>\n        <td>{item[\"%Yield\"]}</td>\n      </tr>\n    ));\n  };\n\n  render() {\n    return (\n      <div className=\"content-wrapper\" style={{ border: \"1px solid #e6f7ff\" }}>\n      <div className=\"content\" style={{ paddingTop: 80 }}>\n        {/* ... rest of your code ... */}\n\n     \n          <div className=\"row\">\n          <ol className=\"breadcrumb float-sm-right\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"/Home\">\n                  <i className=\"fa fa-arrow-left\"></i> Home\n                </a>\n              </li>\n            </ol>\n            <div className=\"col-md-12\">\n              <div\n                className=\"card card-primary card-outline\"\n                style={{\n                  width: \"100%\",\n                  height: \"200%\",\n                  backgroundColor: \"#e6f7ff\",\n                }}\n              >\n              <div className=\"col-sm-12\">\n         \n                <h2>PE&MM</h2>\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div\n                    className=\"card card-primary card-outline\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      border: \"2px solid #0073e6\", // Set border color to a darker blue\n                    }}\n                  >\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <h5>Traceability</h5>\n                      </h3>\n                    </div>\n                    <div className=\"card-body\">\n                      {/* <li className=\"breadcrumb-item\">\n                        <a href=\"/\"> </a>\n                        <li className=\"breadcrumb-item\"></li>\n                      </li> */}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div\n                    className=\"card card-primary card-outline\"\n                    style={{\n                      width: \"95%\",\n                      height: \"100%\",\n                      border: \"2px solid #0073e6\", // Set border color to a darker blue\n                    }}\n                  >\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">\n                        <h5>Monitoring</h5>\n                      </h3>\n                    </div>\n                    <div className=\"card-body\">\n                      {/* <li className=\"breadcrumb-item\">\n                        <a href=\"/\"></a>\n                      </li> */}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-6 \" style={{ paddingTop: 60 }}>\n                <div\n                  className=\"card card-primary card-outline\"\n                  style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    border: \"2px solid #0073e6\", // Set border color to a darker blue\n                  }}\n                >\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">\n                      <h5>Report</h5>\n                    </h3>\n                  </div>\n                  <div className=\"card-body\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Auto_machine_alarm_history\">\n                       Daily Auto machine alarm history\n                      </a>\n                      <li className=\"breadcrumb-item\">\n                      <a href=\"/Auto_machine_alarm_history_Month\">\n                      Monthly Auto machine alarm history\n                      </a>\n                    </li>\n                    </li>\n\n                    \n                  </div>\n                </div>\n              </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n        </div>\n\n    );\n  }\n}\n\nexport default PE_MM;\n","import React, { Component } from \"react\";\nimport { key, server, YES } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport { Link } from \"react-router-dom\";\n\nclass Master_ml extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      model: [],\n      Parameter: [],\n      report: [],\n      QANumber: \"\",\n      report2: [],\n      id: [],\n      Raw_Dat2: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n\n      listModel: [],\n      listParameter: [],\n      report: [], // Initialize with your data\n      optionSelected: null,\n      isDisable: false,\n\n      empNumber: \"\",\n      password: \"\",\n      pwType: \"password\",\n      pwIcon: \"fas fa-eye\",\n      showHourly: false,\n      show: false,\n      isLoggedIn: false, // Add this state variable\n      report: [], // Add a sample empty report, you may initialize it as needed\n      editingItemId: null, // Add other necessary state variables\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getModel();\n    await this.getParameter();\n  };\n\n  // report with select model,date,type\n  doGetDataReport = async () => {\n    // Check if the model label is \"**ALL**\" and set it to an empty string if true\n    const modelLabel = this.state.model.label === \"\" ? \"\" : this.state.model.label;\n  \n    const result = await httpClient.get(\n      server.REPORT_Master_ML_URL +\n        \"/\" +\n        modelLabel +\n        \"/\" +\n        this.state.Parameter[0].label\n    );\n  \n    console.log(\"doGetDataReport_result\", result);\n    let rawData = result.data.listRawData;\n    console.log(rawData);\n  \n    // Flatten the rawData array\n    for (let i = 1; i < rawData.length; i++) {\n      rawData[0].push(...rawData[i]);\n    }\n  \n    // Set Raw_Dat state with the flattened array\n    this.setState({ Raw_Dat: rawData[0] });\n    console.log(this.state.Raw_Dat);\n  \n    // Set report and isDisable states\n    this.setState({\n      report: result.data.result,\n      isDisable: false,\n    });\n  };\n  \n\n  handleInputChange = (e, id, field) => {\n    const { report } = this.state;\n    const updatedReport = report.map((item) => {\n      if (item.id === id) {\n        return { ...item, [field]: e.target.value };\n      }\n      return item;\n    });\n    this.setState({ report: updatedReport });\n  };\n\n  \n  handleUpdateClick = async (id, updatedItem) => {\n    try {\n      // Show a confirmation dialog using Swal\n      const confirmResult = await Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You are about to update the data.\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, update it!\",\n      });\n\n      // If the user clicks \"Yes\", proceed with the update\n      if (confirmResult.isConfirmed) {\n        console.log(\"id\", id);\n        const empNumber = this.state.empNumber;\n\n        // Make a GET request to retrieve the update URL\n        const updateUrl = await httpClient.get(\n          server.UPDATE_Master_URL +\n            \"/\" +\n            id +\n            \"/\" +\n            updatedItem.Fullname +\n            \"/\" +\n            updatedItem.Model +\n            \"/\" +\n            updatedItem.Parameter +\n            \"/\" +\n            updatedItem.LSL +\n            \"/\" +\n            updatedItem.CL +\n            \"/\" +\n            updatedItem.USL +\n            \"/\" +\n            updatedItem.Part +\n            \"/\" +\n            updatedItem.Machine +\n            \"/\" +\n            empNumber\n        );\n        console.log(\"updateUrl\", updateUrl);\n\n        // Extract the URL from the config property\n        const url = updateUrl.config.url;\n\n        // Make a PUT request to update the data\n        const putResponse = await fetch(url, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(updatedItem),\n        });\n\n        // Retrieve the old values from the report state\n        const oldValues = this.state.report.find((item) => item.id === id);\n\n        // Construct a message with the old and new values\n\n        const modelValue = updatedItem.Model;\n        console.log(\"Model:\", modelValue);\n\n        console.log(\"updateUrl\", updateUrl);\n        // Log the response from the server\n        console.log(\"putResponse\", putResponse);\n\n        // Show the update message in Swal\n        Swal.fire({\n          icon: \"success\",\n          title: \"Success\",\n          text: \"After the update is complete\",\n          customClass: {\n            container: \"custom-swal-container\",\n          },\n        });\n\n        // Optionally, you can update the UI to reflect the changes\n        // For example, you can update the state or trigger a data refresh\n        this.doGetDataReport();\n      }\n    } catch (error) {\n      // Log any errors that occur during the update process\n      console.error(\"Error:\", error);\n      // Optionally, provide user feedback or log errors more systematically\n      Swal.fire({\n        icon: \"error\",\n        title: \"Error\",\n        text: \"An error occurred during the update.\",\n        customClass: {\n          container: \"custom-swal-container\",\n        },\n      });\n    }\n    console.log(\"updatedItem\", updatedItem);\n  };\n\n  handleEditClick = (itemId) => {\n    this.setState({ editingItemId: itemId });\n  };\n\n  doLogin = async () => {\n    try {\n      let result = await httpClient.post(\n        server.LOGIN_api_Master_ML_URL,\n        this.state\n      );\n      console.log(result.data);\n\n      if (result.data.login_result === \"pass\") {\n        const { empNumber } = result.data.resultlogin;\n        console.log(empNumber);\n        this.handleSuccessfulLogin(result.data);\n        this.setState({ isLoggedIn: true, empNumber: empNumber }); // Update state with empNumber\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"ID/Password is incorrect!!\",\n        });\n      }\n    } catch (error) {\n      console.error(\"An error occurred during login:\", error);\n      // Handle error, show an error message, or redirect to an error page\n    }\n  };\n\n  handleSuccessfulLogin = (resultData) => {\n    const { jwt, resultlogin } = resultData;\n\n    // Store JWT token in localStorage\n    localStorage.setItem(\"JWT_TOKEN\", jwt);\n\n    // Store user information in localStorage or state, depending on your application needs\n    localStorage.setItem(\"USER_ID\", resultlogin.empNumber);\n    localStorage.setItem(\"USER_LEVEL\", resultlogin.levelUser);\n\n    // Redirect to the desired page (e.g., \"/Master_ml\")\n    this.props.history.push(\"/Master_ml\");\n  };\n\n  renderReport = () => {\n    const { report, editingItemId } = this.state;\n    if (report != null && report.length > 0) {\n      return report.map((item) => (\n        <tr key={item.id}>\n          <td>{item.id}</td>\n          <td>{item.Fullname}</td>\n          <td>{item.Model}</td>\n          <td>{item.Parameter}</td>\n          <td>\n            <input\n              type=\"text\"\n              value={item.LSL}\n              onChange={(e) => this.handleInputChange(e, item.id, \"LSL\")}\n              disabled={editingItemId !== item.id}\n              style={{ width: \"70px\" }}\n            />\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              value={item.CL}\n              onChange={(e) => this.handleInputChange(e, item.id, \"CL\")}\n              disabled={editingItemId !== item.id}\n              style={{ width: \"70px\" }}\n            />\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              value={item.USL}\n              onChange={(e) => this.handleInputChange(e, item.id, \"USL\")}\n              disabled={editingItemId !== item.id}\n              style={{ width: \"70px\" }}\n            />\n          </td>\n\n          <td>{item.Part}</td>\n          <td>{item.Machine}</td>\n          <td>{item.empNumber}</td>\n          <td>{item.updatedAt}</td>\n          {/* Repeat similar input fields for other properties */}\n          <td>\n            {editingItemId !== item.id ? (\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => this.handleEditClick(item.id)}\n              >\n                Edit\n              </button>\n            ) : (\n              <button\n                className=\"btn btn-success\"\n                onClick={() => this.handleUpdateClick(item.id, item)}\n              >\n                UPDATE\n              </button>\n            )}\n          </td>\n        </tr>\n      ));\n    } else {\n      return (\n        <tr>\n          <td colSpan=\"11\">No data available</td>\n        </tr>\n      );\n    }\n  };\n\n  getModel = async () => {\n    const array = await httpClient.get(server.MODELMasterURL);\n    const options = array.data.result.map((d) => ({\n      label: d.Model_group,\n    }));\n    this.setState({ listModel: options });\n  };\n\n  getParameter = async () => {\n    const array = await httpClient.get(server.Parameter_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Part,\n    }));\n    this.setState({ listParameter: options });\n  };\n\n  render() {\n    console.log(\"listParameter\", this.state.listParameter);\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Master Specification </h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Master Specification </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n        <div>\n          {/* ... (other components) */}\n          {this.state.isLoggedIn && (\n            <div>\n              <div class=\"container-fluid\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <div className=\"card card-primary card-outline\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">\n                          <label>Select Parameter</label>\n                        </h3>\n                      </div>\n\n                      <div className=\"card-body\">\n                        <div className=\"row\">\n                          {/* //Select Critiria \"Model\" */}\n                          <div className=\"col-md-2\">\n                            <div className=\"form-group\">\n                              <div></div>\n                              <label>Model group</label>\n                              <Select\n                                options={this.state.listModel}\n                                value={this.state.model}\n                                onChange={async (e) => {\n                                  await this.setState({ model: e });\n                                  await this.getParameter();\n                                  await this.setState({\n                                    Parameter: [{ label: \"Select Tester\" }],\n                                  });\n                                }}\n                                // type=\"text\"\n                                // className=\"form-control\"\n                                placeholder=\"Select Model\"\n                              />\n                            </div>\n                          </div>\n\n                          {/* //Select Critiria \"Type\" */}\n                          <div className=\"col-md-2\">\n                            <div className=\"form-group\">\n                              <label>Process</label>\n                              <Select\n                                options={this.state.listParameter}\n                                value={this.state.Parameter}\n                                onChange={async (e) => {\n                                  await this.setState({\n                                    Parameter: [{ label: e.label }],\n                                  });\n                                }}\n                                placeholder=\"Select Tester\"\n                              />\n                            </div>\n                          </div>\n\n                          {/* Submit button */}\n                          <div className=\"col-md-1\">\n                            <button\n                              disabled={this.state.isDisable}\n                              // type=\"button\"\n                              // className=\"btn btn-info btn-flat\"\n                              onClick={(e) => {\n                                this.setState({ QANumber: \"\" });\n                                this.setState({ report2: \"\" });\n                                this.setState({ isDisable: true });\n                                // this.doGetDataReport();\n                                Swal.fire({\n                                  icon: \"info\",\n                                  title: \"Loading Data\",\n                                  timer: 60000,\n                                  allowOutsideClick: false,\n                                  didOpen: async () => {\n                                    Swal.showLoading();\n                                    await this.doGetDataReport();\n                                    Swal.close();\n                                  },\n                                }).then(() => {\n                                  if (this.state.report.length > 0) {\n                                    if (this.state.report[0].id.length > 0) {\n                                      Swal.fire({\n                                        icon: \"success\",\n                                        title: \"Success\",\n                                        text: \"Data has been loaded successfully\",\n                                      });\n                                    } else if (\n                                      this.state.report[0].id.length == 0\n                                    ) {\n                                      Swal.fire({\n                                        icon: \"error\",\n                                        title: \"No production data\",\n                                        text: \"Please select other date\",\n                                      });\n                                    }\n                                  } else {\n                                    Swal.fire({\n                                      icon: \"error\",\n                                      title: \"No production data\",\n                                      text: \"Please select other date\",\n                                    });\n                                  }\n                                });\n                              }}\n                              type=\"submit\"\n                              className=\"btn btn-primary\"\n                              style={{ marginTop: 30 }}\n                            >\n                              Submit\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Table*/}\n                    <div class=\"content\">\n                      <div class=\"container-fluid\">\n                        <div className=\"card card-primary\">\n                          <div className=\"row\">\n                            <div className=\"col-12\">\n                              {/* /.card-header */}\n                              <div\n                                className=\"card-body table-responsive p-0\"\n                                style={{\n                                  height: 500,\n                                  zIndex: \"3\",\n                                  position: \"relative\",\n                                  zIndex: \"0\",\n                                }}\n                              >\n                                <table className=\" table  text-nowrap table-hover table-head-fixed\">\n                                  <thead>\n                                    <tr Align=\"Center\">\n                                      <th width=\"175\">ID</th>\n                                      <th width=\"175\">Model Name</th>\n                                      <th width=\"175\">Model Group</th>\n                                      <th width=\"175\">Parameter</th>\n                                      <th width=\"50\">LSL</th>\n                                      <th width=\"50\">CL</th>\n                                      <th width=\"50\">USL</th>\n                                      <th width=\"175\">Process</th>\n                                      <th width=\"175\">Machine</th>\n                                      <th width=\"175\">EmpNumber</th>\n                                      <th width=\"175\">updatedAt</th>\n                                      <th width=\"175\">Update</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>{this.renderReport()}</tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        {this.state.isLoggedIn !== true && (\n          <div className=\"login-page\">\n            <div className=\"login-box\">\n              <div className=\"login-logo\">\n                <a href=\"../../index2.html\">\n                  <b>MinebeaMitsumi</b>\n                </a>\n              </div>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  this.doLogin();\n                }}\n              >\n                <div className=\"card\">\n                  <div className=\"card-body login-card-body\">\n                    <p className=\"login-box-msg\">\n                      Sign in to start your session\n                    </p>\n\n                    {/* Input empNumber */}\n                    <div className=\"input-group mb-3\">\n                      <input //keyCode 13 is enter key\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Employee No.\"\n                        onChange={(e) => {\n                          this.setState({ empNumber: e.target.value });\n                        }}\n                        required\n                      />\n                      <div className=\"input-group-append\">\n                        <div className=\"input-group-text\">\n                          <span className=\"fas fa-user\" />\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Input password */}\n                    <div className=\"input-group mb-3\">\n                      <input\n                        type={this.state.pwType}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                        onChange={(e) => {\n                          this.setState({ password: e.target.value });\n                        }}\n                        required\n                      ></input>\n\n                      <div className=\"input-group-append\">\n                        <div className=\"input-group-text\">\n                          <i\n                            class={this.state.pwIcon}\n                            style={{\n                              color:\n                                this.state.pwIcon == \"fas fa-eye\"\n                                  ? \"dodgerBlue\"\n                                  : \"red\",\n                            }}\n                            onClick={() => {\n                              if (this.state.pwType == \"password\") {\n                                this.setState({ pwType: \"text\" });\n                                this.setState({ pwIcon: \"fas fa-eye-slash\" });\n                              } else {\n                                this.setState({ pwType: \"password\" });\n                                this.setState({ pwIcon: \"fas fa-eye\" });\n                              }\n                              console.log(this.state.pwIcon);\n                            }}\n                          ></i>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      {/* Remember Me Box */}\n                      <div className=\"col-8\">\n                        <div className=\"icheck-primary\">\n                          <input type=\"checkbox\" id=\"remember\" />\n                          <label htmlFor=\"remember\">Remember Me</label>\n                        </div>\n                      </div>\n                      {/* Sign In button*/}\n                      <div className=\"col-4\">\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-primary btn-block\"\n                          onClick={() => {\n                            this.setState({\n                              showHourly: false, // Don't show Hourly\n                              show: true, // Show Daily\n                            });\n                          }}\n                        >\n                          Sign In\n                        </button>\n                      </div>\n                      {/* /.col */}\n                    </div>\n\n                    {/* <p className=\"mb-0\">\n                      <Link to=\"/register_Master\" className=\"text-center\">\n                        Register a new membership\n                      </Link>\n                    </p> */}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n        ; ;\n      </div>\n    );\n  }\n}\n\nexport default Master_ml;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Daily_store_issue extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      model: { label: \"**ALL**\" },\n      ItemNo: [{ label: \"**ALL**\" }],\n      report: [],\n      reportGraph: [],\n      xAxis: [],\n      yAxis1: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"yyyy-MM-DD\"), //moment().add(\"days\", -6).format(\"yyyy-MM-DD\"),\n      finishDate: moment().format(\"yyyy-MM-DD\"), //moment().format(\"yyyy-MM-DD\"),\n      listItemNo: [],\n      listModelName: [],\n      listmodel: [],\n      headers: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getmodel();\n    await this.getItemNO();\n  };\n\n  doGetDataReport = async () => {\n    try {\n      const modelLabel =\n        this.state.model.label === \"**ALL**\"\n          ? \"**ALL**\"\n          : this.state.model.label;\n      const result = await httpClient.get(\n        server.STORE_ISSUE_URL +\n          \"/\" +\n          modelLabel +\n          \"/\" +\n          this.state.ItemNo[0].label +\n          \"/\" +\n          this.state.startDate +\n          \"/\" +\n          this.state.finishDate\n      );\n\n      console.log(result);\n\n      if (\n        result.data &&\n        result.data.listRawData &&\n        result.data.listRawData[0]\n      ) {\n        const headers = Object.keys(result.data.listRawData[0][0]);\n        console.log(headers);\n\n        let rawData = result.data.listRawData;\n        console.log(rawData);\n\n        // Ensure that each item in rawData has the same structure\n        rawData = rawData.map((item) =>\n          headers.reduce((acc, header) => {\n            acc[header] = item[header] || null;\n            return acc;\n          }, {})\n        );\n\n        let rawData1 = result.data.listRawData;\n        console.log(rawData1);\n        for (let i = 1; i < rawData1.length; i++) {\n          rawData1[0].push(...rawData1[i]);\n        }\n        this.setState({ Raw_Dat: rawData1[0] });\n        console.log(this.state.Raw_Dat);\n\n        this.setState({\n          report: result.data.result,\n          headers: headers, // Ensure that headers are set in the state\n          isDisable: false,\n        });\n      } else {\n        console.error(\"Invalid data structure in the API response.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  getmodel = async () => {\n    const array = await httpClient.get(server.MODEL_NAME_STORE_ISSUE_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.ModelGroup,\n    }));\n    this.setState({ listmodel: options });\n  };\n\n  getItemNO = async () => {\n    const modelLabel =\n      this.state.model.label === \"**ALL**\" ? \"**ALL**\" : this.state.model.label;\n    const array = await httpClient.get(\n      server.ITEMNO__NAME_STORE_ISSUE_URL + \"/\" + modelLabel\n    );\n    const options = array.data.result.map((d) => ({\n      label: d.ItemNo,\n    }));\n    this.setState({ listItemNo: options });\n  };\n\n  renderreport1 = () => {\n    const { headers, report } = this.state;\n    console.log(headers);\n    console.log(report);\n    if (report != null && report.length > 0) {\n      return report.map((item, index) => (\n        <tr key={index} align=\"center\">\n        {headers.map((header, headerIndex) => (\n          <React.Fragment key={headerIndex}>\n            {header != \"Model_Name\" && header != \"Part_Name\" && header != \"Item_No\" && header != \"MO_Number\" && header != \"IQC_lot\" && header != \"Emp\" && header != \"MfgDate\" && header != \"DateTime_store\" && header != \"Mold\"? (\n              <td align=\"right\">\n                {Number(item[header]).toLocaleString(undefined, {\n                  maximumFractionDigits: 2,\n                })}\n              </td>\n            ) : (\n              <td align=\"left\" style={{ fontWeight: item[header] === \"TOTAL\" ? 'bold' : 'normal' }}>\n  {item[header]}\n</td>\n            )}\n          </React.Fragment>\n        ))}\n      </tr>\n      ));\n    } else {\n      return null;\n    }\n  };\n  \n  \n\n  render() {\n    console.log(this.state.model);\n    console.log(this.state.ModelGroup);\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Daily Store Issue</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">Daily Store Issue</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Select Parameter</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Model Name </label>\n                        <Select\n                          options={this.state.listmodel}\n                          value={this.state.model}\n                          onChange={async (e) => {\n                            await this.setState({ model: e });\n                            await this.getItemNO();\n                            await this.setState({\n                              ItemNo: [{ label: \"**ALL**\", value: \"**ALL**\" }],\n                            });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select model\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* //Select Critiria \"ItemNo\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Item No</label>\n                        <Select\n                          options={this.state.listItemNo}\n                          value={this.state.ItemNo[0]}\n                          onChange={async (e) => {\n                            await this.setState({ ItemNo: [e] }); // อัปเดต line ที่เลือก\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select ItemNo\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-2\">\n                      <div className=\"form-group\">\n                        <label> Select MfgDate &nbsp;</label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date\"\n                          // Disable the input if confirm is 'OK'\n                        />\n                      </div>\n                    </div>\n\n                    {/* Select Finish Date */}\n                    <div className=\"col-sm-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                          // Disable the input if confirm is 'OK'\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Model_Name.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Model_Name.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      <CSVLink\n                        data={this.state.Raw_Dat}\n                        filename={\"store_issue_\"+this.state.startDate +'to'+ this.state.startDate +\".csv\"}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <a\n                        style={{ marginTop: 30 }}\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"content\">\n                <div className=\"container-fluid\">\n                  <div className=\"card card-primary\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        {/* /.card-header */}\n                        <div\n                          className=\"card-body table-responsive p-0\"\n                   \n                          style={{ height: 600 ,\n                            zIndex: \"3\",\n                            position: \"relative\",\n                            zIndex: \"0\",}}\n                        >\n                          <table className=\" table  text-nowrap table-hover table-head-fixed\">\n                            <thead>\n                              <tr align=\"center\">\n                                {this.state.headers.map((header, index) => (\n                                  <th key={index} width=\"100\">\n                                    {header}\n                                  </th>\n                                ))}\n                              </tr>\n                            </thead>\n                            <tbody>{this.renderreport1()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Daily_store_issue;\n","import React, { Component } from \"react\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport { server } from \"../../constants\";\nimport Swal from \"sweetalert2\";\n\nclass REGISTER_Master extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      empNumber: \"\",\n      email: \"\",\n      password: \"\",\n      rePassword: \"\",\n      position: \"\",\n      secretCode: '', // Add secretCode to the component state\n    };\n   \n  }\n\n  \n\n  handleSecretCodeChange = (e) => {\n    this.setState({ secretCode: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // Your registration logic here\n  };\n\n  doRegister = async () => {\n    if (this.state.rePassword === this.state.password) {\n      let result = await httpClient.post(\n        server.REGISTER_Master_ML_URL,\n        this.state\n      );\n      console.log(result.data);\n      if (result.data.api_result === \"ok\") {\n        this.props.history.push(\"/login\");\n        Swal.fire({\n          icon: \"success\",\n          title: \"Success\",\n          type: \"success\",\n          text: \"Congratulations!,your registration has been successfully completed.\",\n        });\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          type: \"error\",\n          text: \"Error, account with this email or employee number already exists.\",\n        });\n      }\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Password do not match!\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"register-page\">\n        <div className=\"register-box\">\n          <div className=\"card card-outline card-primary\">\n            <div className=\"card-header text-center\">\n              <a href=\"../../index2.html\" className=\"h3\">\n                <b>Account Registration</b>\n              </a>\n            </div>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                this.doRegister();\n              }}\n            >\n              <div className=\"card-body\">\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Employee No.\"\n                    onChange={(e) => {\n                      this.setState({ empNumber: e.target.value });\n                    }}\n                    required\n                  />\n                  <div className=\"input-group-append\">\n                    <div className=\"input-group-text\">\n                      <span className=\"fas fa-user\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Full Name\"\n                    onChange={(e) => {\n                      this.setState({ username: e.target.value });\n                    }}\n                    required\n                  />\n                  <div className=\"input-group-append\">\n                    <div className=\"input-group-text\">\n                      <span className=\"fas fa-user\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Position (e.g. Engineer, QC)\"\n                    onChange={(e) => {\n                      this.setState({ position: e.target.value });\n                    }}\n                    required\n                  />\n                  <div className=\"input-group-append\">\n                    <div className=\"input-group-text\">\n                      <span className=\"fas fa-user\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    onChange={(e) => {\n                      this.setState({ email: e.target.value });\n                    }}\n                    required\n                  />\n                  <div className=\"input-group-append\">\n                    <div className=\"input-group-text\">\n                      <span className=\"fas fa-envelope\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Password\"\n                    onChange={(e) => {\n                      this.setState({ password: e.target.value });\n                    }}\n                    required\n                  />\n                  <div className=\"input-group-append\">\n                    <div className=\"input-group-text\">\n                      <span className=\"fas fa-lock\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Retype password\"\n                    onChange={(e) => {\n                      this.setState({ rePassword: e.target.value });\n                    }}\n                    required\n                  />\n                  <div className=\"input-group-append\">\n                    <div className=\"input-group-text\">\n                      <span className=\"fas fa-lock\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-8\">\n                    <div className=\"icheck-primary\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"agreeTerms\"\n                        name=\"terms\"\n                        defaultValue=\"agree\"\n                      />\n                      <label htmlFor=\"agreeTerms\">\n                        I agree to the <a href=\"terms\">Terms and Conditions</a>\n                      </label>\n                    </div>\n                  </div>\n                  {/* /.col */}\n                  <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"secretCode\">Secret Code:</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"secretCode\"\n            name=\"secretCode\"\n            placeholder=\"Enter Secret Code\"\n            value={this.state.secretCode}\n            onChange={this.handleSecretCodeChange}\n            required\n          />\n        </div>\n \n      </form>\n      {this.state.secretCode === 'mmddyy' && (\n          <div className=\"col-4\">\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">\n              Register\n            </button>\n          </div>\n        )}\n                </div>\n\n                <a href=\"login.html\" className=\"text-center\">\n                  I already have a membership\n                </a>\n              </div>\n            </form>\n            {/* /.form-box */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default REGISTER_Master;\n","import React, { Component } from \"react\";\nimport { key, server } from \"../../constants\";\nimport { httpClient } from \"../../utils/HttpClient\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport { CSVLink } from \"react-csv\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nclass Trace_Dynamic_Parallelism extends Component {\n  constructor(props) {\n    super(props);\n\n    //set state\n    this.state = {\n      model: { label: \"**ALL**\" },\n      Line: [],\n      ItemNo: [{ label: \"**ALL**\" }],\n      report: [],\n      reportGraph: [],\n      xAxis: [],\n      yAxis1: [],\n      seriesY: [],\n      series2: [],\n      seriesCleanroom: [],\n      options: {},\n      options2: {},\n      chart: [],\n\n      Raw_Dat: [],\n\n      startDate: moment().format(\"YYYY-MM-DD HH:mm:00\"),\n      finishDate: moment().format(\"YYYY-MM-DD HH:mm:00\"),\n      listItemNo: [],\n      listModelName: [],\n      listmodel: [],\n      listLine: [],\n      headers: [],\n\n      optionSelected: null,\n      isDisable: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getLine();\n  };\n\n  \n  doGetDataReport = async () => {\n    try {\n      const formattedStartDate = this.state.startDate.replace(\"T\", \" \");\n      const formattedFinishDate = this.state.finishDate.replace(\"T\", \" \");\n      const result = await httpClient.get(\n        server.Trace_Dynamic_URL +\n          \"/\" +\n          this.state.Line.label +\n          \"/\" +\n          formattedStartDate +\n          \"/\" +\n          formattedFinishDate\n      );\n\n      console.log(\"resule\", result);\n\n      if (\n        result.data &&\n        result.data.listRawData &&\n        result.data.listRawData[0]\n      ) {\n        const headers = Object.keys(result.data.listRawData[0][0]);\n        console.log(headers);\n\n        let rawData = result.data.listRawData;\n        console.log(rawData);\n\n        // Ensure that each item in rawData has the same structure\n        rawData = rawData.map((item) =>\n          headers.reduce((acc, header) => {\n            acc[header] = item[header] || null;\n            return acc;\n          }, {})\n        );\n\n        let rawData1 = result.data.listRawData;\n        console.log(rawData1);\n        for (let i = 1; i < rawData1.length; i++) {\n          rawData1[0].push(...rawData1[i]);\n        }\n        this.setState({ Raw_Dat: rawData1[0] });\n        console.log(this.state.Raw_Dat);\n\n        this.setState({\n          report: result.data.result,\n          headers: headers, // Ensure that headers are set in the state\n          isDisable: false,\n        });\n      } else {\n        console.error(\"Invalid data structure in the API response.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  getLine = async () => {\n    const array = await httpClient.get(server.LINE_TRACE_DYNAMIC_URL);\n    const options = array.data.result.map((d) => ({\n      label: d.Line,\n    }));\n    this.setState({ listLine: options });\n  };\n\n\n  renderreport1() {\n    return this.state.report.map((row, rowIndex) => (\n      <tr key={rowIndex} align=\"center\">\n        {this.state.headers.map((header, colIndex) => (\n          <td key={colIndex}>{row[header]}</td>\n        ))}\n      </tr>\n    ));\n  }\n\n\n  render() {\n    console.log(\"LINE\", this.state.Line);\n\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"content\" style={{ paddingTop: 70 }}>\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>Trace back Dynamic</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/Home\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\">\n                    Trace back Dynamic\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div class=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card card-primary card-outline\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <label>Trace back Dynamic</label>\n                  </h3>\n                </div>\n\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    {/* //Select Critiria \"model\" */}\n                    <div className=\"col-md-2\">\n                      <div className=\"form-group\">\n                        <label>Line </label>\n                        <Select\n                          options={this.state.listLine}\n                          value={this.state.Line}\n                          onChange={async (e) => {\n                            await this.setState({ Line: e });\n                          }}\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Select line\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-2\">\n                      <div className=\"form-group\">\n                        <label>Select Datetime &nbsp;</label>\n                        <input\n                          value={this.state.startDate}\n                          onChange={(e) => {\n                            this.setState({ startDate: e.target.value });\n                          }}\n                          type=\"datetime-local\" // Use datetime-local for both date and time\n                          className=\"form-control\"\n                          placeholder=\"Select Start Date and Time\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* Select Finish Date */}\n                    <div className=\"col-sm-2\">\n                      <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                          value={this.state.finishDate}\n                          onChange={(e) => {\n                            this.setState({ finishDate: e.target.value });\n                          }}\n                          type=\"datetime-local\"\n                          className=\"form-control\"\n                          placeholder=\"Select Finish Date\"\n                          // Disable the input if confirm is 'OK'\n                        />\n                      </div>\n                    </div>\n\n                    {/* Submit button */}\n                    <div className=\"col-md-1\">\n                      <button\n                        disabled={this.state.isDisable}\n                        // type=\"button\"\n                        // className=\"btn btn-info btn-flat\"\n                        onClick={(e) => {\n                          this.setState({ isDisable: true });\n                          // this.doGetDataReport();\n                          Swal.fire({\n                            icon: \"info\",\n                            title: \"Loading Data\",\n                            timer: 60000,\n                            allowOutsideClick: false,\n                            didOpen: async () => {\n                              Swal.showLoading();\n                              await this.doGetDataReport();\n                              Swal.close();\n                            },\n                          }).then(() => {\n                            if (this.state.report.length > 0) {\n                              if (this.state.report[0].Model.length > 0) {\n                                Swal.fire({\n                                  icon: \"success\",\n                                  title: \"Success\",\n                                  text: \"Data has been loaded successfully\",\n                                });\n                              } else if (\n                                this.state.report[0].Model.length == 0\n                              ) {\n                                Swal.fire({\n                                  icon: \"error\",\n                                  title: \"No production data\",\n                                  text: \"Please select other date\",\n                                });\n                              }\n                            \n                            } else {\n                              Swal.fire({\n                                icon: \"error\",\n                                title:\n                                  \"Data loading has encountered some error, please try again\",\n                              });\n                            }\n                          });\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        style={{ marginTop: 30 }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                    <div className=\"col-md-1\">\n                      \n                      <CSVLink\n                      \n                        data={this.state.Raw_Dat.map(item => {\n                          const modifiedItem = {};\n                          \n                          for (const key in item) {\n                            if (Object.prototype.hasOwnProperty.call(item, key)) {\n                              modifiedItem[key] = key === 'Line' ? \"L\" + String(item[key]) : String(item[key]);\n                            }\n                          }\n                          \n                          return modifiedItem;\n                        })}\n           \n\n                        filename={\n                          \"Trace_back_\" +\n                          this.state.startDate +\n                          \"to\" +\n                          this.state.startDate +\n                          \".csv\"\n                        }\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ marginTop: 30 }}\n                        >\n                          Download\n                        </button>\n                      </CSVLink>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <a\n                        style={{ marginTop: 30 }}\n                        href=\"/Home\"\n                        class=\"btn btn-primary\"\n                        role=\"button\"\n                        aria-pressed=\"true\"\n                      >\n                        Back\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n        \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Trace_Dynamic_Parallelism;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Home from \"./components/home\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\n\nimport ForgotPW from \"./components/forgotpassword\";\nimport ChangePW from \"./components/changepassword\";\n\n\nimport Daily_LAR_by_Model from './components/LARInspection/Daily_LAR_by_Model'\nimport Monthly_LAR_report_by_Model from \"./components/LARInspection/Monthly_LAR_report_by_Model\";\nimport Monthly_LAR_report_all_Model from './components/LARInspection/Monthly_LAR_report_all_Model'\nimport Product_hold_control from \"./components/QAInspection/Product_hold_control\";\nimport QA_lots_status from './components/QAInspection/QA_lots_status'\n\nimport Operator_tracking_data from \"./components/OPT/Operator_tracking_data\";\n\n\n\nimport Trace_back_function_test  from \"./components/QPM/Trace_back_function_test\";\nimport  Trace_back_shipment from \"./components/dodata/Trace_back_shipment\";\n\n\n\nimport ROTOR from \"./components/ROTOR\";\nimport MOTORDIM from \"./components/MOTORDIM\";\nimport MOTORDIMAI from \"./components/MOTORDIM/MOTORDIM_AiPress\";\nimport MOTORDIMRTB from \"./components/MOTORDIM/MOTORDIM_RTB\";\nimport MOTOREWMS from \"./components/MOTOREWMS\";\nimport MOTORHIPOT from \"./components/MOTORHIPOT\";\nimport MOTORHE from \"./components/MOTORHE\";\nimport STACKHEIGHT from \"./components/stack_height\";\n\nimport Traceback from \"./components/traceback\";\nimport dataRotor from \"./components/dataanalysis/dataRotor\";\n\nimport Information from \"./components/information\";\nimport dataanalysis from \"./components/dataanalysis\";\nimport dataML from \"./components/dataML\";\nimport dataML2 from \"./components/dataML/dataML2\";\nimport QAInspection from \"./components/QAInspection\";\n\nimport QAInspectionByQANo from \"./components/QAInspection/QAInspectionByQANo.\";\nimport Result from \"./components/register/Result\";\nimport Header from \"./components/header\";\nimport SideMenu from \"./components/sidemenu\";\nimport Footer from \"./components/footer\";\nimport { key, YES } from \"./constants\";\nimport GRotorLine from \"./components/GRotorLine/GRotorLine\";\nimport QCAlert from \"./components/QCAlert\";\nimport VMI from \"./components/VMI\";\nimport RejectByModel from \"./components/Rejection/Rejection\";\nimport RejectByQANO from \"./components/Rejection/RejectByQANo.\";\nimport MONTHLYQA from \"./components/monthlyQA/monthlyQA\";\nimport Vrecode from \"./components/Vrecode/Vrecode\";\n\n\n\nimport report_per_producion_team from './components/Rejection/report_per_producion_team'\nimport MQTByModel from \"./components/Rejection/MQTByModel\";\nimport MasterItemNO from \"./components/Master/MasterItemNO\";\nimport MasterSupplier from \"./components/Master/MasterSupplier\";\nimport MasterLine from \"./components/Master/MasterLine\";\n\nimport Associate_Rule_Mining from \"./components/Daily/Associate_Rule_Mining\";\nimport DailyML1 from \"./components/Daily/DailyML1\";\nimport Daily_Report_Packing from \"./components/packing/Daily_Report_Packing\";\nimport Rejectbyteam from \"./components/Rejectbyteam/Rejectbyteam\";\nimport Output_Final_Before_QA from \"./components/OutPutCo2/Output_Final_Before_QA\";\nimport Production_hold_record from \"./components/OutPutCo2/Production_hold_record\";\nimport Report from \"./components/report/report\";\nimport Output_Final_after_QA from \"./components/AfterQa1/Output_Final_after_QA\";\nimport Shipmentdata from \"./components/Shipmentdata/Shipmentdata\";\nimport Packed_half_pallet from \"./components/Packedhalfpallet/Packed_half_pallet\";\nimport For_Inspection_tags_status from \"./components/QAInspection/For_Inspection_tags_status\";\n\n\nimport  Shipinfo from \"./components/shipinfo/shipinfo\";\nimport  updating from \"./components/home/updating\";\n\nimport  CheckData from \"./components/checkData/CheckData\";\nimport  Auto_machine_alarm_history from \"./components/MC_ERROR/Auto_machine_alarm_history\";\nimport  trace_back_ng from \"./components/trace_back_ng/trace_back_ng\";\nimport  MC_ERROR_test from \"./components/MC_ERROR/MC_ERROR_test\";\nimport  Request_label_printing_report from \"./components/Report_printlabal/Request_label_printing_report\";\nimport  KPIVranking from \"./components/KPIVranking/KPIVranking\";\nimport  MLRanking from \"./components/MLRanking/MLRanking\";\n\nimport  Month_Auto_machine_alarm_history from \"./components/MC_ERROR/Auto_machine_alarm_history_Month\";\n\nimport  Engineer from \"./components/sidemenu/Engineer\";\nimport  Quality from \"./components/sidemenu/Quality\";\nimport  Production from \"./components/sidemenu/Production\";\nimport  Data_Analysis from \"./components/sidemenu/Data_Analysis\";\nimport  PCMC from \"./components/sidemenu/PCMC\";\nimport  PE_MM from \"./components/sidemenu/PE_MM\";\nimport Master_ml from \"./components/QAInspection/Master_ml\";\nimport Daily_store_issue from \"./components/Daily_store_issue/Daily_store_issue\";\n\n\nimport register_Master from \"./components/register/register_Master\";\nimport trace_Dynamic from \"./components/trace_Dynamic_Parallelism/trace_Dynamic_Parallelism\";\n\nconst SecuredRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isLoggedIn() === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nconst SecuredLVRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isLoggedIn() === true ? (\n        isPowerUser() === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/home\" />\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nconst isPowerUser = () => {\n  if (\n    // localStorage.getItem(key.USER_LV) === \"MIC_Member\" ||\n    localStorage.getItem(key.USER_LV) === \"admin\"\n    // localStorage.getItem(key.USER_LV) === \"MIC_head\"\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst isLoggedIn = () => {\n  return localStorage.getItem(key.LOGIN_PASSED) === YES;\n};\n\nexport default class App extends Component {\n  // rcc = react component ใช้ export render ออกหน้าเว็บ\n  redirectToLogin = () => {\n    return <Redirect to=\"/login\" />;\n  };\n\n  render() {\n    return (\n      \n      <Router>\n             <Header\n \n        />\n        {\" \"}\n\n      \n        <div>\n          <SideMenu />\n          {window.location.pathname === \"/home\" && <SideMenu />}\n          <Switch>\n                   \n            <SecuredRoute path=\"/home\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/forgot\" component={ForgotPW} />\n            <Route path=\"/changepassword\" component={ChangePW} />\n\n            {/* Quality */}\n            {/* Monitoring */}\n            <SecuredRoute path=\"/QA_lots_status\" component={QA_lots_status} />\n            {/* Report */}\n            <SecuredRoute path=\"/monthlyQA\" component={MONTHLYQA} />\n            <SecuredRoute path=\"/Daily_LAR_by_Model\" component={Daily_LAR_by_Model} />  \n            <SecuredRoute path=\"/Monthly_LAR_report_all_Model\" component={Monthly_LAR_report_all_Model} />\n            <SecuredRoute path=\"/Monthly_LAR_report_by_Model\" component={Monthly_LAR_report_by_Model} /> \n            <SecuredRoute path=\"/Product_hold_control\" component={Product_hold_control} /> \n\n\n            {/* PE/MM */}\n            <SecuredRoute path=\"/Auto_machine_alarm_history\" component={Auto_machine_alarm_history} /> \n\n            {/* Operator */}\n            <SecuredRoute path=\"/report_per_producion_team\" component={report_per_producion_team} />\n            <SecuredRoute path=\"/Operator_tracking_data\" component={Operator_tracking_data} />\n            <SecuredRoute path=\"/Request_label_printing_report\" component={Request_label_printing_report} /> \n\n\n            <SecuredRoute path=\"/ROTOR\" component={ROTOR} />\n            <SecuredRoute path=\"/MOTORDIM\" component={MOTORDIM} />\n            <SecuredRoute path=\"/MOTORDIMAI\" component={MOTORDIMAI} />\n            <SecuredRoute path=\"/MOTORDIMRTB\" component={MOTORDIMRTB} />\n            <SecuredRoute path=\"/MOTOREWMS\" component={MOTOREWMS} />\n            <SecuredRoute path=\"/MOTORHIPOT\" component={MOTORHIPOT} />\n            <SecuredRoute path=\"/MOTORHE\" component={MOTORHE} />\n            <SecuredRoute path=\"/STACKHEIGHT\" component={STACKHEIGHT} />\n            <SecuredRoute path=\"/traceback\" component={Traceback} />\n            <SecuredLVRoute path=\"/information\" component={Information} />\n            <SecuredRoute path=\"/Result\" component={Result} />\n            <SecuredRoute path=\"/dataanalysis\" component={dataanalysis} />\n            <SecuredRoute path=\"/dataML\" component={dataML} />\n            <SecuredRoute path=\"/dataML2\" component={dataML2} />\n            <SecuredRoute path=\"/dataRotor\" component={dataRotor} />\n            <SecuredRoute path=\"/QAInspection\" component={QAInspection} />\n            {/* <SecuredRoute path=\"/QAInspectionByQANo\" component={QAInspectionByQANo} /> */}\n            <SecuredRoute path=\"/GRLine\" component={GRotorLine} />\n            <SecuredRoute path=\"/QCAlert\" component={QCAlert} />\n            <SecuredRoute path=\"/VMI\" component={VMI} />\n            <SecuredRoute path=\"/Rejection\" component={RejectByModel} />\n            {/* <SecuredRoute path=\"/RejectByQANO\" component={RejectByQANO} /> */}\n      \n            <SecuredRoute path=\"/Vrecode\" component={Vrecode} />\n         \n\n            <SecuredRoute path=\"/MQTByModel\" component={MQTByModel} />\n            <SecuredRoute path=\"/MasterItemNO\" component={MasterItemNO} />\n            <SecuredRoute path=\"/MasterSupplier\" component={MasterSupplier} />\n            <SecuredRoute path=\"/MasterLine\" component={MasterLine} />\n     \n            <SecuredRoute path=\"/Associate_Rule_Mining\" component={Associate_Rule_Mining} />\n            <SecuredRoute path=\"/DailyML1\" component={DailyML1} />\n            <SecuredRoute path=\"/Daily_Report_Packing\" component={Daily_Report_Packing} /> \n            <SecuredRoute path=\"/Rejectbyteam\" component={Rejectbyteam} /> \n            <SecuredRoute path=\"/Output_Final_Before_QA\" component={Output_Final_Before_QA} /> \n            <SecuredRoute path=\"/Production_hold_record\" component={Production_hold_record} /> \n            <SecuredRoute path=\"/report\" component={Report} /> \n            <SecuredRoute path=\"/Output_Final_after_QA\" component={Output_Final_after_QA } /> \n            <SecuredRoute path=\"/Shipmentdata\" component={Shipmentdata} /> \n            <SecuredRoute path=\"/Packed_half_pallet\" component={Packed_half_pallet} /> \n            <SecuredRoute path=\"/For_Inspection_tags_status\" component={For_Inspection_tags_status} /> \n\n            <SecuredRoute path=\"/Trace_back_function_test\" component={Trace_back_function_test} /> \n            <SecuredRoute path=\"/Trace_back_shipment\" component={Trace_back_shipment} /> \n            <SecuredRoute path=\"/SHIPINFO\" component={Shipinfo} /> \n            <SecuredRoute path=\"/updating\" component={updating} /> \n         \n            <SecuredRoute path=\"/CheckData\" component={CheckData} /> \n\n            <SecuredRoute path=\"/MC_ERROR_test\" component={MC_ERROR_test} />       \n\n            <SecuredRoute path=\"/KPIVranking\" component={KPIVranking} /> \n            <SecuredRoute path=\"/MLRanking\" component={MLRanking} /> \n            <SecuredRoute path=\"/Engineer\" component={Engineer} /> \n            <SecuredRoute path=\"/Quality\" component={Quality} /> \n            <SecuredRoute path=\"/Production\" component={Production} /> \n            <SecuredRoute path=\"/Data_Analysis\" component={Data_Analysis} /> \n            <SecuredRoute path=\"/PCMC\" component={PCMC} /> \n            <SecuredRoute path=\"/PE_MM\" component={PE_MM} /> \n            <SecuredRoute path=\"/trace_back_ng\" component={trace_back_ng} /> \n            <SecuredRoute path=\"/Auto_machine_alarm_history_Month\" component={Month_Auto_machine_alarm_history} /> \n            <SecuredRoute path=\"/Master_ml\" component={Master_ml} /> \n            <SecuredRoute path=\"/register_Master\" component={register_Master} /> \n            <SecuredRoute path=\"/Daily_store_issue\" component={Daily_store_issue} /> \n            <SecuredRoute path=\"/trace_Dynamic\" component={trace_Dynamic} /> \n\n            <Route exact={true} path=\"/\" component={this.redirectToLogin} />\n            <Route exact={true} path=\"*\" component={this.redirectToLogin} />\n\n           \n          </Switch>{\" \"}\n                  \n          <Footer />\n        </div>\n              \n      </Router>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\") // index เอา app ไปยัดใน root\n);\n\nreportWebVitals();\n"],"sourceRoot":""}